2022-01-04 02:12:45,449 DEBUG asyncio Using selector: EpollSelector
2022-01-04 02:12:50,822 DEBUG quic [0000000000000002] Network path ('127.0.0.1', 4987) discovered
2022-01-04 02:12:50,823 DEBUG quic [0000000000000002] QuicConnectionState.FIRSTFLIGHT -> QuicConnectionState.CONNECTED
2022-01-04 02:12:50,829 DEBUG quic [0000000000000002] TLS State.SERVER_EXPECT_CLIENT_HELLO -> State.SERVER_EXPECT_FINISHED
2022-01-04 02:12:51,333 DEBUG quic [0000000000000002] Loss detection triggered
2022-01-04 02:12:51,450 DEBUG quic [0000000000000002] Discarding epoch Epoch.INITIAL
2022-01-04 02:12:51,451 DEBUG quic [0000000000000002] TLS State.SERVER_EXPECT_FINISHED -> State.SERVER_POST_HANDSHAKE
2022-01-04 02:12:51,451 DEBUG quic [0000000000000002] Discarding epoch Epoch.HANDSHAKE
2022-01-04 02:12:51,451 INFO quic [0000000000000002] ALPN negotiated protocol hq-29
2022-01-04 02:12:51,451 DEBUG quic [0000000000000002] Network path ('127.0.0.1', 4987) validated by handshake
2022-01-04 02:12:51,793 DEBUG quic [0000000000000002] Stream 8 created by peer
2022-01-04 02:12:51,794 INFO quic [0000000000000002] HTTP request GET /index.html
2022-01-04 02:12:52,667 DEBUG quic [0000000000000002] Stream 4 created by peer
2022-01-04 02:12:52,667 DEBUG quic [0000000000000002] Peer switching to CID 001def378da418a6 (1)
2022-01-04 02:12:52,667 INFO quic [0000000000000002] HTTP request GET /index.html
2022-01-04 02:12:53,257 DEBUG quic [0000000000000002] Stream 12 created by peer
2022-01-04 02:12:53,258 INFO quic [0000000000000002] HTTP request GET /index.html
2022-01-04 02:12:54,008 DEBUG quic [0000000000000002] Stream 16 created by peer
2022-01-04 02:12:54,008 DEBUG quic [0000000000000002] Peer switching to CID f0dbeb5daf0c9c6b (0)
2022-01-04 02:12:54,008 INFO quic [0000000000000002] HTTP request GET /index.html
2022-01-04 02:12:54,890 DEBUG quic [0000000000000002] Peer switching to CID 001def378da418a6 (1)
2022-01-04 02:12:56,050 INFO quic [0000000000000002] Connection close code 0x0, reason 0
2022-01-04 02:12:56,050 DEBUG quic [0000000000000002] QuicConnectionState.CONNECTED -> QuicConnectionState.DRAINING
