[infinite-loop-picoquic-draft27]
; Directory where the binary implementation is located
binary-dir=$IMPLEM_DIR/picoquic
; Name of the binary implementation 
binary-name=./picoquicdemo
; Interface to use parameter
interface=-e
; Interface value to use parameter
interface-value=implem
; Source to use parameter
source=
; Source value to use parameter
source-value=
; Source format
source-format=[port] [port-value]
; Port to use parameter
port=-p
; Use localhost
localhost=false
; Port value to use parameter
port-value=4443
; Parameter to the certificate file
cert-param=-c
; Path to the certificate file
cert-file=$IMPLEM_DIR/certs/cert.pem
; Parameter to the private key file
key-param=
; Path to the private key file
key-file=
; Parameter to the root certificate file
root-cert-param=
; Path to the root certificate file
root-cert-file=
; Parameter to the log file
log-param=-l
; Path to the log file
log-file="n"
; Parameter to the qlog file
qlog-param=
; Path to the qlog file
qlog-file=
; Parameter to the secret key file
secret-key-param=-k
; Path to the secret key file
secret-key-file=$IMPLEM_DIR/certs/key.pem
; Verbosity parameter
verbosity=
; ALPN parameter
alpn=-a
; ALPN parameter value
alpn-value=ALPN
; QUIC version parameter
version=
; QUIC version parameter value
version-value=
; Addition parameters
addition-parameters=-D -L
; Retry parameter
retry=-r
; 0-RTT
zero-rtt=-z

; PicoQUIC demo client and server
; Usage: picoquicdemo <options> [server_name [port [scenario]]] 
;   For the client mode, specify server_name and port.
;   For the server mode, use -p to specify the port.
; Options:
;   -c file               cert file (default: certs/cert.pem)
;   -e if                 Send on interface (default: -1)
;                            -1: receiving interface
;                             0: routing lookup
;                             n: ifindex
;   -f migration_mode     Force client to migrate to start migration:
;                         -f 1  test NAT rebinding,
;                         -f 2  test CNXID renewal,
;                         -f 3  test migration to new address.
;   -h                    This help message
;   -i <src mask value>   Connection ID modification: (src & ~mask) || val
;                         Implies unconditional server cnx_id xmit
;                           where <src> is int:
;                             0: picoquic_cnx_id_random
;                             1: picoquic_cnx_id_remote (client)
;                             2: same as 0, plus encryption of unmasked data
;                             3: same as 0, plus encryption of all data
;                         val and mask must be hex strings of same length, 4 to 18
;   -k file               key file (default: certs/key.pem)
;   -K file               ESNI private key file (default: don't use ESNI)
;   -E file               ESNI RR file (default: don't use ESNI)
;   -C cipher_suite_id    specify cipher suite (e.g. -C 20 = chacha20)
;   -o folder             Folder where client writes downloaded files,
;                         defaults to current directory.
;   -w folder             Folder containing web pages served by server
;   -l file               Log file, Log to stdout if file = "n". No logging if absent.
;   -L                    Log all packets. If absent, log stops after 100 packets.
;   -p port               server port (default: 4443)
;   -m mtu_max            Largest mtu value that can be tried for discovery
;   -n sni                sni (default: server name)
;   -a alpn               alpn (default function of version)
;   -r                    Do Reset Request
;   -s <64b 64b>          Reset seed
;   -t file               root trust file
;   -u nb                 trigger key update after receiving <nb> packets on client
;   -v version            Version proposed by client, e.g. -v ff000012
;   -z                    Set TLS zero share behavior on client, to force HRR.
;   -1                    Once: close the server after processing 1 connection.
;   -S solution_dir       Set the path to the source files to find the default files
;   -I length             Length of CNX_ID used by the client, default=8
;   -G cc_algorithm       Use the specified congestion control algorithm:
;                         reno, cubic or fast. Defaults to cubic.
;   -D                    no disk: do not save received files on disk.
;   -Q                    send a large client hello in order to test post quantum
;                         readiness.

; The scenario argument specifies the set of files that should be retrieved,
; and their order. The syntax is:
;   *{[<stream_id>':'[<previous_stream>':'[<format>:]]]path;}
; where:
;   <stream_id>:          The numeric ID of the QUIC stream, e.g. 4. By default, the
;                         next stream in the logical QUIC order, 0, 4, 8, etc.  <previous_stream>:    The numeric ID of the previous stream. The GET command will
;                         be issued after that stream's transfer finishes. By default,
;                         previous stream in this scenario.
;   <format>:             Whether the received file should be written to disc as
;                         binary(b) or text(t). Defaults to text.
;   <path>:               The name of the document that should be retrieved
; If no scenario is specified, the client executes the default scenario.