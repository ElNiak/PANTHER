version: '3.8'

services:
  {% for service_name, service in services.items() %}
  {{ service_name }}:
    image: {{ service.implementation }}_{{ service.version }}_panther:latest
    container_name: {{ service_name }}
    ports:
      {% for port in service.ports %}
      - "{{ port }}"
      {% endfor %}
    {% if service.role == 'client' %}
    depends_on:
      - {{ service.target }}
        # condition: service_healthy
    {% endif %}
    # {% if service.role == 'server' %}
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:{{ service.healthcheck_port }}/health"]
    #   interval: 5s
    #   timeout: 2s
    #   retries: 5
    #   start_period: 5s
    # {% endif %}
    environment:
      ROLE: {{ service.role }}
      {% if service.role == 'client' %}
      TARGET: {{ service.target }}
      MESSAGE: "{{ service.message }}"
      {% endif %}
    tty: true
    stdin_open: true
    working_dir: "{{ deployment_info[service_name]['working_dir'] }}"
    command: 
      - {{ deployment_info[service_name]['command'] }}
    volumes:
      - "{{ log_dir | realpath  }}/{{ service_name }}/:/app/logs/"
      {% for volume in deployment_info[service_name]['volumes'] %}
      - "{{ volume.local | realpath }}:{{ volume.container }}"
      {% endfor %}
    networks:
      panther_network:
        aliases: 
          - {{ service_name }}
  {% endfor %}

networks:
  panther_network:
    driver: bridge
