# plugins/environments/docker_compose/templates/docker-compose-template.j2

version: '3.8'

services:
  {% for service_name, service in services.items() %}
  {{ service_name }}:
    image: {{ service.implementation }}:{{ service.version }}
    container_name: {{ service_name }}
    ports:
      {% for port in service.ports %}
      - "{{ port }}"
      {% endfor %}
    environment:
      ROLE: {{ service.parameters.role }}
      VERBOSITY: {{ service.parameters.verbosity }}
      {% if service.parameters.role == 'client' %}
      TARGET: {{ service.parameters.target }}
      MESSAGE: "{{ service.parameters.message }}"
      CONNECT_TIMEOUT: {{ service.parameters.connect_timeout }}
      ticket-file: "{{ service.parameters.ticket-file }}"
      initial-version: "{{ service.parameters.initial-version }}"
      cert-file: "{{ service.parameters.cert-file }}"
      key-file: "{{ service.parameters.key-file }}"
      alpn-value: "{{ service.parameters.alpn-value }}"
      interface-value: "{{ service.parameters.interface-value }}"
      destination-value: "{{ service.parameters.destination-value }}"
      {% elif service.parameters.role == 'server' %}
      qlog-file: "{{ service.parameters.qlog-file }}"
      initial-version: "{{ service.parameters.initial-version }}"
      cert-file: "{{ service.parameters.cert-file }}"
      key-file: "{{ service.parameters.key-file }}"
      alpn-value: "{{ service.parameters.alpn-value }}"
      interface-value: "{{ service.parameters.interface-value }}"
      source-value: "{{ service.parameters.source-value }}"
      {% endif %}
    command: "{{ deployment_commands[service_name] }}"
    networks:
      - panther_network
  {% endfor %}

networks:
  panther_network:
    driver: bridge
