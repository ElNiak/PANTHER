logging:
  level: DEBUG
  format: "%(asctime)s [%(levelname)s] - %(module)s - %(message)s"
paths:
  output_dir: "outputs"
  log_dir: "outputs/logs"
  config_dir: "configs"
  plugin_dir: "plugins"
docker:
  build_docker_image: True
generate_new_certificates: True  
tests:
  - name: "QUIC Client-Server Communication Test I"
    description: "Verify that the Picoquic client can communicate with the Picoquic server over Docker Compose network."
    protocol: "quic"  # Protocol name should match the folder name in plugins/
    network_environment: "docker_compose"  # Environment plugin name
    execution_environment: None 
    services:
      picoquic_server:
        name: "picoquic_server"  # Added 'name' key
        implementation: "picoquic" # parameters are presents in folder plugins/implementations/quic/picoquic/config.yaml
        version: "rfc9000"
        type: "iut"
        role: "server"
        ports:
          - "4443:4443"
          - "8080:8080"  # Health check endpoint
      picoquic_client:
        name: "picoquic_client"  # Added 'name' key
        implementation: "picoquic"
        version: "rfc9000"
        role: "client"
        type: "iut"
        target: "picoquic_server"  # Docker Compose service name
        ports:
          - "5000:5000"  # Example port if needed
          - "8081:8081"  # Changed to avoid port conflict
    steps:
      # record_pcap: True
      wait:
        duration: 20  # seconds to wait during the test
      # record_pcap: False
    assertions:
      - type: "service_responsive"
        service: "picoquic_server"
        endpoint: "8080/health"  # Adjust based on health endpoint
        expected_status: 200
      - type: "service_responsive"
        service: "picoquic_client"
        endpoint: "8081/health"  # Adjust based on health endpoint
        expected_status: 200

  - name: "QUIC Client-Server Communication Test II"
    description: "Verify that the Picoquic client can communicate with the Picoquic server over Docker Compose network."
    protocol: "quic"  # Protocol name should match the folder name in plugins/
    network_environment: "docker_compose"  # Environment plugin name
    execution_environment: None 
    services:
      picoquic_server:
        name: "picoquic_server"  # Added 'name' key
        type: "iut"
        implementation: "picoquic" # parameters are presents in folder plugins/implementations/quic/picoquic/config.yaml
        version: "rfc9000"
        role: "server"
        ports:
          - "4443:4443"
          - "8080:8080"  # Health check endpoint
      picoquic_client:
        name: "picoquic_client"  # Added 'name' key
        implementation: "picoquic"
        type: "iut"
        version: "rfc9000"
        role: "client"
        target: "picoquic_server"  # Docker Compose service name
        ports:
          - "5000:5000"  # Example port if needed
          - "8081:8081"  # Changed to avoid port conflict
    steps:
      # record_pcap: True
      wait:
        duration: 20  # seconds to wait during the test
      # record_pcap: False
    assertions:
      - type: "service_responsive"
        service: "picoquic_server"
        endpoint: "8080/health"  # Adjust based on health endpoint
        expected_status: 200
      - type: "service_responsive"
        service: "picoquic_client"
        endpoint: "8081/health"  # Adjust based on health endpoint
        expected_status: 200
  
  - name: "QUIC Client-Server Communication Test III"
    description: "Verify that the Picoquic client can communicate with the Picoquic server over Docker Compose network."
    protocol: "quic"  # Protocol name should match the folder name in plugins/
    network_environment: "docker_compose"  # Environment plugin name
    execution_environment: None 
    services:
      picoquic_server:
        name: "picoquic_server"  # Added 'name' key
        implementation: "picoquic" # parameters are presents in folder plugins/implementations/quic/picoquic/config.yaml
        version: "rfc9000"
        type: "iut"
        role: "server"
        ports:
          - "4443:4443"
          - "8080:8080"  # Health check endpoint
      ivy_client:
        name: "ivy_client"  # Added 'name' key
        implementation: "ivy"
        protocol: "quic"
        version: "rfc9000"
        role: "client"
        type: "tester"
        target: "picoquic_server"  # Docker Compose service name
        ports:
          - "5000:5000"  # Example port if needed
          - "8081:8081"  # Changed to avoid port conflict
    steps:
      # record_pcap: True
      wait:
        duration: 20  # seconds to wait during the test
      # record_pcap: False
    assertions:
      - type: "service_responsive"
        service: "picoquic_server"
        endpoint: "8080/health"  # Adjust based on health endpoint
        expected_status: 200
      - type: "service_responsive"
        service: "ivy_client"
        endpoint: "8081/health"  # Adjust based on health endpoint
        expected_status: 200
        