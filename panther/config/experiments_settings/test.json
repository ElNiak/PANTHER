{
    "experiment_id": "",  // Leave blank to auto-generate, or provide a unique ID
    "protocols": {
      "QUIC": {
        "clients": [
          {
            "implementation": "quiche",  // Only implementation name is needed
            "params": {
              "host": "client-quiche.local",
              "port": 4433
            }
          },
          {
            "implementation": "quinn",
            "params": {
              "host": "client-quinn.local",
              "port": 4434
            }
          }
        ],
        "servers": [
          {
            "implementation": "quiche",
            "params": {
              "host": "server-quiche.local",
              "port": 4433
            }
          },
          {
            "implementation": "quic-go",
            "params": {
              "host": "server-quicgo.local",
              "port": 4434
            }
          }
        ]
      },
      "HTTP": {
        "clients": [
          {
            "implementation": "curl",
            "params": {
              "host": "client-http.local",
              "port": 80
            }
          }
        ],
        "servers": [
          {
            "implementation": "nginx",
            "params": {
              "host": "server-http.local",
              "port": 80
            }
          }
        ]
      }
    },
    "connections": [
      {
        "source_protocol": "HTTP",
        "source_client": "curl",
        "source_params": {
          "host": "client-http.local",
          "port": 80
        },
        "destination_protocol": "QUIC",
        "destination_server": "quiche",
        "destination_params": {
          "host": "server-quiche.local",
          "port": 4433
        }
      }
    ],
    "experiment_parameters": {
      "max_retries": 3,
      "timeout": 300,
      "logging_level": "DEBUG"
    },
    "protocol_parameters": {
      "QUIC": {
        "congestion_control": "cubic",
        "enable_tls": true
      },
      "HTTP": {
        "keep_alive": true,
        "max_connections": 10
      }
    },
    "environment": {
      "type": "docker",
      "network": "bridge",
      "volumes": ["/data:/data", "/logs:/logs"]
    }
  }
  