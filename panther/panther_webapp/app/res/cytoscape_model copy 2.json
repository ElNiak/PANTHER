{
    "quic_server_test.ivy": [
        {
            "actions": {
                "line": 55,
                "action_name": "_finalize",
                "implementation": [
                    {
                        "line": 55,
                        "file": "quic_server_test.ivy",
                        "instruction": "    # chris TODO \n"
                    },
                    {
                        "line": 56,
                        "file": "quic_server_test.ivy",
                        "instruction": "    require is_no_error;\n"
                    },
                    {
                        "line": 57,
                        "file": "quic_server_test.ivy",
                        "instruction": "    require conn_total_data(the_cid) > 0;\n"
                    },
                    {
                        "line": 58,
                        "file": "quic_server_test.ivy",
                        "instruction": "    #call \n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": null,
                "exported": true,
                "events": false
            }
        }
    ],
    "quic_transport_parameters.ivy": {
        "ack_delay_exponent": [
            {
                "name": "exponent_8",
                "type": "microsecs"
            }
        ],
        "active_connection_id_limit": [
            {
                "name": "stream_pos_32",
                "type": "stream_pos"
            }
        ],
        "disable_active_migration": [],
        "enable_time_stamp": [
            {
                "name": "stream_pos_32",
                "type": "stream_pos"
            }
        ],
        "grease_quic_bit": [],
        "initial_max_data": [
            {
                "name": "stream_pos_32",
                "type": "stream_pos"
            }
        ],
        "initial_max_stream_data_bidi_local": [
            {
                "name": "stream_pos_32",
                "type": "stream_pos"
            }
        ],
        "initial_max_stream_data_bidi_remote": [
            {
                "name": "stream_pos_32",
                "type": "stream_pos"
            }
        ],
        "initial_max_stream_data_uni": [
            {
                "name": "stream_pos_32",
                "type": "stream_pos"
            }
        ],
        "initial_max_stream_id_bidi": [
            {
                "name": "stream_id_16",
                "type": "stream_id"
            }
        ],
        "initial_max_stream_id_uni": [
            {
                "name": "stream_id_16",
                "type": "stream_id"
            }
        ],
        "initial_source_connection_id": [
            {
                "name": "scid",
                "type": "cid"
            }
        ],
        "loss_bits": [
            {
                "name": "unknown",
                "type": "stream_pos"
            }
        ],
        "max_ack_delay": [
            {
                "name": "exponent_8",
                "type": "microsecs"
            }
        ],
        "max_idle_timeout": [
            {
                "name": "seconds_16",
                "type": "microsecs"
            }
        ],
        "max_packet_size": [
            {
                "name": "stream_pos_16",
                "type": "stream_pos"
            }
        ],
        "min_ack_delay": [
            {
                "name": "exponent_8",
                "type": "microsecs"
            }
        ],
        "original_destination_connection_id": [
            {
                "name": "dcid",
                "type": "cid"
            }
        ],
        "preferred_address": [
            {
                "name": "ip_addr",
                "type": "ip.addr,"
            },
            {
                "name": "ip_port",
                "type": "ip.port,"
            },
            {
                "name": "ip6_addr",
                "type": "ipv6.addr,"
            },
            {
                "name": "ip6_port",
                "type": "ipv6.port,"
            },
            {
                "name": "\tpcid_len",
                "type": "stream_pos,"
            },
            {
                "name": "pcid",
                "type": "cid,"
            },
            {
                "name": "pref_token",
                "type": "ipv6.addr"
            }
        ],
        "retry_source_connection_id": [
            {
                "name": "rcid",
                "type": "cid"
            }
        ],
        "stateless_reset_token": [
            {
                "name": "data_8",
                "type": "ipv6.addr"
            }
        ],
        "transport_parameter": [
            {
                "name": "actionset(p",
                "type": "this,s"
            }
        ],
        "unknown_ignore": [],
        "unknown_transport_parameter": [
            {
                "name": "unknown",
                "type": "stream_pos"
            }
        ],
        "version_information": [
            {
                "name": "chosen_version",
                "type": "version,"
            },
            {
                "name": "other_version",
                "type": "versions_bv"
            }
        ]
    },
    "quic_frame.ivy": [
        {
            "actions": {
                "line": 1992,
                "action_name": "acti_coid_check",
                "implementation": [
                    {
                        "line": 1992,
                        "file": "quic_frame.ivy",
                        "instruction": "    ok := true;\n"
                    },
                    {
                        "line": 1993,
                        "file": "quic_frame.ivy",
                        "instruction": "    var max : stream_pos := 0;\n"
                    },
                    {
                        "line": 1994,
                        "file": "quic_frame.ivy",
                        "instruction": "    var tp := trans_params(scid);\n"
                    },
                    {
                        "line": 1995,
                        "file": "quic_frame.ivy",
                        "instruction": "    if active_connection_id_limit.is_set(tp) {\n"
                    },
                    {
                        "line": 1996,
                        "file": "quic_frame.ivy",
                        "instruction": "        max := active_connection_id_limit.value(tp).stream_pos_32;\n"
                    },
                    {
                        "line": 1997,
                        "file": "quic_frame.ivy",
                        "instruction": "        ok := count <= max;\n"
                    },
                    {
                        "line": 1998,
                        "file": "quic_frame.ivy",
                        "instruction": "    };\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "ok",
                    "type": "bool"
                },
                "action_parameters": [
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "count",
                        "type": "stream_pos"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 1821,
                "action_name": "enqueue_frame",
                "implementation": [
                    {
                        "line": 1821,
                        "file": "quic_frame.ivy",
                        "instruction": "    queued_frames(scid) := queued_frames(scid).append(f);\n"
                    },
                    {
                        "line": 1822,
                        "file": "quic_frame.ivy",
                        "instruction": "    num_queued_frames(scid) := queued_frames(scid).end;\n"
                    },
                    {
                        "line": 1823,
                        "file": "quic_frame.ivy",
                        "instruction": "    queued_level(scid) := e;\n"
                    },
                    {
                        "line": 1824,
                        "file": "quic_frame.ivy",
                        "instruction": "    if ~probing {\n"
                    },
                    {
                        "line": 1825,
                        "file": "quic_frame.ivy",
                        "instruction": "        queued_non_probing(scid) := true;\n"
                    },
                    {
                        "line": 1826,
                        "file": "quic_frame.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 1827,
                        "file": "quic_frame.ivy",
                        "instruction": "    if ~(f isa frame.ack){ #& ~(f isa frame.padding){\n"
                    },
                    {
                        "line": 1828,
                        "file": "quic_frame.ivy",
                        "instruction": "        queued_non_ack(scid) := true;\n"
                    },
                    {
                        "line": 1829,
                        "file": "quic_frame.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 1830,
                        "file": "quic_frame.ivy",
                        "instruction": "    if  f isa frame.path_challenge {\n"
                    },
                    {
                        "line": 1831,
                        "file": "quic_frame.ivy",
                        "instruction": "        queued_challenge(scid) := true;\n"
                    },
                    {
                        "line": 1832,
                        "file": "quic_frame.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 1833,
                        "file": "quic_frame.ivy",
                        "instruction": "    if (f isa frame.connection_close) | (f isa frame.application_close) {\n"
                    },
                    {
                        "line": 1834,
                        "file": "quic_frame.ivy",
                        "instruction": "        queued_close(scid) := true;\n"
                    },
                    {
                        "line": 1835,
                        "file": "quic_frame.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 1836,
                        "file": "quic_frame.ivy",
                        "instruction": "#Hamid\n"
                    },
                    {
                        "line": 1837,
                        "file": "quic_frame.ivy",
                        "instruction": "    if ~(f isa frame.ack) & ~(f isa frame.connection_close) { #& ~(f isa frame.padding){ & ~queued_ack_eliciting(scid)\n"
                    },
                    {
                        "line": 1838,
                        "file": "quic_frame.ivy",
                        "instruction": "\t    queued_ack_eliciting(scid) := true;\n"
                    },
                    {
                        "line": 1839,
                        "file": "quic_frame.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 1840,
                        "file": "quic_frame.ivy",
                        "instruction": "#Hamid\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "f",
                        "type": "frame"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "probing",
                        "type": "bool"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 1844,
                "action_name": "enqueue_frame_rtt",
                "implementation": [
                    {
                        "line": 1844,
                        "file": "quic_frame.ivy",
                        "instruction": "    queued_frames_rtt(scid) := queued_frames_rtt(scid).append(f);\n"
                    },
                    {
                        "line": 1845,
                        "file": "quic_frame.ivy",
                        "instruction": "    num_queued_frames_rtt(scid) := queued_frames_rtt(scid).end;\n"
                    },
                    {
                        "line": 1846,
                        "file": "quic_frame.ivy",
                        "instruction": "    queued_level_rtt(scid) := e;\n"
                    },
                    {
                        "line": 1847,
                        "file": "quic_frame.ivy",
                        "instruction": "    if ~(f isa frame.ack){ #& ~(f isa frame.padding){\n"
                    },
                    {
                        "line": 1848,
                        "file": "quic_frame.ivy",
                        "instruction": "        queued_non_ack(scid) := true;\n"
                    },
                    {
                        "line": 1849,
                        "file": "quic_frame.ivy",
                        "instruction": "    };\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "f",
                        "type": "frame"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "probing",
                        "type": "bool"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "ack",
            "frame_object": [
                {
                    "name": "largest_acked",
                    "type": "pkt_num,"
                },
                {
                    "name": "ack_delay",
                    "type": "microsecs,"
                },
                {
                    "name": "ack_ranges",
                    "type": "range.arr"
                }
            ],
            "actions": {
                "line": 655,
                "action_name": "frame.ack.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.ack"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "ack_ecn",
            "frame_object": [
                {
                    "name": "largest_acked",
                    "type": "pkt_num,"
                },
                {
                    "name": "ack_delay",
                    "type": "microsecs,"
                },
                {
                    "name": "ack_ranges",
                    "type": "range.arr"
                }
            ],
            "actions": {
                "line": 714,
                "action_name": "frame.ack_ecn.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.ack_ecn"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "ack_frequency",
            "frame_object": [
                {
                    "name": "\t\t\tseq_num",
                    "type": "pkt_num,"
                },
                {
                    "name": "packet_tolerence",
                    "type": "stream_pos,"
                },
                {
                    "name": "update_max_ack_delay",
                    "type": "microsecs,"
                },
                {
                    "name": "ignore_order",
                    "type": "bool"
                }
            ],
            "actions": {
                "line": 1752,
                "action_name": "frame.ack_frequency.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.ack_frequency"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "application_close",
            "frame_object": [
                {
                    "name": "err_code",
                    "type": "error_code,"
                },
                {
                    "name": "reason_phrase_length",
                    "type": "stream_pos,"
                },
                {
                    "name": "reason_phrase",
                    "type": "stream_data"
                }
            ],
            "actions": {
                "line": 1254,
                "action_name": "frame.application_close.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.application_close"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "connection_close",
            "frame_object": [
                {
                    "name": "err_code",
                    "type": "error_code,"
                },
                {
                    "name": "frame_type",
                    "type": "error_code,"
                },
                {
                    "name": "reason_phrase_length",
                    "type": "stream_pos,"
                },
                {
                    "name": "reason_phrase",
                    "type": "stream_data"
                }
            ],
            "actions": {
                "line": 1200,
                "action_name": "frame.connection_close.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.connection_close"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "crypto",
            "frame_object": [
                {
                    "name": "offset",
                    "type": "stream_pos,"
                },
                {
                    "name": "length",
                    "type": "stream_pos,"
                },
                {
                    "name": "data",
                    "type": "stream_data"
                }
            ],
            "actions": {
                "line": 934,
                "action_name": "frame.crypto.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.crypto"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "data_blocked",
            "frame_object": [
                {
                    "name": "pos",
                    "type": "stream_pos"
                }
            ],
            "actions": {
                "line": 1356,
                "action_name": "frame.data_blocked.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.data_blocked"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "handle",
            "frame_object": [],
            "actions": {
                "line": 387,
                "action_name": "frame.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.ack"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "handshake_done",
            "frame_object": [],
            "actions": {
                "line": 1520,
                "action_name": "frame.handshake_done.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.handshake_done"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "malicious_handle",
            "frame_object": [],
            "actions": {
                "line": 1786,
                "action_name": "frame.malicious_frame.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.malicious_frame"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "max_data",
            "frame_object": [
                {
                    "name": "pos",
                    "type": "stream_pos"
                }
            ],
            "actions": {
                "line": 1437,
                "action_name": "frame.max_data.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.max_data"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "max_stream_data",
            "frame_object": [
                {
                    "name": "id",
                    "type": "stream_id,"
                },
                {
                    "name": "pos",
                    "type": "stream_pos"
                }
            ],
            "actions": {
                "line": 1293,
                "action_name": "frame.max_stream_data.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.max_stream_data"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "max_streams",
            "frame_object": [
                {
                    "name": "id",
                    "type": "stream_id"
                }
            ],
            "actions": {
                "line": 1107,
                "action_name": "frame.max_streams.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.max_streams"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "max_streams_bidi",
            "frame_object": [
                {
                    "name": "id",
                    "type": "stream_id"
                }
            ],
            "actions": {
                "line": 1137,
                "action_name": "frame.max_streams_bidi.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.max_streams_bidi"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "new_connection_id",
            "frame_object": [
                {
                    "name": "seq_num",
                    "type": "cid_seq,"
                },
                {
                    "name": "retire_prior_to",
                    "type": "cid_seq,"
                },
                {
                    "name": "length",
                    "type": "cid_length,"
                },
                {
                    "name": "scid",
                    "type": "cid,"
                },
                {
                    "name": "token",
                    "type": "reset_token"
                }
            ],
            "actions": {
                "line": 1568,
                "action_name": "frame.new_connection_id.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.new_connection_id"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "new_token",
            "frame_object": [
                {
                    "name": "length",
                    "type": "stream_pos,"
                },
                {
                    "name": "data",
                    "type": "stream_data"
                }
            ],
            "actions": {
                "line": 1725,
                "action_name": "frame.new_token.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.new_token"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "path_challenge",
            "frame_object": [
                {
                    "name": "data",
                    "type": "stream_data"
                }
            ],
            "actions": {
                "line": 1681,
                "action_name": "frame.path_challenge.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.path_challenge"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "path_response",
            "frame_object": [
                {
                    "name": "data",
                    "type": "stream_data"
                }
            ],
            "actions": {
                "line": 1703,
                "action_name": "frame.path_response.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.path_response"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "ping",
            "frame_object": [],
            "actions": {
                "line": 1462,
                "action_name": "frame.ping.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.ping"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "retire_connection_id",
            "frame_object": [
                {
                    "name": "seq_num",
                    "type": "cid_seq"
                }
            ],
            "actions": {
                "line": 1636,
                "action_name": "frame.retire_connection_id.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.retire_connection_id"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "rst_stream",
            "frame_object": [
                {
                    "name": "id",
                    "type": "stream_id,"
                },
                {
                    "name": "err_code",
                    "type": "error_code,"
                },
                {
                    "name": "final_offset",
                    "type": "stream_pos"
                }
            ],
            "actions": {
                "line": 1000,
                "action_name": "frame.rst_stream.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.rst_stream"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "stop_sending",
            "frame_object": [
                {
                    "name": "id",
                    "type": "stream_id,"
                },
                {
                    "name": "err_code",
                    "type": "error_code"
                }
            ],
            "actions": {
                "line": 1050,
                "action_name": "frame.stop_sending.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.stop_sending"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "stream",
            "frame_object": [
                {
                    "name": "off",
                    "type": "bool,"
                },
                {
                    "name": "len",
                    "type": "bool,"
                },
                {
                    "name": "fin",
                    "type": "bool,"
                },
                {
                    "name": "id",
                    "type": "stream_id,"
                },
                {
                    "name": "offset",
                    "type": "stream_pos,"
                },
                {
                    "name": "length",
                    "type": "stream_pos,"
                },
                {
                    "name": "data",
                    "type": "stream_data"
                }
            ],
            "actions": {
                "line": 817,
                "action_name": "frame.stream.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.stream"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "stream_data_blocked",
            "frame_object": [
                {
                    "name": "id",
                    "type": "stream_id,"
                },
                {
                    "name": "pos",
                    "type": "stream_pos"
                }
            ],
            "actions": {
                "line": 1329,
                "action_name": "frame.stream_data_blocked.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.stream_data_blocked"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "streams_blocked",
            "frame_object": [
                {
                    "name": "id",
                    "type": "cid"
                }
            ],
            "actions": {
                "line": 1389,
                "action_name": "frame.streams_blocked.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.streams_blocked"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "streams_blocked_bidi",
            "frame_object": [
                {
                    "name": "id",
                    "type": "cid"
                }
            ],
            "actions": {
                "line": 1405,
                "action_name": "frame.streams_blocked_bidi.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.streams_blocked_bidi"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "frame_name": "unknown_handle",
            "frame_object": [],
            "actions": {
                "line": 1480,
                "action_name": "frame.unknown_frame.handle",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "f",
                        "type": "frame.unknown_frame"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "seq_num",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 1918,
                "action_name": "stream_id_allowed",
                "implementation": [
                    {
                        "line": 1918,
                        "file": "quic_frame.ivy",
                        "instruction": "    ok := false;\n"
                    },
                    {
                        "line": 1919,
                        "file": "quic_frame.ivy",
                        "instruction": "    var tp := trans_params(dcid);\n"
                    },
                    {
                        "line": 1920,
                        "file": "quic_frame.ivy",
                        "instruction": "    var kind := get_stream_kind(id);\n"
                    },
                    {
                        "line": 1921,
                        "file": "quic_frame.ivy",
                        "instruction": "    var idhi : stream_id := id / 4;\n"
                    },
                    {
                        "line": 1922,
                        "file": "quic_frame.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 1923,
                        "file": "quic_frame.ivy",
                        "instruction": "    # if (zero_rtt_allowed & ~zero_rtt_sent) | e = quic_packet_type.zero_rtt { # TODO\n"
                    },
                    {
                        "line": 1924,
                        "file": "quic_frame.ivy",
                        "instruction": "    #     ok := idhi <= 20;\n"
                    },
                    {
                        "line": 1925,
                        "file": "quic_frame.ivy",
                        "instruction": "    # }\n"
                    },
                    {
                        "line": 1926,
                        "file": "quic_frame.ivy",
                        "instruction": "    # else \n"
                    },
                    {
                        "line": 1927,
                        "file": "quic_frame.ivy",
                        "instruction": "    if ~(is_client(dcid) <-> get_stream_role(id) = role.client) {  # if stream remotely initiated\n"
                    },
                    {
                        "line": 1928,
                        "file": "quic_frame.ivy",
                        "instruction": "        if kind = unidir {\n"
                    },
                    {
                        "line": 1929,
                        "file": "quic_frame.ivy",
                        "instruction": "            if initial_max_stream_id_uni.is_set(tp) {\n"
                    },
                    {
                        "line": 1930,
                        "file": "quic_frame.ivy",
                        "instruction": "                ok := idhi < (initial_max_stream_id_uni.value(tp).stream_id_16)  # [3]\n"
                    },
                    {
                        "line": 1931,
                        "file": "quic_frame.ivy",
                        "instruction": "            }\n"
                    },
                    {
                        "line": 1932,
                        "file": "quic_frame.ivy",
                        "instruction": "        } else {\n"
                    },
                    {
                        "line": 1933,
                        "file": "quic_frame.ivy",
                        "instruction": "            if initial_max_stream_id_bidi.is_set(tp) {\n"
                    },
                    {
                        "line": 1934,
                        "file": "quic_frame.ivy",
                        "instruction": "                ok := idhi < (initial_max_stream_id_bidi.value(tp).stream_id_16);  # [4]\n"
                    },
                    {
                        "line": 1935,
                        "file": "quic_frame.ivy",
                        "instruction": "            }\n"
                    },
                    {
                        "line": 1936,
                        "file": "quic_frame.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 1937,
                        "file": "quic_frame.ivy",
                        "instruction": "        ok := ok | max_stream_set(dcid,kind) & idhi < max_stream(dcid,kind);\n"
                    },
                    {
                        "line": 1938,
                        "file": "quic_frame.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 1939,
                        "file": "quic_frame.ivy",
                        "instruction": "    else  {\n"
                    },
                    {
                        "line": 1940,
                        "file": "quic_frame.ivy",
                        "instruction": "        ok := stream_seen(dcid, id); # TODO: locally initiated streams must have been seen!\n"
                    },
                    {
                        "line": 1941,
                        "file": "quic_frame.ivy",
                        "instruction": "    }\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "ok",
                    "type": "bool"
                },
                "action_parameters": [
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "id",
                        "type": "stream_id"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    }
                ],
                "exported": false,
                "events": false
            }
        }
    ],
    "quic_application.ivy": [
        {
            "actions": {
                "line": 53,
                "action_name": "app_send_event",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "s",
                        "type": "stream_id"
                    },
                    {
                        "name": "data",
                        "type": "stream_data"
                    },
                    {
                        "name": "pos",
                        "type": "stream_pos"
                    },
                    {
                        "name": "close",
                        "type": "bool"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 32,
                "action_name": "app_server_open_event",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 109,
                "action_name": "map_cids",
                "implementation": [
                    {
                        "line": 109,
                        "file": "quic_application.ivy",
                        "instruction": "    used_cid(dcid) := true;\n"
                    },
                    {
                        "line": 110,
                        "file": "quic_application.ivy",
                        "instruction": "    connected(dcid) := true;\n"
                    },
                    {
                        "line": 111,
                        "file": "quic_application.ivy",
                        "instruction": "    connected_to(dcid) := scid\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    }
                ],
                "exported": false,
                "events": false
            }
        }
    ],
    "quic_infer.ivy": [
        {
            "actions": {
                "line": 200,
                "action_name": "app_server_open_event_0rtt",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 199,
                "action_name": "app_server_open_event_1rtt",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 201,
                "action_name": "app_server_open_event_retry",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 202,
                "action_name": "app_server_open_event_vn",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 203,
                "action_name": "infer_frame",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "f",
                        "type": "frame"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 26,
                "action_name": "infer_tls_events",
                "implementation": [
                    {
                        "line": 88,
                        "file": "quic_infer.ivy",
                        "instruction": "    # Stream frames on id 0 indicate that a `tls_send_event` has occurred.\n"
                    },
                    {
                        "line": 89,
                        "file": "quic_infer.ivy",
                        "instruction": "    # TODO: ignore duplicate frames.\n"
                    },
                    {
                        "line": 90,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 91,
                        "file": "quic_infer.ivy",
                        "instruction": "    var scid := pkt.src_cid;\n"
                    },
                    {
                        "line": 92,
                        "file": "quic_infer.ivy",
                        "instruction": "    var dcid := pkt.dst_cid;\n"
                    },
                    {
                        "line": 93,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 94,
                        "file": "quic_infer.ivy",
                        "instruction": "    # If this is an initial client request, we infer the nonce choice\n"
                    },
                    {
                        "line": 95,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 96,
                        "file": "quic_infer.ivy",
                        "instruction": "    if pkt.ptype = quic_packet_type.version_negociation  { #& ~conn_seen(dcid)\n"
                    },
                    {
                        "line": 97,
                        "file": "quic_infer.ivy",
                        "instruction": "        nonce_cid(scid) := dcid;\n"
                    },
                    {
                        "line": 98,
                        "file": "quic_infer.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 99,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 100,
                        "file": "quic_infer.ivy",
                        "instruction": "    # var e := quic_packet_type.initial;\n"
                    },
                    {
                        "line": 101,
                        "file": "quic_infer.ivy",
                        "instruction": "    \n"
                    },
                    {
                        "line": 102,
                        "file": "quic_infer.ivy",
                        "instruction": "    # call set_encryption_level(src,scid,e);\n"
                    },
                    {
                        "line": 103,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 104,
                        "file": "quic_infer.ivy",
                        "instruction": "    # infer sender of packet has established keys for the packet\n"
                    },
                    {
                        "line": 105,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 106,
                        "file": "quic_infer.ivy",
                        "instruction": "    # call tls_keys_established_event(scid,e);\n"
                    },
                    {
                        "line": 107,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 108,
                        "file": "quic_infer.ivy",
                        "instruction": "    # Infer an app_server_open_event.\n"
                    },
                    {
                        "line": 109,
                        "file": "quic_infer.ivy",
                        "instruction": "    if conn_requested(dst,src,dcid) & ~connected(dcid) & ~connected(scid) {\n"
                    },
                    {
                        "line": 110,
                        "file": "quic_infer.ivy",
                        "instruction": "        call app_server_open_event_vn(src,dst,scid,dcid);\n"
                    },
                    {
                        "line": 111,
                        "file": "quic_infer.ivy",
                        "instruction": "        call app_server_open_event(src,dst,scid,dcid);\n"
                    },
                    {
                        "line": 112,
                        "file": "quic_infer.ivy",
                        "instruction": "    };\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet_vn"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 150,
                "action_name": "infer_tls_events_0rtt",
                "implementation": [
                    {
                        "line": 145,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 146,
                        "file": "quic_infer.ivy",
                        "instruction": "    # Stream frames on id 0 indicate that a `tls_send_event` has occurred.\n"
                    },
                    {
                        "line": 147,
                        "file": "quic_infer.ivy",
                        "instruction": "    # TODO: ignore duplicate frames.\n"
                    },
                    {
                        "line": 148,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 149,
                        "file": "quic_infer.ivy",
                        "instruction": "    var scid := pkt.src_cid;\n"
                    },
                    {
                        "line": 150,
                        "file": "quic_infer.ivy",
                        "instruction": "    var dcid := pkt.dst_cid;\n"
                    },
                    {
                        "line": 151,
                        "file": "quic_infer.ivy",
                        "instruction": "    var sq   := pkt.seq_num;\n"
                    },
                    {
                        "line": 152,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 153,
                        "file": "quic_infer.ivy",
                        "instruction": "    # If this is an initial client request, we infer the nonce choice\n"
                    },
                    {
                        "line": 154,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 155,
                        "file": "quic_infer.ivy",
                        "instruction": "    if pkt.ptype = quic_packet_type.zero_rtt {  #& ~conn_seen(dcid)\n"
                    },
                    {
                        "line": 156,
                        "file": "quic_infer.ivy",
                        "instruction": "        nonce_cid(scid) := dcid;\n"
                    },
                    {
                        "line": 157,
                        "file": "quic_infer.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 158,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 159,
                        "file": "quic_infer.ivy",
                        "instruction": "    var e := quic_packet_type.zero_rtt;\n"
                    },
                    {
                        "line": 160,
                        "file": "quic_infer.ivy",
                        "instruction": "    \n"
                    },
                    {
                        "line": 161,
                        "file": "quic_infer.ivy",
                        "instruction": "    call set_encryption_level(src,scid,e);\n"
                    },
                    {
                        "line": 162,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 163,
                        "file": "quic_infer.ivy",
                        "instruction": "    # infer sender of packet has established keys for the packet\n"
                    },
                    {
                        "line": 164,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 165,
                        "file": "quic_infer.ivy",
                        "instruction": "    call tls_keys_established_event(scid,e);\n"
                    },
                    {
                        "line": 166,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 167,
                        "file": "quic_infer.ivy",
                        "instruction": "    # Infer an app_server_open_event.\n"
                    },
                    {
                        "line": 168,
                        "file": "quic_infer.ivy",
                        "instruction": "    if conn_requested(dst,src,dcid) & ~connected(dcid) & ~connected(scid) {\n"
                    },
                    {
                        "line": 169,
                        "file": "quic_infer.ivy",
                        "instruction": "         call app_server_open_event_0rtt(src,dst,scid,dcid);\n"
                    },
                    {
                        "line": 170,
                        "file": "quic_infer.ivy",
                        "instruction": "         call app_server_open_event(src,dst,scid,dcid);\n"
                    },
                    {
                        "line": 171,
                        "file": "quic_infer.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 172,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 173,
                        "file": "quic_infer.ivy",
                        "instruction": "    var idx := pkt.payload.begin;\n"
                    },
                    {
                        "line": 174,
                        "file": "quic_infer.ivy",
                        "instruction": "    while idx < pkt.payload.end {\n"
                    },
                    {
                        "line": 175,
                        "file": "quic_infer.ivy",
                        "instruction": "        var f := pkt.payload.value(idx);\n"
                    },
                    {
                        "line": 176,
                        "file": "quic_infer.ivy",
                        "instruction": "        # if some(cf:frame.crypto) f *> cf {\n"
                    },
                    {
                        "line": 177,
                        "file": "quic_infer.ivy",
                        "instruction": "        #     call tls_send_event(src,dst,scid,dcid,cf.data,cf.offset,e)\n"
                    },
                    {
                        "line": 178,
                        "file": "quic_infer.ivy",
                        "instruction": "        # };\n"
                    },
                    {
                        "line": 179,
                        "file": "quic_infer.ivy",
                        "instruction": "        if some(sf:frame.stream) f *> sf {\n"
                    },
                    {
                        "line": 180,
                        "file": "quic_infer.ivy",
                        "instruction": "            # require sf.offset <= stream_app_data_end(dcid,sf.id);  # TODO: deal with gaps in stream\n"
                    },
                    {
                        "line": 181,
                        "file": "quic_infer.ivy",
                        "instruction": "            # var data := sf.data.segment(stream_app_data_end(dcid,sf.id) - sf.offset,sf.data.end);\n"
                    },
                    {
                        "line": 182,
                        "file": "quic_infer.ivy",
                        "instruction": "            call app_server_open_event_0rtt(src,dst,scid,dcid);\n"
                    },
                    {
                        "line": 183,
                        "file": "quic_infer.ivy",
                        "instruction": "            call app_send_event(src,dst,dcid,sf.id,sf.data,sf.offset,sf.fin)\n"
                    },
                    {
                        "line": 184,
                        "file": "quic_infer.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 185,
                        "file": "quic_infer.ivy",
                        "instruction": "        #if some(pf:frame.padding) f *> pf {\n"
                    },
                    {
                        "line": 186,
                        "file": "quic_infer.ivy",
                        "instruction": "            # do nothing\n"
                    },
                    {
                        "line": 187,
                        "file": "quic_infer.ivy",
                        "instruction": "        #} else {\n"
                    },
                    {
                        "line": 188,
                        "file": "quic_infer.ivy",
                        "instruction": "            call infer_frame(scid,dcid,f);\n"
                    },
                    {
                        "line": 189,
                        "file": "quic_infer.ivy",
                        "instruction": "        #};\n"
                    },
                    {
                        "line": 190,
                        "file": "quic_infer.ivy",
                        "instruction": "        call f.handle(scid,dcid,e,sq);\n"
                    },
                    {
                        "line": 191,
                        "file": "quic_infer.ivy",
                        "instruction": "        idx := idx.next\n"
                    },
                    {
                        "line": 192,
                        "file": "quic_infer.ivy",
                        "instruction": "    }\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet_0rtt"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 121,
                "action_name": "infer_tls_events_retry",
                "implementation": [
                    {
                        "line": 116,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 117,
                        "file": "quic_infer.ivy",
                        "instruction": "    # Stream frames on id 0 indicate that a `tls_send_event` has occurred.\n"
                    },
                    {
                        "line": 118,
                        "file": "quic_infer.ivy",
                        "instruction": "    # TODO: ignore duplicate frames.\n"
                    },
                    {
                        "line": 119,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 120,
                        "file": "quic_infer.ivy",
                        "instruction": "    var scid := pkt.src_cid;\n"
                    },
                    {
                        "line": 121,
                        "file": "quic_infer.ivy",
                        "instruction": "    var dcid := pkt.dst_cid;\n"
                    },
                    {
                        "line": 122,
                        "file": "quic_infer.ivy",
                        "instruction": "    \n"
                    },
                    {
                        "line": 123,
                        "file": "quic_infer.ivy",
                        "instruction": "    # If this is an initial client request, we infer the nonce choice\n"
                    },
                    {
                        "line": 124,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 125,
                        "file": "quic_infer.ivy",
                        "instruction": "    if pkt.ptype = quic_packet_type.retry {  #& ~conn_seen(dcid)\n"
                    },
                    {
                        "line": 126,
                        "file": "quic_infer.ivy",
                        "instruction": "        nonce_cid(scid) := dcid;\n"
                    },
                    {
                        "line": 127,
                        "file": "quic_infer.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 128,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 129,
                        "file": "quic_infer.ivy",
                        "instruction": "    # var e := quic_packet_type.initial;\n"
                    },
                    {
                        "line": 130,
                        "file": "quic_infer.ivy",
                        "instruction": "    \n"
                    },
                    {
                        "line": 131,
                        "file": "quic_infer.ivy",
                        "instruction": "    # call set_encryption_level(src,scid,e);\n"
                    },
                    {
                        "line": 132,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 133,
                        "file": "quic_infer.ivy",
                        "instruction": "    # infer sender of packet has established keys for the packet\n"
                    },
                    {
                        "line": 134,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 135,
                        "file": "quic_infer.ivy",
                        "instruction": "    # call tls_keys_established_event(scid,e);\n"
                    },
                    {
                        "line": 136,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 137,
                        "file": "quic_infer.ivy",
                        "instruction": "    # Infer an app_server_open_event.\n"
                    },
                    {
                        "line": 138,
                        "file": "quic_infer.ivy",
                        "instruction": "    if conn_requested(dst,src,dcid) & ~connected(dcid) & ~connected(scid) {\n"
                    },
                    {
                        "line": 139,
                        "file": "quic_infer.ivy",
                        "instruction": "         call app_server_open_event_retry(src,dst,scid,dcid);\n"
                    },
                    {
                        "line": 140,
                        "file": "quic_infer.ivy",
                        "instruction": "         call app_server_open_event(src,dst,scid,dcid);\n"
                    },
                    {
                        "line": 141,
                        "file": "quic_infer.ivy",
                        "instruction": "    };\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet_retry"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 92,
                "action_name": "infer_tls_events_vn",
                "implementation": [
                    {
                        "line": 88,
                        "file": "quic_infer.ivy",
                        "instruction": "    # Stream frames on id 0 indicate that a `tls_send_event` has occurred.\n"
                    },
                    {
                        "line": 89,
                        "file": "quic_infer.ivy",
                        "instruction": "    # TODO: ignore duplicate frames.\n"
                    },
                    {
                        "line": 90,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 91,
                        "file": "quic_infer.ivy",
                        "instruction": "    var scid := pkt.src_cid;\n"
                    },
                    {
                        "line": 92,
                        "file": "quic_infer.ivy",
                        "instruction": "    var dcid := pkt.dst_cid;\n"
                    },
                    {
                        "line": 93,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 94,
                        "file": "quic_infer.ivy",
                        "instruction": "    # If this is an initial client request, we infer the nonce choice\n"
                    },
                    {
                        "line": 95,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 96,
                        "file": "quic_infer.ivy",
                        "instruction": "    if pkt.ptype = quic_packet_type.version_negociation  { #& ~conn_seen(dcid)\n"
                    },
                    {
                        "line": 97,
                        "file": "quic_infer.ivy",
                        "instruction": "        nonce_cid(scid) := dcid;\n"
                    },
                    {
                        "line": 98,
                        "file": "quic_infer.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 99,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 100,
                        "file": "quic_infer.ivy",
                        "instruction": "    # var e := quic_packet_type.initial;\n"
                    },
                    {
                        "line": 101,
                        "file": "quic_infer.ivy",
                        "instruction": "    \n"
                    },
                    {
                        "line": 102,
                        "file": "quic_infer.ivy",
                        "instruction": "    # call set_encryption_level(src,scid,e);\n"
                    },
                    {
                        "line": 103,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 104,
                        "file": "quic_infer.ivy",
                        "instruction": "    # infer sender of packet has established keys for the packet\n"
                    },
                    {
                        "line": 105,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 106,
                        "file": "quic_infer.ivy",
                        "instruction": "    # call tls_keys_established_event(scid,e);\n"
                    },
                    {
                        "line": 107,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 108,
                        "file": "quic_infer.ivy",
                        "instruction": "    # Infer an app_server_open_event.\n"
                    },
                    {
                        "line": 109,
                        "file": "quic_infer.ivy",
                        "instruction": "    if conn_requested(dst,src,dcid) & ~connected(dcid) & ~connected(scid) {\n"
                    },
                    {
                        "line": 110,
                        "file": "quic_infer.ivy",
                        "instruction": "        call app_server_open_event_vn(src,dst,scid,dcid);\n"
                    },
                    {
                        "line": 111,
                        "file": "quic_infer.ivy",
                        "instruction": "        call app_server_open_event(src,dst,scid,dcid);\n"
                    },
                    {
                        "line": 112,
                        "file": "quic_infer.ivy",
                        "instruction": "    };\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet_vn"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 86,
                "action_name": "show_biatch_2",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    }
                ],
                "events": true
            }
        }
    ],
    "quic_endpoint.ivy": [
        {
            "attacker_ep_name": "attacker",
            "attacker_ep_object": null,
            "attacker_ep_module": {
                "module_parameters": [
                    {
                        "name": "address",
                        "type": "ip.addr"
                    },
                    {
                        "name": "port",
                        "type": "ip.port"
                    }
                ],
                "module_attributes": []
            },
            "actions": [
                {
                    "line": 869,
                    "action_name": "attacker.behavior",
                    "implementation": [
                        {
                            "line": 985,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            var dst := socket_endpoint(host,s);  # because net API doesn't tell us the dst\n"
                        },
                        {
                            "line": 986,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            var idx := pkts.begin;\n"
                        },
                        {
                            "line": 987,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            while idx < pkts.end {\n"
                        },
                        {
                            "line": 988,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var ppkt := pkts.value(idx);\n"
                        },
                        {
                            "line": 989,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var tls_id := src_tls_id(dst); # todo multiple\n"
                        },
                        {
                            "line": 990,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var header := ppkt.value(0);\n"
                        },
                        {
                            "line": 991,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var hdr_type : type_bits := bfe[0][6](ppkt.value(0));\n"
                        },
                        {
                            "line": 992,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var tt := bvand(hdr_type,0x30);\n"
                        },
                        {
                            "line": 993,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var is_long : bool := bvand(0x80,header) ~= 0;\n"
                        },
                        {
                            "line": 994,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                \n"
                        },
                        {
                            "line": 995,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var version := ppkt.segment(1,1+4);\n"
                        },
                        {
                            "line": 996,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var bversion := bytes_to_version(version);\n"
                        },
                        {
                            "line": 997,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                \n"
                        },
                        {
                            "line": 998,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var ptype : byte := bvand(0x30,header);\n"
                        },
                        {
                            "line": 999,
                            "file": "quic_endpoint.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1000,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                call recv_packet_victim(host,src,dst,ppkt);\n"
                        },
                        {
                            "line": 1001,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                ppkt_recvd := ppkt_recvd.append(ppkt);\n"
                        },
                        {
                            "line": 1002,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                idx := idx.next;\n"
                        },
                        {
                            "line": 1003,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            };\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "host",
                            "type": "endpoint_id"
                        },
                        {
                            "name": "s",
                            "type": "net.socket"
                        },
                        {
                            "name": "src",
                            "type": "ip.endpoint"
                        },
                        {
                            "name": "pkts",
                            "type": "prot.arr"
                        }
                    ],
                    "exported": false,
                    "events": false
                },
                {
                    "line": 853,
                    "action_name": "attacker.init[after458]",
                    "implementation": [
                        {
                            "line": 853,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            enc_level := quic_packet_type.initial;\n"
                        },
                        {
                            "line": 854,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            ep.protocol := ip.udp;\n"
                        },
                        {
                            "line": 855,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            ep.addr := address;\n"
                        },
                        {
                            "line": 856,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            ep.port := port;\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": null,
                    "exported": false,
                    "events": false
                }
            ]
        },
        {
            "client_ep_name": "client",
            "client_ep_object": null,
            "client_ep_module": {
                "module_parameters": [
                    {
                        "name": "address",
                        "type": "ip.addr"
                    },
                    {
                        "name": "port",
                        "type": "ip.port"
                    }
                ],
                "module_attributes": []
            },
            "actions": [
                {
                    "line": 56,
                    "action_name": "client.behavior",
                    "implementation": [
                        {
                            "line": 210,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            var dst := socket_endpoint(host,s);  # because net API doesn't tell us the dst\n"
                        },
                        {
                            "line": 211,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            var idx := pkts.begin;\n"
                        },
                        {
                            "line": 212,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            while idx < pkts.end {\n"
                        },
                        {
                            "line": 213,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var ppkt := pkts.value(idx);\n"
                        },
                        {
                            "line": 214,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var tls_id := src_tls_id(dst); # todo multiple\n"
                        },
                        {
                            "line": 215,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var header := ppkt.value(0);\n"
                        },
                        {
                            "line": 216,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var hdr_type : type_bits := bfe[0][6](ppkt.value(0));\n"
                        },
                        {
                            "line": 217,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var tt := bvand(hdr_type,0x30);\n"
                        },
                        {
                            "line": 218,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var is_long : bool := bvand(0x80,header) ~= 0;\n"
                        },
                        {
                            "line": 219,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var version := ppkt.segment(1,1+4);\n"
                        },
                        {
                            "line": 220,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var bversion := bytes_to_version(version);\n"
                        },
                        {
                            "line": 221,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var ptype : byte := bvand(0x30,header);\n"
                        },
                        {
                            "line": 222,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                if zrtt_pkt_set & ~zrtt_pkt_process {\n"
                        },
                        {
                            "line": 223,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    zrtt_pkt_process := true;\n"
                        },
                        {
                            "line": 224,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    var rnum := reference_pkt_num(last_zrtt_pkt,true);\n"
                        },
                        {
                            "line": 225,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    var res := prot.decrypt(tls_id,rnum,last_zrtt_pkt);\n"
                        },
                        {
                            "line": 226,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    if res.ok {\n"
                        },
                        {
                            "line": 227,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        if ~(bversion = 0) {\n"
                        },
                        {
                            "line": 228,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            #for client test, 0rtt packet\n"
                        },
                        {
                            "line": 229,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            call tls_client_0rtt_response(src,dst,res.data);\n"
                        },
                        {
                            "line": 230,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        };\n"
                        },
                        {
                            "line": 231,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    } else {\n"
                        },
                        {
                            "line": 232,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        call undecryptable_packet_event(host,src,dst,last_zrtt_pkt);\n"
                        },
                        {
                            "line": 233,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    };\n"
                        },
                        {
                            "line": 234,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                };\n"
                        },
                        {
                            "line": 235,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                if bvand(ppkt.value(0),0xf0) = 0xc0 {\n"
                        },
                        {
                            "line": 236,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    # for client test\n"
                        },
                        {
                            "line": 237,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    call tls_client_initial_response(src,dst,ppkt)\n"
                        },
                        {
                            "line": 238,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                };\n"
                        },
                        {
                            "line": 239,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var rnum := reference_pkt_num(ppkt,true);\n"
                        },
                        {
                            "line": 240,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var res := prot.decrypt(tls_id,rnum,ppkt);\n"
                        },
                        {
                            "line": 241,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                if res.ok {\n"
                        },
                        {
                            "line": 242,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    var is_pad := is_padding_packet(res.payload); # For picoquic  client\n"
                        },
                        {
                            "line": 243,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    if is_pad { #is_pad | is_rand_pad\n"
                        },
                        {
                            "line": 244,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        call padding_packet_event(host,src,dst,ppkt);\n"
                        },
                        {
                            "line": 245,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    } else if tt = 0x10  & ~(bversion = 0) {\n"
                        },
                        {
                            "line": 246,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        #for client test, 0rtt packet\n"
                        },
                        {
                            "line": 247,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        call tls_client_0rtt_response(src,dst,res.data);\n"
                        },
                        {
                            "line": 248,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    } else {\n"
                        },
                        {
                            "line": 249,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        var pkt := pkt_serdes.from_bytes(res.data);\n"
                        },
                        {
                            "line": 250,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        pkt.seq_num := prot.correct_pnum(rnum,pkt.seq_num,prot.get_pnum_len(res.data));\n"
                        },
                        {
                            "line": 251,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        call recv_packet(host,src,dst,pkt);\n"
                        },
                        {
                            "line": 252,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        call infer_tls_events(src,dst,pkt);   # infer any TLS events on server side\n"
                        },
                        {
                            "line": 253,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        call packet_event(src,dst,pkt);       # also an inferred event\n"
                        },
                        {
                            "line": 254,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        if nclients > 1 {\n"
                        },
                        {
                            "line": 255,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            var cdx := the_cids.begin;\n"
                        },
                        {
                            "line": 256,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            while cdx < the_cids.end {\n"
                        },
                        {
                            "line": 257,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                var tcid := the_cids.value(cdx);\n"
                        },
                        {
                            "line": 258,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                if bvand(ppkt.value(0),0xf0) = 0xc0 & ~connected(tcid) { \n"
                        },
                        {
                            "line": 259,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                    # for client test\n"
                        },
                        {
                            "line": 260,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                    call app_server_open_event(dst,src,tcid,pkt.src_cid);  # [1]\n"
                        },
                        {
                            "line": 261,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                };\n"
                        },
                        {
                            "line": 262,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                cdx := cdx.next;\n"
                        },
                        {
                            "line": 263,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            }\n"
                        },
                        {
                            "line": 264,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        } else {\n"
                        },
                        {
                            "line": 265,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            if bvand(ppkt.value(0),0xf0) = 0xc0 & ~connected(the_cid) { \n"
                        },
                        {
                            "line": 266,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                # for client test\n"
                        },
                        {
                            "line": 267,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                call app_server_open_event(dst,src,the_cid,pkt.src_cid);  # [1]\n"
                        },
                        {
                            "line": 268,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            };\n"
                        },
                        {
                            "line": 269,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        };\n"
                        },
                        {
                            "line": 270,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    };\n"
                        },
                        {
                            "line": 271,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                } else {\n"
                        },
                        {
                            "line": 272,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    call undecryptable_packet_event(host,src,dst,ppkt);\n"
                        },
                        {
                            "line": 273,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                };\n"
                        },
                        {
                            "line": 274,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                idx := idx.next;\n"
                        },
                        {
                            "line": 275,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 276,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            version_not_found(src) := false;\n"
                        },
                        {
                            "line": 277,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            call show_last_datagram_size(last_datagram_received_size);\n"
                        },
                        {
                            "line": 278,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            if ~first_datagram_received { # for client tests\n"
                        },
                        {
                            "line": 279,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                #require last_datagram_received_size + 8 > 1200; # 8 is for UDP datagram header TODO\n"
                        },
                        {
                            "line": 280,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                first_datagram_received := true;\n"
                        },
                        {
                            "line": 281,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 282,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            last_datagram_received_size := 0;\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "host",
                            "type": "endpoint_id"
                        },
                        {
                            "name": "s",
                            "type": "net.socket"
                        },
                        {
                            "name": "src",
                            "type": "ip.endpoint"
                        },
                        {
                            "name": "pkts",
                            "type": "prot.arr"
                        }
                    ],
                    "exported": false,
                    "events": false
                },
                {
                    "line": 48,
                    "action_name": "client.set_ep",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "p",
                            "type": "this"
                        },
                        {
                            "name": "e",
                            "type": "ip.endpoint"
                        }
                    ],
                    "exported": false,
                    "events": false
                },
                {
                    "line": 52,
                    "action_name": "client.set_tls_id",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "p",
                            "type": "this"
                        },
                        {
                            "name": "e",
                            "type": "tls_api.id"
                        }
                    ],
                    "exported": false,
                    "events": false
                }
            ]
        },
        {
            "client_server_ep_name": "client_server",
            "client_server_ep_object": null,
            "client_server_ep_module": {
                "module_parameters": [
                    {
                        "name": "address",
                        "type": "ip.addr"
                    },
                    {
                        "name": "port",
                        "type": "ip.port"
                    },
                    {
                        "name": "oport",
                        "type": "ip.port"
                    }
                ],
                "module_attributes": []
            },
            "actions": [
                {
                    "line": 366,
                    "action_name": "client_server.init[after456]",
                    "implementation": [
                        {
                            "line": 366,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            enc_level := quic_packet_type.initial;\n"
                        },
                        {
                            "line": 367,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            ep_in.protocol := ip.udp;\n"
                        },
                        {
                            "line": 368,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            ep_in.addr := address;\n"
                        },
                        {
                            "line": 369,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            ep_in.port := port;\n"
                        },
                        {
                            "line": 370,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            \n"
                        },
                        {
                            "line": 371,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            ep_out.protocol := ip.udp;\n"
                        },
                        {
                            "line": 372,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            ep_out.addr := address;\n"
                        },
                        {
                            "line": 373,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            ep_out.port := oport;\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": null,
                    "exported": false,
                    "events": false
                }
            ]
        },
        {
            "actions": {
                "line": 1010,
                "action_name": "double_cid",
                "implementation": [
                    {
                        "line": 1009,
                        "file": "quic_endpoint.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 1010,
                        "file": "quic_endpoint.ivy",
                        "instruction": "    res.val = c.val * 2;\n"
                    },
                    {
                        "line": 1011,
                        "file": "quic_endpoint.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "res",
                    "type": "cid"
                },
                "action_parameters": [
                    {
                        "name": "c",
                        "type": "cid"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 12,
                "action_name": "endpoint_id_addr",
                "implementation": [
                    {
                        "line": 12,
                        "file": "quic_endpoint.ivy",
                        "instruction": "    ep.protocol := ip.udp;\n"
                    },
                    {
                        "line": 13,
                        "file": "quic_endpoint.ivy",
                        "instruction": "    ep.addr := server_addr if ep_id = endpoint_id.server | ep_id = endpoint_id.server_alt  \n"
                    },
                    {
                        "line": 14,
                        "file": "quic_endpoint.ivy",
                        "instruction": "                    else (mim_addr if ep_id = endpoint_id.mim\n"
                    },
                    {
                        "line": 15,
                        "file": "quic_endpoint.ivy",
                        "instruction": "                    else client_addr);   # the loop-back addr\n"
                    },
                    {
                        "line": 16,
                        "file": "quic_endpoint.ivy",
                        "instruction": "    ep.port := client_port if ep_id = endpoint_id.client\n"
                    },
                    {
                        "line": 17,
                        "file": "quic_endpoint.ivy",
                        "instruction": "               else (mim_port_in if ep_id = endpoint_id.mim # TODO \n"
                    },
                    {
                        "line": 18,
                        "file": "quic_endpoint.ivy",
                        "instruction": "               else (victim_port if ep_id = endpoint_id.victim # TODO \n"
                    },
                    {
                        "line": 19,
                        "file": "quic_endpoint.ivy",
                        "instruction": "               else (client_port_alt if ep_id = endpoint_id.client_alt\n"
                    },
                    {
                        "line": 20,
                        "file": "quic_endpoint.ivy",
                        "instruction": "               else (client_port_vn if ep_id = endpoint_id.client_vn\n"
                    },
                    {
                        "line": 21,
                        "file": "quic_endpoint.ivy",
                        "instruction": "               else (server_port_alt if ep_id = endpoint_id.server_alt\n"
                    },
                    {
                        "line": 22,
                        "file": "quic_endpoint.ivy",
                        "instruction": "               else server_port)))));\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "ep",
                    "type": "ip.endpoint"
                },
                "action_parameters": [
                    {
                        "name": "ep_id",
                        "type": "endpoint_id"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "server_ep_name": "server",
            "server_ep_object": null,
            "server_ep_module": {
                "module_parameters": [
                    {
                        "name": "address",
                        "type": "ip.addr"
                    },
                    {
                        "name": "port",
                        "type": "ip.port"
                    }
                ],
                "module_attributes": []
            },
            "actions": [
                {
                    "line": 211,
                    "action_name": "server.behavior",
                    "implementation": [
                        {
                            "line": 386,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            var dst := socket_endpoint(host,s);  # because net API doesn't tell us the dst socket_endpoint_mim\n"
                        },
                        {
                            "line": 387,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            var idx := pkts.begin;\n"
                        },
                        {
                            "line": 388,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            # TODO should not be here\n"
                        },
                        {
                            "line": 389,
                            "file": "quic_endpoint.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 390,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            while idx < pkts.end {\n"
                        },
                        {
                            "line": 391,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var ppkt := pkts.value(idx);\n"
                        },
                        {
                            "line": 392,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var tls_id := src_tls_id(dst); # todo multiple\n"
                        },
                        {
                            "line": 393,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var header := ppkt.value(0);\n"
                        },
                        {
                            "line": 394,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var hdr_type : type_bits := bfe[0][6](ppkt.value(0));\n"
                        },
                        {
                            "line": 395,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var tt := bvand(hdr_type,0x30);\n"
                        },
                        {
                            "line": 396,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var is_long : bool := bvand(0x80,header) ~= 0;\n"
                        },
                        {
                            "line": 397,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                \n"
                        },
                        {
                            "line": 398,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var version := ppkt.segment(1,1+4);\n"
                        },
                        {
                            "line": 399,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var bversion := bytes_to_version(version);\n"
                        },
                        {
                            "line": 400,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                \n"
                        },
                        {
                            "line": 401,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var ptype : byte := bvand(0x30,header);\n"
                        },
                        {
                            "line": 402,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                idx := idx.next; \n"
                        },
                        {
                            "line": 403,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            };\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "host",
                            "type": "endpoint_id"
                        },
                        {
                            "name": "s",
                            "type": "net.socket"
                        },
                        {
                            "name": "src",
                            "type": "ip.endpoint"
                        },
                        {
                            "name": "pkts",
                            "type": "prot.arr"
                        }
                    ],
                    "exported": false,
                    "events": false
                },
                {
                    "line": 207,
                    "action_name": "server.set_tls_id",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "p",
                            "type": "this"
                        },
                        {
                            "name": "e",
                            "type": "tls_api.id"
                        }
                    ],
                    "exported": false,
                    "events": false
                }
            ]
        },
        {
            "victim_agent_ep_name": "victim_agent",
            "victim_agent_ep_object": [],
            "victim_agent_ep_module": {
                "module_parameters": [],
                "module_attributes": []
            },
            "actions": [
                {
                    "line": 986,
                    "action_name": "victim_agent.behavior",
                    "implementation": [
                        {
                            "line": 985,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            var dst := socket_endpoint(host,s);  # because net API doesn't tell us the dst\n"
                        },
                        {
                            "line": 986,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            var idx := pkts.begin;\n"
                        },
                        {
                            "line": 987,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            while idx < pkts.end {\n"
                        },
                        {
                            "line": 988,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var ppkt := pkts.value(idx);\n"
                        },
                        {
                            "line": 989,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var tls_id := src_tls_id(dst); # todo multiple\n"
                        },
                        {
                            "line": 990,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var header := ppkt.value(0);\n"
                        },
                        {
                            "line": 991,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var hdr_type : type_bits := bfe[0][6](ppkt.value(0));\n"
                        },
                        {
                            "line": 992,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var tt := bvand(hdr_type,0x30);\n"
                        },
                        {
                            "line": 993,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var is_long : bool := bvand(0x80,header) ~= 0;\n"
                        },
                        {
                            "line": 994,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                \n"
                        },
                        {
                            "line": 995,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var version := ppkt.segment(1,1+4);\n"
                        },
                        {
                            "line": 996,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var bversion := bytes_to_version(version);\n"
                        },
                        {
                            "line": 997,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                \n"
                        },
                        {
                            "line": 998,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var ptype : byte := bvand(0x30,header);\n"
                        },
                        {
                            "line": 999,
                            "file": "quic_endpoint.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1000,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                call recv_packet_victim(host,src,dst,ppkt);\n"
                        },
                        {
                            "line": 1001,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                ppkt_recvd := ppkt_recvd.append(ppkt);\n"
                        },
                        {
                            "line": 1002,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                idx := idx.next;\n"
                        },
                        {
                            "line": 1003,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            };\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "host",
                            "type": "endpoint_id"
                        },
                        {
                            "name": "s",
                            "type": "net.socket"
                        },
                        {
                            "name": "src",
                            "type": "ip.endpoint"
                        },
                        {
                            "name": "pkts",
                            "type": "prot.arr"
                        }
                    ],
                    "exported": false,
                    "events": false
                }
            ]
        }
    ],
    "quic_shim.ivy": [
        {
            "actions": {
                "line": 993,
                "action_name": "bytes_to_cid",
                "implementation": [
                    {
                        "line": 992,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 993,
                        "file": "quic_shim.ivy",
                        "instruction": "    val.val = 0;\n"
                    },
                    {
                        "line": 994,
                        "file": "quic_shim.ivy",
                        "instruction": "    for (unsigned i = 0; i < bytes.size(); i++)\n"
                    },
                    {
                        "line": 995,
                        "file": "quic_shim.ivy",
                        "instruction": "        val.val = (val.val << 8) + bytes[i];\n"
                    },
                    {
                        "line": 996,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "val",
                    "type": "cid"
                },
                "action_parameters": [
                    {
                        "name": "bytes",
                        "type": "stream_data"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 1009,
                "action_name": "bytes_to_itoken",
                "implementation": [
                    {
                        "line": 1008,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 1009,
                        "file": "quic_shim.ivy",
                        "instruction": "    val.val = 0;\n"
                    },
                    {
                        "line": 1010,
                        "file": "quic_shim.ivy",
                        "instruction": "    for (unsigned i = 0; i < bytes.size(); i++)\n"
                    },
                    {
                        "line": 1011,
                        "file": "quic_shim.ivy",
                        "instruction": "        val.val = (val.val << 8) + bytes[i];\n"
                    },
                    {
                        "line": 1012,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "val",
                    "type": "itoken"
                },
                "action_parameters": [
                    {
                        "name": "bytes",
                        "type": "stream_data"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 1001,
                "action_name": "bytes_to_version",
                "implementation": [
                    {
                        "line": 1000,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 1001,
                        "file": "quic_shim.ivy",
                        "instruction": "    val = 0;\n"
                    },
                    {
                        "line": 1002,
                        "file": "quic_shim.ivy",
                        "instruction": "    for (unsigned i = 0; i < bytes.size(); i++)\n"
                    },
                    {
                        "line": 1003,
                        "file": "quic_shim.ivy",
                        "instruction": "        val = (val << 8) + bytes[i];\n"
                    },
                    {
                        "line": 1004,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "val",
                    "type": "version"
                },
                "action_parameters": [
                    {
                        "name": "bytes",
                        "type": "stream_data"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 904,
                "action_name": "cid_to_bytes",
                "implementation": [
                    {
                        "line": 903,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 904,
                        "file": "quic_shim.ivy",
                        "instruction": "    res.resize(len);\n"
                    },
                    {
                        "line": 905,
                        "file": "quic_shim.ivy",
                        "instruction": "    for (unsigned i = 0; i < len; i++) {\n"
                    },
                    {
                        "line": 906,
                        "file": "quic_shim.ivy",
                        "instruction": "        res[len-i-1] = 0xff & (c.val >> (i * 8));\n"
                    },
                    {
                        "line": 907,
                        "file": "quic_shim.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 908,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "res",
                    "type": "stream_data"
                },
                "action_parameters": [
                    {
                        "name": "c",
                        "type": "cid"
                    },
                    {
                        "name": "len",
                        "type": "cid_length"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 913,
                "action_name": "cid_to_us",
                "implementation": [
                    {
                        "line": 912,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 913,
                        "file": "quic_shim.ivy",
                        "instruction": "    res = c.val;\n"
                    },
                    {
                        "line": 914,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "res",
                    "type": "tls_api.id"
                },
                "action_parameters": [
                    {
                        "name": "c",
                        "type": "cid"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 929,
                "action_name": "dcid_size_cl",
                "implementation": [
                    {
                        "line": 928,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 929,
                        "file": "quic_shim.ivy",
                        "instruction": "    res = 0;\n"
                    },
                    {
                        "line": 930,
                        "file": "quic_shim.ivy",
                        "instruction": "    if(const char* env_p2 = std::getenv(\"TEST_TYPE\")) { \n"
                    },
                    {
                        "line": 931,
                        "file": "quic_shim.ivy",
                        "instruction": "      if(strcmp(env_p2, \"client\") == 0 || cond) {\n"
                    },
                    {
                        "line": 932,
                        "file": "quic_shim.ivy",
                        "instruction": "         if(const char* env_p3 = std::getenv(\"TEST_DCIL\")) {\n"
                    },
                    {
                        "line": 933,
                        "file": "quic_shim.ivy",
                        "instruction": "            std::cerr << \"TEST_DCIL \" << env_p3 << \"\\n\";\n"
                    },
                    {
                        "line": 934,
                        "file": "quic_shim.ivy",
                        "instruction": "\t        res = atoi(env_p3);\n"
                    },
                    {
                        "line": 935,
                        "file": "quic_shim.ivy",
                        "instruction": "         } \n"
                    },
                    {
                        "line": 936,
                        "file": "quic_shim.ivy",
                        "instruction": "         else \n"
                    },
                    {
                        "line": 937,
                        "file": "quic_shim.ivy",
                        "instruction": "\t        res = 8;\n"
                    },
                    {
                        "line": 938,
                        "file": "quic_shim.ivy",
                        "instruction": "      } else \n"
                    },
                    {
                        "line": 939,
                        "file": "quic_shim.ivy",
                        "instruction": "\t  res = 8;\n"
                    },
                    {
                        "line": 940,
                        "file": "quic_shim.ivy",
                        "instruction": "    } else \n"
                    },
                    {
                        "line": 941,
                        "file": "quic_shim.ivy",
                        "instruction": "      res = 8;\n"
                    },
                    {
                        "line": 942,
                        "file": "quic_shim.ivy",
                        "instruction": "    std::cerr <<  \"dcid_size_cl size: \" <<  res << \"\\n\";\n"
                    },
                    {
                        "line": 943,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "res",
                    "type": "cid_length"
                },
                "action_parameters": [
                    {
                        "name": "cond",
                        "type": "bool"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 966,
                "action_name": "dcid_size_pos",
                "implementation": [
                    {
                        "line": 965,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 966,
                        "file": "quic_shim.ivy",
                        "instruction": "    res = 0;\n"
                    },
                    {
                        "line": 967,
                        "file": "quic_shim.ivy",
                        "instruction": "    if(const char* env_p2 = std::getenv(\"TEST_TYPE\")) { \n"
                    },
                    {
                        "line": 968,
                        "file": "quic_shim.ivy",
                        "instruction": "      if(strcmp(env_p2, \"server\") == 0 || cond) {\n"
                    },
                    {
                        "line": 969,
                        "file": "quic_shim.ivy",
                        "instruction": "         if(const char* env_p3 = std::getenv(\"TEST_DCIL\")) {\n"
                    },
                    {
                        "line": 970,
                        "file": "quic_shim.ivy",
                        "instruction": "            std::cerr << \"TEST_DCIL \" << env_p3 << \"\\n\";\n"
                    },
                    {
                        "line": 971,
                        "file": "quic_shim.ivy",
                        "instruction": "\t        res = atoi(env_p3);\n"
                    },
                    {
                        "line": 972,
                        "file": "quic_shim.ivy",
                        "instruction": "         } else \n"
                    },
                    {
                        "line": 973,
                        "file": "quic_shim.ivy",
                        "instruction": "\t   res = 8;\n"
                    },
                    {
                        "line": 974,
                        "file": "quic_shim.ivy",
                        "instruction": "      } else \n"
                    },
                    {
                        "line": 975,
                        "file": "quic_shim.ivy",
                        "instruction": "\t  res = 8;\n"
                    },
                    {
                        "line": 976,
                        "file": "quic_shim.ivy",
                        "instruction": "    } else \n"
                    },
                    {
                        "line": 977,
                        "file": "quic_shim.ivy",
                        "instruction": "      res = 8;\n"
                    },
                    {
                        "line": 978,
                        "file": "quic_shim.ivy",
                        "instruction": "    std::cerr <<  \"dcid_size_pos size: \" <<  res << \"\\n\";\n"
                    },
                    {
                        "line": 979,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "res",
                    "type": "stream_pos"
                },
                "action_parameters": [
                    {
                        "name": "cond",
                        "type": "bool"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 1043,
                "action_name": "export_length_cid",
                "implementation": [
                    {
                        "line": 1049,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 1050,
                        "file": "quic_shim.ivy",
                        "instruction": "    scid_mim = scil;\n"
                    },
                    {
                        "line": 1051,
                        "file": "quic_shim.ivy",
                        "instruction": "    dcid_mim = dcil;\n"
                    },
                    {
                        "line": 1052,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "dcil",
                        "type": "stream_pos"
                    },
                    {
                        "name": "scil",
                        "type": "stream_pos"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 1022,
                "action_name": "export_length_cid_extension",
                "implementation": [
                    {
                        "line": 1021,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 1022,
                        "file": "quic_shim.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 1023,
                        "file": "quic_shim.ivy",
                        "instruction": "    std::cerr <<  \"export_length_cid_extension\"  << \"\\n\";\n"
                    },
                    {
                        "line": 1024,
                        "file": "quic_shim.ivy",
                        "instruction": "\tchar str_d[20];\n"
                    },
                    {
                        "line": 1025,
                        "file": "quic_shim.ivy",
                        "instruction": "\tsprintf(str_d,\"%llu\",dcil);\n"
                    },
                    {
                        "line": 1026,
                        "file": "quic_shim.ivy",
                        "instruction": "\tif(setenv(\"TEST_DCIL\",str_d,true) != 0) \n"
                    },
                    {
                        "line": 1027,
                        "file": "quic_shim.ivy",
                        "instruction": "\t\tfprintf(stderr, \"setenv failed\\n\");\n"
                    },
                    {
                        "line": 1028,
                        "file": "quic_shim.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 1029,
                        "file": "quic_shim.ivy",
                        "instruction": "\tchar str[20];\n"
                    },
                    {
                        "line": 1030,
                        "file": "quic_shim.ivy",
                        "instruction": "\tsprintf(str,\"%llu\",scil);\n"
                    },
                    {
                        "line": 1031,
                        "file": "quic_shim.ivy",
                        "instruction": "\tif(setenv(\"TEST_SCIL\",str,true) != 0) \n"
                    },
                    {
                        "line": 1032,
                        "file": "quic_shim.ivy",
                        "instruction": "\t\tfprintf(stderr, \"setenv failed\\n\");\n"
                    },
                    {
                        "line": 1033,
                        "file": "quic_shim.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 1034,
                        "file": "quic_shim.ivy",
                        "instruction": "    char str_p[20];\n"
                    },
                    {
                        "line": 1035,
                        "file": "quic_shim.ivy",
                        "instruction": "\tsprintf(str_p,\"%llu\",scil);\n"
                    },
                    {
                        "line": 1036,
                        "file": "quic_shim.ivy",
                        "instruction": "\tif(setenv(\"TEST_PCIL\",str_p,true) != 0) \n"
                    },
                    {
                        "line": 1037,
                        "file": "quic_shim.ivy",
                        "instruction": "\t\tfprintf(stderr, \"setenv failed\\n\");\n"
                    },
                    {
                        "line": 1038,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "dcil",
                        "type": "stream_pos"
                    },
                    {
                        "name": "scil",
                        "type": "stream_pos"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 1050,
                "action_name": "export_length_cid_mim",
                "implementation": [
                    {
                        "line": 1049,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 1050,
                        "file": "quic_shim.ivy",
                        "instruction": "    scid_mim = scil;\n"
                    },
                    {
                        "line": 1051,
                        "file": "quic_shim.ivy",
                        "instruction": "    dcid_mim = dcil;\n"
                    },
                    {
                        "line": 1052,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "dcil",
                        "type": "stream_pos"
                    },
                    {
                        "name": "scil",
                        "type": "stream_pos"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 865,
                "action_name": "is_padding_packet",
                "implementation": [
                    {
                        "line": 864,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 865,
                        "file": "quic_shim.ivy",
                        "instruction": "    is_padding = true;\n"
                    },
                    {
                        "line": 866,
                        "file": "quic_shim.ivy",
                        "instruction": "    for (unsigned i = 0; i < spkt.size(); i++)\n"
                    },
                    {
                        "line": 867,
                        "file": "quic_shim.ivy",
                        "instruction": "\tis_padding = is_padding && (spkt[i] == 0);\n"
                    },
                    {
                        "line": 868,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "is_padding",
                    "type": "bool"
                },
                "action_parameters": [
                    {
                        "name": "spkt",
                        "type": "stream_data"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "net_name": "net",
            "net_object": [],
            "net_module": {
                "module_parameters": [],
                "module_attributes": []
            },
            "actions": [
                {
                    "line": 228,
                    "action_name": "net.recv",
                    "implementation": [
                        {
                            "line": 228,
                            "file": "quic_shim.ivy",
                            "instruction": "    call show_socket(s);\n"
                        },
                        {
                            "line": 229,
                            "file": "quic_shim.ivy",
                            "instruction": "    if host = endpoint_id.server {        # for client test (tested implem = client <-> ivy implem = server)\n"
                        },
                        {
                            "line": 230,
                            "file": "quic_shim.ivy",
                            "instruction": "        call server.behavior(host,s,src,pkts);\n"
                        },
                        {
                            "line": 231,
                            "file": "quic_shim.ivy",
                            "instruction": "    } else if host = endpoint_id.client { # for server test (tested implem = server <-> ivy implem = client)\n"
                        },
                        {
                            "line": 232,
                            "file": "quic_shim.ivy",
                            "instruction": "        call client.behavior(host,s,src,pkts);\n"
                        },
                        {
                            "line": 233,
                            "file": "quic_shim.ivy",
                            "instruction": "    } else if host = endpoint_id.mim {\n"
                        },
                        {
                            "line": 234,
                            "file": "quic_shim.ivy",
                            "instruction": "        call mim_agent.behavior(host,s,src,pkts);\n"
                        },
                        {
                            "line": 235,
                            "file": "quic_shim.ivy",
                            "instruction": "    } else if host = endpoint_id.victim {\n"
                        },
                        {
                            "line": 236,
                            "file": "quic_shim.ivy",
                            "instruction": "        call victim_agent.behavior(host,s,src,pkts);\n"
                        },
                        {
                            "line": 237,
                            "file": "quic_shim.ivy",
                            "instruction": "    } else if host = endpoint_id.attacker {\n"
                        },
                        {
                            "line": 238,
                            "file": "quic_shim.ivy",
                            "instruction": "        call attacker.behavior(host,s,src,pkts);\n"
                        },
                        {
                            "line": 239,
                            "file": "quic_shim.ivy",
                            "instruction": "    } else {\n"
                        },
                        {
                            "line": 240,
                            "file": "quic_shim.ivy",
                            "instruction": "        # ERROR\n"
                        },
                        {
                            "line": 241,
                            "file": "quic_shim.ivy",
                            "instruction": "        call undefined_host_error(host,s,src);\n"
                        },
                        {
                            "line": 242,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "host",
                            "type": "endpoint_id"
                        },
                        {
                            "name": "s",
                            "type": "net.socket"
                        },
                        {
                            "name": "src",
                            "type": "ip.endpoint"
                        },
                        {
                            "name": "pkts",
                            "type": "prot.arr"
                        }
                    ],
                    "exported": false,
                    "events": false
                }
            ]
        },
        {
            "actions": {
                "line": 812,
                "action_name": "packet_encryption_level",
                "implementation": [
                    {
                        "line": 822,
                        "file": "quic_shim.ivy",
                        "instruction": "    # if zero_rtt_allowed {\n"
                    },
                    {
                        "line": 823,
                        "file": "quic_shim.ivy",
                        "instruction": "        #var scid := packet_scid(h);\n"
                    },
                    {
                        "line": 824,
                        "file": "quic_shim.ivy",
                        "instruction": "        e := quic_packet_type.zero_rtt if ~h.hdr_long #& ~established_1rtt_keys(scid)\n"
                    },
                    {
                        "line": 825,
                        "file": "quic_shim.ivy",
                        "instruction": "            else (quic_packet_type.initial if bvand(h.hdr_type,0x30) = 0x00\n"
                    },
                    {
                        "line": 826,
                        "file": "quic_shim.ivy",
                        "instruction": "                  else quic_packet_type.handshake);\n"
                    },
                    {
                        "line": 827,
                        "file": "quic_shim.ivy",
                        "instruction": "    # } else {\n"
                    },
                    {
                        "line": 828,
                        "file": "quic_shim.ivy",
                        "instruction": "        # e := quic_packet_type.one_rtt if ~h.hdr_long\n"
                    },
                    {
                        "line": 829,
                        "file": "quic_shim.ivy",
                        "instruction": "        #     else (quic_packet_type.initial if bvand(h.hdr_type,0x30) = 0x00\n"
                    },
                    {
                        "line": 830,
                        "file": "quic_shim.ivy",
                        "instruction": "        #           else quic_packet_type.handshake);\n"
                    },
                    {
                        "line": 831,
                        "file": "quic_shim.ivy",
                        "instruction": "    # }\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "e",
                    "type": "quic_packet_type"
                },
                "action_parameters": [
                    {
                        "name": "h",
                        "type": "prot.header_info"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 825,
                "action_name": "packet_encryption_level_up",
                "implementation": [
                    {
                        "line": 822,
                        "file": "quic_shim.ivy",
                        "instruction": "    # if zero_rtt_allowed {\n"
                    },
                    {
                        "line": 823,
                        "file": "quic_shim.ivy",
                        "instruction": "        #var scid := packet_scid(h);\n"
                    },
                    {
                        "line": 824,
                        "file": "quic_shim.ivy",
                        "instruction": "        e := quic_packet_type.zero_rtt if ~h.hdr_long #& ~established_1rtt_keys(scid)\n"
                    },
                    {
                        "line": 825,
                        "file": "quic_shim.ivy",
                        "instruction": "            else (quic_packet_type.initial if bvand(h.hdr_type,0x30) = 0x00\n"
                    },
                    {
                        "line": 826,
                        "file": "quic_shim.ivy",
                        "instruction": "                  else quic_packet_type.handshake);\n"
                    },
                    {
                        "line": 827,
                        "file": "quic_shim.ivy",
                        "instruction": "    # } else {\n"
                    },
                    {
                        "line": 828,
                        "file": "quic_shim.ivy",
                        "instruction": "        # e := quic_packet_type.one_rtt if ~h.hdr_long\n"
                    },
                    {
                        "line": 829,
                        "file": "quic_shim.ivy",
                        "instruction": "        #     else (quic_packet_type.initial if bvand(h.hdr_type,0x30) = 0x00\n"
                    },
                    {
                        "line": 830,
                        "file": "quic_shim.ivy",
                        "instruction": "        #           else quic_packet_type.handshake);\n"
                    },
                    {
                        "line": 831,
                        "file": "quic_shim.ivy",
                        "instruction": "    # }\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "e",
                    "type": "quic_packet_type"
                },
                "action_parameters": [
                    {
                        "name": "h",
                        "type": "prot.header_info"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 839,
                "action_name": "packet_scid",
                "implementation": [
                    {
                        "line": 838,
                        "file": "quic_shim.ivy",
                        "instruction": "    if h.hdr_long {\n"
                    },
                    {
                        "line": 839,
                        "file": "quic_shim.ivy",
                        "instruction": "        scid := h.scid;\n"
                    },
                    {
                        "line": 840,
                        "file": "quic_shim.ivy",
                        "instruction": "    } else {\n"
                    },
                    {
                        "line": 841,
                        "file": "quic_shim.ivy",
                        "instruction": "        if used_cid(h.dcid) {\n"
                    },
                    {
                        "line": 842,
                        "file": "quic_shim.ivy",
                        "instruction": "            scid := connected_to(h.dcid);\n"
                    },
                    {
                        "line": 843,
                        "file": "quic_shim.ivy",
                        "instruction": "        } else {\n"
                    },
                    {
                        "line": 844,
                        "file": "quic_shim.ivy",
                        "instruction": "            scid := 0;\n"
                    },
                    {
                        "line": 845,
                        "file": "quic_shim.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 846,
                        "file": "quic_shim.ivy",
                        "instruction": "    }\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "scid",
                    "type": "cid"
                },
                "action_parameters": [
                    {
                        "name": "h",
                        "type": "prot.header_info"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 254,
                "action_name": "padding_packet_event",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "host",
                        "type": "endpoint_id"
                    },
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "stream_data"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 799,
                "action_name": "recv_0rtt_pkt",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "spkt",
                        "type": "quic_packet_0rtt"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 249,
                "action_name": "recv_packet",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "host",
                        "type": "endpoint_id"
                    },
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 250,
                "action_name": "recv_packet_mim",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "host",
                        "type": "endpoint_id"
                    },
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "stream_data"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 253,
                "action_name": "recv_packet_victim",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "host",
                        "type": "endpoint_id"
                    },
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "stream_data"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 798,
                "action_name": "recv_retry_pkt",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "spkt",
                        "type": "quic_packet_retry"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 719,
                "action_name": "recv_vn_pkt",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "spkt",
                        "type": "quic_packet_vn"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 856,
                "action_name": "reference_pkt_num",
                "implementation": [
                    {
                        "line": 855,
                        "file": "quic_shim.ivy",
                        "instruction": "    var h := prot.get_header_info(spkt,decrypt);\n"
                    },
                    {
                        "line": 856,
                        "file": "quic_shim.ivy",
                        "instruction": "    var e := packet_encryption_level(h);\n"
                    },
                    {
                        "line": 857,
                        "file": "quic_shim.ivy",
                        "instruction": "    var scid := packet_scid(h);\n"
                    },
                    {
                        "line": 858,
                        "file": "quic_shim.ivy",
                        "instruction": "    last_packet_type(scid)   := packet_encryption_level_up(h);\n"
                    },
                    {
                        "line": 859,
                        "file": "quic_shim.ivy",
                        "instruction": "    last_packet_length(scid) := h.payload_length;\n"
                    },
                    {
                        "line": 860,
                        "file": "quic_shim.ivy",
                        "instruction": "    pnum := last_pkt_num(scid,e);\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "pnum",
                    "type": "pkt_num"
                },
                "action_parameters": [
                    {
                        "name": "spkt",
                        "type": "stream_data"
                    },
                    {
                        "name": "decrypt",
                        "type": "bool"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 948,
                "action_name": "scid_size_pos",
                "implementation": [
                    {
                        "line": 947,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 948,
                        "file": "quic_shim.ivy",
                        "instruction": "    res = 0;\n"
                    },
                    {
                        "line": 949,
                        "file": "quic_shim.ivy",
                        "instruction": "    if(const char* env_p2 = std::getenv(\"TEST_TYPE\")) { \n"
                    },
                    {
                        "line": 950,
                        "file": "quic_shim.ivy",
                        "instruction": "      if(strcmp(env_p2, \"server\") == 0 || cond) {\n"
                    },
                    {
                        "line": 951,
                        "file": "quic_shim.ivy",
                        "instruction": "         if(const char* env_p3 = std::getenv(\"TEST_SCIL\")) {\n"
                    },
                    {
                        "line": 952,
                        "file": "quic_shim.ivy",
                        "instruction": "            std::cerr << \"TEST_SCIL \" << env_p3 << \"\\n\";\n"
                    },
                    {
                        "line": 953,
                        "file": "quic_shim.ivy",
                        "instruction": "\t        res = atoi(env_p3);\n"
                    },
                    {
                        "line": 954,
                        "file": "quic_shim.ivy",
                        "instruction": "         } else \n"
                    },
                    {
                        "line": 955,
                        "file": "quic_shim.ivy",
                        "instruction": "\t   res = 8;\n"
                    },
                    {
                        "line": 956,
                        "file": "quic_shim.ivy",
                        "instruction": "      } else \n"
                    },
                    {
                        "line": 957,
                        "file": "quic_shim.ivy",
                        "instruction": "\t  res = 8;\n"
                    },
                    {
                        "line": 958,
                        "file": "quic_shim.ivy",
                        "instruction": "    } else \n"
                    },
                    {
                        "line": 959,
                        "file": "quic_shim.ivy",
                        "instruction": "      res = 8;\n"
                    },
                    {
                        "line": 960,
                        "file": "quic_shim.ivy",
                        "instruction": "    std::cerr <<  \"scid_size_pos size: \" <<  res << \"\\n\";\n"
                    },
                    {
                        "line": 961,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "res",
                    "type": "stream_pos"
                },
                "action_parameters": [
                    {
                        "name": "cond",
                        "type": "bool"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 311,
                "action_name": "show_biatch",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 261,
                "action_name": "show_last_datagram_size",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "size",
                        "type": "stream_pos"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 626,
                "action_name": "show_set_initial_keys",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "ik",
                        "type": "stream_data"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 263,
                "action_name": "show_socket",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "n",
                        "type": "net.socket"
                    }
                ],
                "events": true
            }
        },
        {
            "tls_api_name": "tls_api",
            "tls_api_object": [],
            "tls_api_module": {
                "module_parameters": [],
                "module_attributes": []
            },
            "actions": [
                {
                    "line": 289,
                    "action_name": "tls_api.lower.send",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "bytes",
                            "type": "stream_data"
                        }
                    ],
                    "exported": false,
                    "events": false
                },
                {
                    "line": 329,
                    "action_name": "tls_api.upper.keys_established",
                    "implementation": [
                        {
                            "line": 326,
                            "file": "quic_shim.ivy",
                            "instruction": "    # var e := quic_packet_type.handshake if lev = 2 else quic_packet_type.one_rtt;\n"
                        },
                        {
                            "line": 327,
                            "file": "quic_shim.ivy",
                            "instruction": "    # if zero_rtt_allowed {\n"
                        },
                        {
                            "line": 328,
                            "file": "quic_shim.ivy",
                            "instruction": "    var e := quic_packet_type.handshake if lev = 2 else quic_packet_type.zero_rtt;\n"
                        },
                        {
                            "line": 329,
                            "file": "quic_shim.ivy",
                            "instruction": "    # };\n"
                        },
                        {
                            "line": 330,
                            "file": "quic_shim.ivy",
                            "instruction": "    call tls_keys_established_event(tls_id_to_cid(tls_id),e); #tls_id = server.tls_id  for client ?\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "tls_id",
                            "type": "tls_api.id"
                        },
                        {
                            "name": "lev",
                            "type": "tls_api.upper.level"
                        }
                    ],
                    "exported": false,
                    "events": false
                }
            ]
        },
        {
            "actions": {
                "line": 257,
                "action_name": "undecryptable_packet_event",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "host",
                        "type": "endpoint_id"
                    },
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "stream_data"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 259,
                "action_name": "undefined_host_error",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "host",
                        "type": "endpoint_id"
                    },
                    {
                        "name": "s",
                        "type": "net.socket"
                    },
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 800,
                "action_name": "version_not_found_event",
                "action_return": null,
                "exported": false,
                "action_parameters": null,
                "events": true
            }
        }
    ],
    "ivy_quic_client_behavior.ivy": [
        {
            "actions": {
                "line": 404,
                "action_name": "client_send_event",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "s",
                        "type": "stream_id"
                    },
                    {
                        "name": "end",
                        "type": "stream_pos"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 96,
                "action_name": "dst_is_generated_tls",
                "implementation": [
                    {
                        "line": 95,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    res := dst = client.ep | dst = client_alt | dst = client_vn\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "res",
                    "type": "bool"
                },
                "action_parameters": [
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 37,
                "action_name": "endpoint_to_pid",
                "implementation": [
                    {
                        "line": 36,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    if src = client.ep {\n"
                    },
                    {
                        "line": 37,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "        pid := endpoint_id.client;\n"
                    },
                    {
                        "line": 38,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    } else if src = client_alt {\n"
                    },
                    {
                        "line": 39,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "        pid:= endpoint_id.client_alt;\n"
                    },
                    {
                        "line": 40,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    } else if src = client_vn {\n"
                    },
                    {
                        "line": 41,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "        pid:= endpoint_id.client_vn;\n"
                    },
                    {
                        "line": 42,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    } \n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "pid",
                    "type": "endpoint_id"
                },
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 63,
                "action_name": "endpoint_to_socket",
                "implementation": [
                    {
                        "line": 62,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    if src = client.ep {\n"
                    },
                    {
                        "line": 63,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "        socket := sock;\n"
                    },
                    {
                        "line": 64,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    } else if src = client_alt {\n"
                    },
                    {
                        "line": 65,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "        socket := sock_alt;\n"
                    },
                    {
                        "line": 66,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    } else if src = client_vn {\n"
                    },
                    {
                        "line": 67,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "        socket := sock_vn;\n"
                    },
                    {
                        "line": 68,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    } \n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "socket",
                    "type": "net.socket"
                },
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 478,
                "action_name": "show_tls_send_event",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "data",
                        "type": "stream_data"
                    },
                    {
                        "name": "pos",
                        "type": "stream_pos"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "tls_id",
                        "type": "tls_api.id"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 49,
                "action_name": "socket_endpoint",
                "implementation": [
                    {
                        "line": 52,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    dst := client.ep if (is_mim_standalone | src = mim_server_target.ep) else server.ep;\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "dst",
                    "type": "ip.endpoint"
                },
                "action_parameters": [
                    {
                        "name": "host",
                        "type": "endpoint_id"
                    },
                    {
                        "name": "s",
                        "type": "net.socket"
                    },
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 53,
                "action_name": "socket_endpoint_mim",
                "implementation": [
                    {
                        "line": 52,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    dst := client.ep if (is_mim_standalone | src = mim_server_target.ep) else server.ep;\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "dst",
                    "type": "ip.endpoint"
                },
                "action_parameters": [
                    {
                        "name": "host",
                        "type": "endpoint_id"
                    },
                    {
                        "name": "s",
                        "type": "net.socket"
                    },
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 107,
                "action_name": "src_tls_id",
                "implementation": [
                    {
                        "line": 106,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    tls_id := client.tls_id if src = client.ep \n"
                    },
                    {
                        "line": 107,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    else second_client.tls_id; #TODO can cause error server vn eg\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "tls_id",
                    "type": "tls_api.id"
                },
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 85,
                "action_name": "tls_id_to_cid",
                "implementation": [
                    {
                        "line": 84,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    scid := the_cid;\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "scid",
                    "type": "cid"
                },
                "action_parameters": [
                    {
                        "name": "tls_id",
                        "type": "tls_api.id"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 79,
                "action_name": "tls_id_to_dst",
                "implementation": [
                    {
                        "line": 78,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    dst := server.ep if tls_id = client.tls_id else client.ep;\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "dst",
                    "type": "ip.endpoint"
                },
                "action_parameters": [
                    {
                        "name": "tls_id",
                        "type": "tls_api.id"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 72,
                "action_name": "tls_id_to_src",
                "implementation": [
                    {
                        "line": 71,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    src := client.ep if tls_id = client.tls_id & ~version_negociated else (client_vn if tls_id = client.tls_id & version_negociated else server.ep);\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "src",
                    "type": "ip.endpoint"
                },
                "action_parameters": [
                    {
                        "name": "tls_id",
                        "type": "tls_api.id"
                    }
                ],
                "exported": false,
                "events": false
            }
        }
    ],
    "quic_packet.ivy": [
        {
            "actions": {
                "line": 662,
                "action_name": "handle_client_transport_parameters",
                "implementation": [
                    {
                        "line": 660,
                        "file": "quic_packet.ivy",
                        "instruction": "#    call client_transport_parameters_event(src,dst,scid,tps);\n"
                    },
                    {
                        "line": 661,
                        "file": "quic_packet.ivy",
                        "instruction": "    var idx := tps.transport_parameters.begin;\n"
                    },
                    {
                        "line": 662,
                        "file": "quic_packet.ivy",
                        "instruction": "    while idx < tps.transport_parameters.end {\n"
                    },
                    {
                        "line": 663,
                        "file": "quic_packet.ivy",
                        "instruction": "        trans_params(scid) := tps.transport_parameters.value(idx).set(trans_params(scid));\n"
                    },
                    {
                        "line": 664,
                        "file": "quic_packet.ivy",
                        "instruction": "        idx := idx.next\n"
                    },
                    {
                        "line": 665,
                        "file": "quic_packet.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 666,
                        "file": "quic_packet.ivy",
                        "instruction": "    #require initial_max_stream_data_bidi_local.is_set(trans_params(scid));  # [1]\n"
                    },
                    {
                        "line": 667,
                        "file": "quic_packet.ivy",
                        "instruction": "    #require initial_max_data.is_set(trans_params(scid));  # [2]\n"
                    },
                    {
                        "line": 668,
                        "file": "quic_packet.ivy",
                        "instruction": "    #require max_idle_timeout.is_set(trans_params(scid));  # [3] TODO\n"
                    },
                    {
                        "line": 669,
                        "file": "quic_packet.ivy",
                        "instruction": "    #require initial_max_stream_data_bidi_remote.is_set(trans_params(scid));  # [1]\n"
                    },
                    {
                        "line": 670,
                        "file": "quic_packet.ivy",
                        "instruction": "    #require initial_max_stream_data_uni.is_set(trans_params(scid));  # [1]\n"
                    },
                    {
                        "line": 671,
                        "file": "quic_packet.ivy",
                        "instruction": "    if ~ _generating  { \n"
                    },
                    {
                        "line": 672,
                        "file": "quic_packet.ivy",
                        "instruction": "        # for tests where we check that the implementation behave well if not present \n"
                    },
                    {
                        "line": 673,
                        "file": "quic_packet.ivy",
                        "instruction": "        if client_non_zero_scil & ~(scid = 1) & (client_initial_version = 0x00000001 | client_initial_version = 0x00000001){ # TODO \n"
                    },
                    {
                        "line": 674,
                        "file": "quic_packet.ivy",
                        "instruction": "            require initial_source_connection_id.is_set(trans_params(scid));  # [5]\n"
                    },
                    {
                        "line": 675,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 676,
                        "file": "quic_packet.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 677,
                        "file": "quic_packet.ivy",
                        "instruction": "    if is_client_hello {\n"
                    },
                    {
                        "line": 678,
                        "file": "quic_packet.ivy",
                        "instruction": "        require ~stateless_reset_token.is_set(trans_params(scid));  # [4]\n"
                    },
                    {
                        "line": 679,
                        "file": "quic_packet.ivy",
                        "instruction": "    } else {\n"
                    },
                    {
                        "line": 680,
                        "file": "quic_packet.ivy",
                        "instruction": "        if ~ _generating & ~(scid = 1) {  # TODO\n"
                    },
                    {
                        "line": 681,
                        "file": "quic_packet.ivy",
                        "instruction": "            require original_destination_connection_id.is_set(trans_params(scid));  # [6]\n"
                    },
                    {
                        "line": 682,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 683,
                        "file": "quic_packet.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 684,
                        "file": "quic_packet.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 685,
                        "file": "quic_packet.ivy",
                        "instruction": "    if ~is_client_hello & (retry_recv(client_initial_rcid) | retry_sent(client_initial_rcid)) & ~zero_length_token {\n"
                    },
                    {
                        "line": 686,
                        "file": "quic_packet.ivy",
                        "instruction": "        require retry_source_connection_id.is_set(trans_params(scid));\n"
                    },
                    {
                        "line": 687,
                        "file": "quic_packet.ivy",
                        "instruction": "        require retry_source_connection_id.value(trans_params(scid)).rcid = client_initial_rcid; # todo generalize\n"
                    },
                    {
                        "line": 688,
                        "file": "quic_packet.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 689,
                        "file": "quic_packet.ivy",
                        "instruction": "    \n"
                    },
                    {
                        "line": 690,
                        "file": "quic_packet.ivy",
                        "instruction": "    # [7]\n"
                    },
                    {
                        "line": 691,
                        "file": "quic_packet.ivy",
                        "instruction": "    if min_ack_delay.is_set(trans_params(scid)) & max_ack_delay.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 692,
                        "file": "quic_packet.ivy",
                        "instruction": "        var min_ack_milli := min_ack_delay.value(trans_params(scid)).exponent_8 * 1000;\n"
                    },
                    {
                        "line": 693,
                        "file": "quic_packet.ivy",
                        "instruction": "        require  min_ack_milli < max_ack_delay.value(trans_params(scid)).exponent_8;  # [1]\n"
                    },
                    {
                        "line": 694,
                        "file": "quic_packet.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 695,
                        "file": "quic_packet.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 696,
                        "file": "quic_packet.ivy",
                        "instruction": "    # var initial_max_stream_data_uni_server_0rtt : stream_pos_32;\n"
                    },
                    {
                        "line": 697,
                        "file": "quic_packet.ivy",
                        "instruction": "    # var initial_max_stream_data_bidi_remote_server_0rtt : stream_pos_32;\n"
                    },
                    {
                        "line": 698,
                        "file": "quic_packet.ivy",
                        "instruction": "    # var initial_max_data_server_0rtt : stream_pos_32;\n"
                    },
                    {
                        "line": 699,
                        "file": "quic_packet.ivy",
                        "instruction": "    # var initial_max_stream_data_bidi_local_server_0rtt : stream_pos_32;\n"
                    },
                    {
                        "line": 700,
                        "file": "quic_packet.ivy",
                        "instruction": "    # var initial_max_stream_id_bidi_server_0rtt : stream_pos_32;\n"
                    },
                    {
                        "line": 701,
                        "file": "quic_packet.ivy",
                        "instruction": "    # var active_connection_id_limit_server_0rtt : stream_pos_32;\n"
                    },
                    {
                        "line": 702,
                        "file": "quic_packet.ivy",
                        "instruction": "    # [6-0rtt]\n"
                    },
                    {
                        "line": 703,
                        "file": "quic_packet.ivy",
                        "instruction": "    if zero_rtt_server_test & ~is_client_hello {\n"
                    },
                    {
                        "line": 704,
                        "file": "quic_packet.ivy",
                        "instruction": "        if initial_max_stream_data_uni.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 705,
                        "file": "quic_packet.ivy",
                        "instruction": "            require initial_max_stream_data_uni.value(trans_params(scid)).stream_pos_32 >= initial_max_stream_data_uni_server_0rtt; # todo generalize\n"
                    },
                    {
                        "line": 706,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 707,
                        "file": "quic_packet.ivy",
                        "instruction": "        if initial_max_stream_data_bidi_remote.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 708,
                        "file": "quic_packet.ivy",
                        "instruction": "            require initial_max_stream_data_bidi_remote.value(trans_params(scid)).stream_pos_32 >= initial_max_stream_data_bidi_remote_server_0rtt; # todo generalize\n"
                    },
                    {
                        "line": 709,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 710,
                        "file": "quic_packet.ivy",
                        "instruction": "        if initial_max_data.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 711,
                        "file": "quic_packet.ivy",
                        "instruction": "            require initial_max_data.value(trans_params(scid)).stream_pos_32 >= initial_max_data_server_0rtt; # todo generalize\n"
                    },
                    {
                        "line": 712,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 713,
                        "file": "quic_packet.ivy",
                        "instruction": "        if initial_max_stream_data_bidi_local.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 714,
                        "file": "quic_packet.ivy",
                        "instruction": "            require initial_max_stream_data_bidi_local.value(trans_params(scid)).stream_pos_32 >= initial_max_stream_data_bidi_local_server_0rtt; # todo generalize\n"
                    },
                    {
                        "line": 715,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 716,
                        "file": "quic_packet.ivy",
                        "instruction": "        if initial_max_stream_id_bidi.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 717,
                        "file": "quic_packet.ivy",
                        "instruction": "            require initial_max_stream_id_bidi.value(trans_params(scid)).stream_id_16 >= initial_max_stream_id_bidi_server_0rtt; # todo generalize\n"
                    },
                    {
                        "line": 718,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 719,
                        "file": "quic_packet.ivy",
                        "instruction": "        if active_connection_id_limit.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 720,
                        "file": "quic_packet.ivy",
                        "instruction": "            require active_connection_id_limit.value(trans_params(scid)).stream_pos_32 >= active_connection_id_limit_server_0rtt; # todo generalize\n"
                    },
                    {
                        "line": 721,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 722,
                        "file": "quic_packet.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 723,
                        "file": "quic_packet.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 724,
                        "file": "quic_packet.ivy",
                        "instruction": "    # save server TPs\n"
                    },
                    {
                        "line": 725,
                        "file": "quic_packet.ivy",
                        "instruction": "    if ~is_client_hello {\n"
                    },
                    {
                        "line": 726,
                        "file": "quic_packet.ivy",
                        "instruction": "        if initial_max_stream_data_uni.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 727,
                        "file": "quic_packet.ivy",
                        "instruction": "            call tls_api.upper.save_initial_max_stream_data_uni(initial_max_stream_data_uni.value(trans_params(scid)).stream_pos_32);\n"
                    },
                    {
                        "line": 728,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 729,
                        "file": "quic_packet.ivy",
                        "instruction": "        if initial_max_stream_data_bidi_remote.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 730,
                        "file": "quic_packet.ivy",
                        "instruction": "            call tls_api.upper.save_initial_max_stream_data_bidi_remote(initial_max_stream_data_bidi_remote.value(trans_params(scid)).stream_pos_32);\n"
                    },
                    {
                        "line": 731,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 732,
                        "file": "quic_packet.ivy",
                        "instruction": "        if initial_max_data.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 733,
                        "file": "quic_packet.ivy",
                        "instruction": "            call tls_api.upper.save_initial_max_data(initial_max_data.value(trans_params(scid)).stream_pos_32);\n"
                    },
                    {
                        "line": 734,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 735,
                        "file": "quic_packet.ivy",
                        "instruction": "        if initial_max_stream_data_bidi_local.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 736,
                        "file": "quic_packet.ivy",
                        "instruction": "            call tls_api.upper.save_initial_max_stream_data_bidi_local(initial_max_stream_data_bidi_local.value(trans_params(scid)).stream_pos_32);\n"
                    },
                    {
                        "line": 737,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 738,
                        "file": "quic_packet.ivy",
                        "instruction": "        if initial_max_stream_id_bidi.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 739,
                        "file": "quic_packet.ivy",
                        "instruction": "            call tls_api.upper.save_initial_max_stream_id_bidi(initial_max_stream_id_bidi.value(trans_params(scid)).stream_id_16);\n"
                    },
                    {
                        "line": 740,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 741,
                        "file": "quic_packet.ivy",
                        "instruction": "        if active_connection_id_limit.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 742,
                        "file": "quic_packet.ivy",
                        "instruction": "            call tls_api.upper.save_active_connection_id_limit(active_connection_id_limit.value(trans_params(scid)).stream_pos_32);\n"
                    },
                    {
                        "line": 743,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 744,
                        "file": "quic_packet.ivy",
                        "instruction": "    }\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "tps",
                        "type": "quic_transport_parameters"
                    },
                    {
                        "name": "is_client_hello",
                        "type": "bool"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 616,
                "action_name": "handle_tls_extensions",
                "implementation": [
                    {
                        "line": 612,
                        "file": "quic_packet.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 613,
                        "file": "quic_packet.ivy",
                        "instruction": "    # We process the extensions in a message in order.\n"
                    },
                    {
                        "line": 614,
                        "file": "quic_packet.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 615,
                        "file": "quic_packet.ivy",
                        "instruction": "    var idx := exts.begin;\n"
                    },
                    {
                        "line": 616,
                        "file": "quic_packet.ivy",
                        "instruction": "    while idx < exts.end {\n"
                    },
                    {
                        "line": 617,
                        "file": "quic_packet.ivy",
                        "instruction": "        var ext := exts.value(idx);\n"
                    },
                    {
                        "line": 618,
                        "file": "quic_packet.ivy",
                        "instruction": "            \n"
                    },
                    {
                        "line": 619,
                        "file": "quic_packet.ivy",
                        "instruction": "        # For every `quic_transport_parameters` extension...\n"
                    },
                    {
                        "line": 620,
                        "file": "quic_packet.ivy",
                        "instruction": "        if some (tps:quic_transport_parameters) ext *> tps {\n"
                    },
                    {
                        "line": 621,
                        "file": "quic_packet.ivy",
                        "instruction": "            call handle_client_transport_parameters(src,dst,scid,tps,is_client_hello);\n"
                    },
                    {
                        "line": 622,
                        "file": "quic_packet.ivy",
                        "instruction": "            trans_params_set(scid) := true;\n"
                    },
                    {
                        "line": 623,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 624,
                        "file": "quic_packet.ivy",
                        "instruction": "        idx := idx.next\n"
                    },
                    {
                        "line": 625,
                        "file": "quic_packet.ivy",
                        "instruction": "    };\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "exts",
                        "type": "vector[tls.extension]"
                    },
                    {
                        "name": "is_client_hello",
                        "type": "bool"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 587,
                "action_name": "handle_tls_handshake",
                "implementation": [
                    {
                        "line": 587,
                        "file": "quic_packet.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 588,
                        "file": "quic_packet.ivy",
                        "instruction": "    if some(ch:tls.client_hello) hs *> ch {\n"
                    },
                    {
                        "line": 589,
                        "file": "quic_packet.ivy",
                        "instruction": "        is_client(scid) := true;\n"
                    },
                    {
                        "line": 590,
                        "file": "quic_packet.ivy",
                        "instruction": "        call handle_tls_extensions(src,dst,scid,ch.extensions,true);\n"
                    },
                    {
                        "line": 591,
                        "file": "quic_packet.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 592,
                        "file": "quic_packet.ivy",
                        "instruction": "    else if some(sh:tls.server_hello) hs *> sh {\n"
                    },
                    {
                        "line": 593,
                        "file": "quic_packet.ivy",
                        "instruction": "#        call map_cids(src,scid,dcid);    # [1]\n"
                    },
                    {
                        "line": 594,
                        "file": "quic_packet.ivy",
                        "instruction": "#        call map_cids(dst,dcid,scid);\n"
                    },
                    {
                        "line": 595,
                        "file": "quic_packet.ivy",
                        "instruction": "        call handle_tls_extensions(src,dst,scid,sh.extensions,false);\n"
                    },
                    {
                        "line": 596,
                        "file": "quic_packet.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 597,
                        "file": "quic_packet.ivy",
                        "instruction": "    else if some(ee:tls.encrypted_extensions) hs *> ee {\n"
                    },
                    {
                        "line": 598,
                        "file": "quic_packet.ivy",
                        "instruction": "        call handle_tls_extensions(src,dst,scid,ee.extensions,false);\n"
                    },
                    {
                        "line": 599,
                        "file": "quic_packet.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 600,
                        "file": "quic_packet.ivy",
                        "instruction": "    if some(fh:tls.finished) hs *> fh {\n"
                    },
                    {
                        "line": 601,
                        "file": "quic_packet.ivy",
                        "instruction": "        tls_handshake_finished := true;\n"
                    },
                    {
                        "line": 602,
                        "file": "quic_packet.ivy",
                        "instruction": "    }\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "hs",
                        "type": "tls.handshake"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 87,
                "action_name": "packet_event",
                "implementation": [
                    {
                        "line": 87,
                        "file": "quic_packet.ivy",
                        "instruction": "    \n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "quic_packet_name": "quic_packet",
            "quic_packet_object": [
                {
                    "name": "ptype",
                    "type": "quic_packet_type,"
                },
                {
                    "name": "pversion",
                    "type": "version,"
                },
                {
                    "name": "dst_cid",
                    "type": "cid,"
                },
                {
                    "name": "src_cid",
                    "type": "cid,"
                },
                {
                    "name": "token",
                    "type": "stream_data,"
                },
                {
                    "name": "seq_num",
                    "type": "pkt_num,"
                },
                {
                    "name": "payload",
                    "type": "frame.arr"
                }
            ],
            "quic_packet_module": null,
            "actions": [
                {
                    "line": 66,
                    "action_name": "quic_packet.long",
                    "implementation": [
                        {
                            "line": 65,
                            "file": "quic_packet.ivy",
                            "instruction": "        res := pkt.ptype ~= quic_packet_type.one_rtt;\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "res",
                        "type": "bool"
                    },
                    "action_parameters": [
                        {
                            "name": "pkt",
                            "type": "this"
                        }
                    ],
                    "exported": false,
                    "events": false
                }
            ]
        },
        {
            "actions": {
                "line": 564,
                "action_name": "show_initial_request_initial",
                "action_return": null,
                "exported": false,
                "action_parameters": null,
                "events": true
            }
        }
    ],
    "quic_transport_error_code.ivy": [
        {
            "actions": {
                "line": 87,
                "action_name": "handle_transport_error",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "ec",
                        "type": "error_code"
                    }
                ],
                "exported": false,
                "events": false
            }
        }
    ],
    "quic_packet_vn.ivy": [
        {
            "actions": {
                "line": 181,
                "action_name": "inc_cid",
                "implementation": [
                    {
                        "line": 180,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 181,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    res.val = c.val + inc;\n"
                    },
                    {
                        "line": 182,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "res",
                    "type": "cid"
                },
                "action_parameters": [
                    {
                        "name": "c",
                        "type": "cid"
                    },
                    {
                        "name": "inc",
                        "type": "stream_pos"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 82,
                "action_name": "packet_event_vn",
                "implementation": [
                    {
                        "line": 82,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    \n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet_vn"
                    }
                ],
                "exported": false,
                "events": false
            }
        }
    ],
    "forged_quic_packet.ivy": [
        {
            "actions": {
                "action_name": "init",
                "action_return": null,
                "implementation": [
                    {
                        "line": 160,
                        "file": "forged_quic_packet.ivy",
                        "instruction": "    packed_forwarded(P) := false;\n"
                    },
                    {
                        "line": 161,
                        "file": "forged_quic_packet.ivy",
                        "instruction": "    packed_forwarded_arr(P) := false;\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "exported": false,
                "events": false,
                "init": true,
                "action_parameters": null
            }
        }
    ],
    "forged_quic_packet_retry.ivy": [
        {
            "actions": {
                "action_name": "init",
                "action_return": null,
                "implementation": [
                    {
                        "line": 159,
                        "file": "forged_quic_packet_retry.ivy",
                        "instruction": "\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "exported": false,
                "events": false,
                "init": true,
                "action_parameters": null
            }
        }
    ],
    "replayed_quic_packet_0rtt.ivy": [
        {
            "actions": {
                "action_name": "init",
                "action_return": null,
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "exported": false,
                "events": false,
                "init": true,
                "action_parameters": null
            }
        }
    ],
    "ivy_quic_mim.ivy": [
        {
            "actions": {
                "action_name": "init",
                "action_return": null,
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "exported": false,
                "events": false,
                "init": true,
                "action_parameters": null
            }
        }
    ],
    "ivy_quic_client_standard_tp.ivy": [
        {
            "actions": {
                "line": 4,
                "action_name": "make_transport_parameters",
                "implementation": [
                    {
                        "line": 3,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    var imsdbl : initial_max_stream_data_bidi_local;\n"
                    },
                    {
                        "line": 4,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    imsdbl.stream_pos_32 := max_stream_data;\n"
                    },
                    {
                        "line": 5,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    var imd : initial_max_data;\n"
                    },
                    {
                        "line": 6,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    imd.stream_pos_32 := random_stream_pos(1,0xFFFFFFF);\n"
                    },
                    {
                        "line": 7,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    var it : max_idle_timeout;\n"
                    },
                    {
                        "line": 8,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    it.seconds_16 := random_microsecs(0,0xFFFFFFF);\n"
                    },
                    {
                        "line": 9,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    var imsdbr : initial_max_stream_data_bidi_remote;\n"
                    },
                    {
                        "line": 10,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    imsdbr.stream_pos_32 := max_stream_data;\n"
                    },
                    {
                        "line": 11,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    var imsdu : initial_max_stream_data_uni;\n"
                    },
                    {
                        "line": 12,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    imsdu.stream_pos_32 := random_stream_pos(1,0xFFFFFFF);\n"
                    },
                    {
                        "line": 13,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    tp.transport_parameters := tp.transport_parameters.append(imsdbl);\n"
                    },
                    {
                        "line": 14,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    tp.transport_parameters := tp.transport_parameters.append(imd);\n"
                    },
                    {
                        "line": 15,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    tp.transport_parameters := tp.transport_parameters.append(it);\n"
                    },
                    {
                        "line": 16,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    tp.transport_parameters := tp.transport_parameters.append(imsdbr);\n"
                    },
                    {
                        "line": 17,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    tp.transport_parameters := tp.transport_parameters.append(imsdu);\n"
                    },
                    {
                        "line": 18,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 19,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    var icid : initial_source_connection_id; #TODO update v29\n"
                    },
                    {
                        "line": 20,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    icid.scid := the_cid;\n"
                    },
                    {
                        "line": 21,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    tp.transport_parameters := tp.transport_parameters.append(icid);\n"
                    },
                    {
                        "line": 22,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 23,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    var no_migration : disable_active_migration; #TODO update v29\n"
                    },
                    {
                        "line": 24,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    tp.transport_parameters := tp.transport_parameters.append(no_migration);\n"
                    },
                    {
                        "line": 25,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 26,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    var max_streams_bidi : initial_max_stream_id_bidi; #TODO update v29\n"
                    },
                    {
                        "line": 27,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    max_streams_bidi.stream_id_16 := random_stream_id(4,0xFFFFFFF);\n"
                    },
                    {
                        "line": 28,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    tp.transport_parameters := tp.transport_parameters.append(max_streams_bidi);\n"
                    },
                    {
                        "line": 29,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 30,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    var max_streams_uni : initial_max_stream_id_uni; #TODO update rfc9000\n"
                    },
                    {
                        "line": 31,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    max_streams_uni.stream_id_16 := random_stream_id(4,0xFFFFFFF);\n"
                    },
                    {
                        "line": 32,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    tp.transport_parameters := tp.transport_parameters.append(max_streams_uni);\n"
                    },
                    {
                        "line": 33,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 34,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    # var max_ack_dela : max_ack_delay; #TODO update rfc9000 -> ERROR\n"
                    },
                    {
                        "line": 35,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    # max_ack_dela.exponent_8 := random_microsecs(4,0xFFFFFFF);\n"
                    },
                    {
                        "line": 36,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    # tp.transport_parameters := tp.transport_parameters.append(max_ack_dela);\n"
                    },
                    {
                        "line": 37,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 38,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    # var max_packet_z : max_packet_size; #TODO update rfc9000\n"
                    },
                    {
                        "line": 39,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    # max_packet_z.stream_pos_16 := 1500;\n"
                    },
                    {
                        "line": 40,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    # tp.transport_parameters := tp.transport_parameters.append(max_packet_z);\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "tp",
                    "type": "quic_transport_parameters"
                },
                "action_parameters": null,
                "exported": false,
                "events": false
            }
        }
    ],
    "quic_packet_0rtt.ivy": [
        {
            "actions": {
                "line": 89,
                "action_name": "packet_event_0rtt",
                "implementation": [
                    {
                        "line": 89,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    \n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet_0rtt"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "quic_packet_0rtt_name": "quic_packet_0rtt",
            "quic_packet_0rtt_object": [
                {
                    "name": "ptype",
                    "type": "quic_packet_type,"
                },
                {
                    "name": "pversion",
                    "type": "version,"
                },
                {
                    "name": "dst_cid",
                    "type": "cid,"
                },
                {
                    "name": "src_cid",
                    "type": "cid,"
                },
                {
                    "name": "seq_num",
                    "type": "pkt_num,"
                },
                {
                    "name": "payload",
                    "type": "frame.arr"
                }
            ],
            "quic_packet_0rtt_module": null,
            "actions": [
                {
                    "line": 68,
                    "action_name": "quic_packet_0rtt.long",
                    "implementation": [
                        {
                            "line": 67,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "        res := pkt.ptype ~= quic_packet_type.one_rtt;\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "res",
                        "type": "bool"
                    },
                    "action_parameters": [
                        {
                            "name": "pkt",
                            "type": "this"
                        }
                    ],
                    "exported": false,
                    "events": false
                }
            ]
        }
    ],
    "quic_packet_retry.ivy": [
        {
            "actions": {
                "line": 90,
                "action_name": "packet_event_retry",
                "implementation": [
                    {
                        "line": 90,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    \n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet_retry"
                    }
                ],
                "exported": false,
                "events": false
            }
        }
    ],
    "quic_protection.ivy": [
        {
            "prot_name": "prot",
            "prot_object": [],
            "prot_module": {
                "module_parameters": [],
                "module_attributes": []
            },
            "actions": [
                {
                    "line": 551,
                    "action_name": "prot.byte_xor",
                    "implementation": [
                        {
                            "line": 550,
                            "file": "quic_protection.ivy",
                            "instruction": "        <<<\n"
                        },
                        {
                            "line": 551,
                            "file": "quic_protection.ivy",
                            "instruction": "        z = x ^ y;\n"
                        },
                        {
                            "line": 552,
                            "file": "quic_protection.ivy",
                            "instruction": "        >>>\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "z",
                        "type": "byte"
                    },
                    "action_parameters": [
                        {
                            "name": "x",
                            "type": "byte"
                        },
                        {
                            "name": "y",
                            "type": "byte"
                        }
                    ],
                    "exported": false,
                    "events": false
                },
                {
                    "line": 543,
                    "action_name": "prot.bytes_to_cid",
                    "implementation": [
                        {
                            "line": 542,
                            "file": "quic_protection.ivy",
                            "instruction": "        <<<\n"
                        },
                        {
                            "line": 543,
                            "file": "quic_protection.ivy",
                            "instruction": "        val.val = 0;\n"
                        },
                        {
                            "line": 544,
                            "file": "quic_protection.ivy",
                            "instruction": "        for (unsigned i = 0; i < bytes.size(); i++)\n"
                        },
                        {
                            "line": 545,
                            "file": "quic_protection.ivy",
                            "instruction": "            val.val = (val.val << 8) + bytes[i];\n"
                        },
                        {
                            "line": 546,
                            "file": "quic_protection.ivy",
                            "instruction": "        >>>\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "val",
                        "type": "cid"
                    },
                    "action_parameters": [
                        {
                            "name": "bytes",
                            "type": "stream_data"
                        }
                    ],
                    "exported": false,
                    "events": false
                },
                {
                    "line": 460,
                    "action_name": "prot.correct_pnum",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "last",
                            "type": "pkt_num"
                        },
                        {
                            "name": "pnum",
                            "type": "pkt_num"
                        },
                        {
                            "name": "pnum_len",
                            "type": "stream_pos"
                        }
                    ],
                    "exported": false,
                    "events": false
                },
                {
                    "line": 282,
                    "action_name": "prot.decrypt",
                    "implementation": [
                        {
                            "line": 411,
                            "file": "quic_protection.ivy",
                            "instruction": "        h.hdr_long := bvand(0x80,pkt.value(0)) ~= 0;\n"
                        },
                        {
                            "line": 412,
                            "file": "quic_protection.ivy",
                            "instruction": "        h.hdr_type := bfe[0][6](pkt.value(0));\n"
                        },
                        {
                            "line": 413,
                            "file": "quic_protection.ivy",
                            "instruction": "        if h.hdr_long {\n"
                        },
                        {
                            "line": 414,
                            "file": "quic_protection.ivy",
                            "instruction": "            var dcil : stream_pos := bfe[0][7](pkt.value(5));\n"
                        },
                        {
                            "line": 415,
                            "file": "quic_protection.ivy",
                            "instruction": "            h.dcid := bytes_to_cid(pkt.segment(6,6+dcil));\n"
                        },
                        {
                            "line": 416,
                            "file": "quic_protection.ivy",
                            "instruction": "            var scil : stream_pos := bfe[0][7](pkt.value(6+dcil));\n"
                        },
                        {
                            "line": 417,
                            "file": "quic_protection.ivy",
                            "instruction": "            h.scid := bytes_to_cid(pkt.segment(7+dcil,7+dcil+scil));\n"
                        },
                        {
                            "line": 418,
                            "file": "quic_protection.ivy",
                            "instruction": "            if decrypt {\n"
                        },
                        {
                            "line": 419,
                            "file": "quic_protection.ivy",
                            "instruction": "                client_initial_scil := scil;\n"
                        },
                        {
                            "line": 420,
                            "file": "quic_protection.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 421,
                            "file": "quic_protection.ivy",
                            "instruction": "            var pos := 1 + 4 + 1 + dcil + 1 + scil; #7 + dcil + scil;\n"
                        },
                        {
                            "line": 422,
                            "file": "quic_protection.ivy",
                            "instruction": "            var tlen : stream_pos := 0;\n"
                        },
                        {
                            "line": 423,
                            "file": "quic_protection.ivy",
                            "instruction": "            var retry_token_len : stream_pos := 0;\n"
                        },
                        {
                            "line": 424,
                            "file": "quic_protection.ivy",
                            "instruction": "            if bvand(h.hdr_type,0x30) = 0x00 {\n"
                        },
                        {
                            "line": 425,
                            "file": "quic_protection.ivy",
                            "instruction": "                #Initial packet\n"
                        },
                        {
                            "line": 426,
                            "file": "quic_protection.ivy",
                            "instruction": "                tlen := get_var_int_len(pkt,pos);\n"
                        },
                        {
                            "line": 427,
                            "file": "quic_protection.ivy",
                            "instruction": "                retry_token_len := get_var_int(pkt,pos,tlen);\n"
                        },
                        {
                            "line": 428,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.token_length := retry_token_len;\n"
                        },
                        {
                            "line": 429,
                            "file": "quic_protection.ivy",
                            "instruction": "                pos := pos + tlen + retry_token_len;\n"
                        },
                        {
                            "line": 430,
                            "file": "quic_protection.ivy",
                            "instruction": "            } else {\n"
                        },
                        {
                            "line": 431,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.token_length := 0;\n"
                        },
                        {
                            "line": 432,
                            "file": "quic_protection.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 433,
                            "file": "quic_protection.ivy",
                            "instruction": "            var len := get_var_int_len(pkt,pos);\n"
                        },
                        {
                            "line": 434,
                            "file": "quic_protection.ivy",
                            "instruction": "            h.payload_length := get_var_int(pkt,pos,len);\n"
                        },
                        {
                            "line": 435,
                            "file": "quic_protection.ivy",
                            "instruction": "            h.payload_length_pos := pos;\n"
                        },
                        {
                            "line": 436,
                            "file": "quic_protection.ivy",
                            "instruction": "            h.pkt_num_pos := pos + len;\n"
                        },
                        {
                            "line": 437,
                            "file": "quic_protection.ivy",
                            "instruction": "        }\n"
                        },
                        {
                            "line": 438,
                            "file": "quic_protection.ivy",
                            "instruction": "        else {\n"
                        },
                        {
                            "line": 439,
                            "file": "quic_protection.ivy",
                            "instruction": "            #todo check if good for client test too\n"
                        },
                        {
                            "line": 440,
                            "file": "quic_protection.ivy",
                            "instruction": "            if ~decrypt {\n"
                        },
                        {
                            "line": 441,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.dcid := bytes_to_cid(pkt.segment(1,1+client_initial_scil));\n"
                        },
                        {
                            "line": 442,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.payload_length_pos := 1+client_initial_scil;\n"
                        },
                        {
                            "line": 443,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.pkt_num_pos := 1+client_initial_scil;\n"
                        },
                        {
                            "line": 444,
                            "file": "quic_protection.ivy",
                            "instruction": "            } else {\n"
                        },
                        {
                            "line": 445,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.dcid := bytes_to_cid(pkt.segment(1,1+8));\n"
                        },
                        {
                            "line": 446,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.payload_length_pos := 1+8;\n"
                        },
                        {
                            "line": 447,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.pkt_num_pos := 1+8;\n"
                        },
                        {
                            "line": 448,
                            "file": "quic_protection.ivy",
                            "instruction": "            }\n"
                        },
                        {
                            "line": 449,
                            "file": "quic_protection.ivy",
                            "instruction": "        }\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "h",
                        "type": "header_info"
                    },
                    "action_parameters": [
                        {
                            "name": "pkt",
                            "type": "stream_data"
                        },
                        {
                            "name": "decrypt",
                            "type": "bool"
                        }
                    ],
                    "exported": false,
                    "events": false
                },
                {
                    "line": 53,
                    "action_name": "prot.encrypt",
                    "implementation": [
                        {
                            "line": 127,
                            "file": "quic_protection.ivy",
                            "instruction": "        var h := get_header_info(pkt,false);\n"
                        },
                        {
                            "line": 128,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pkt_rtt := pkt.segment(h.payload_length,pkt.end);\n"
                        },
                        {
                            "line": 129,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pkt_init := pkt.segment(0,h.payload_length);\n"
                        },
                        {
                            "line": 130,
                            "file": "quic_protection.ivy",
                            "instruction": "        var h_rtt := get_header_info(pkt_rtt,false);\n"
                        },
                        {
                            "line": 131,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 132,
                            "file": "quic_protection.ivy",
                            "instruction": "        # ----------------------------------------------------------------------\n"
                        },
                        {
                            "line": 133,
                            "file": "quic_protection.ivy",
                            "instruction": "       \n"
                        },
                        {
                            "line": 134,
                            "file": "quic_protection.ivy",
                            "instruction": "        var level := get_level(pkt_init);\n"
                        },
                        {
                            "line": 135,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample_size : stream_pos := tls.iv_size(c,level);        \n"
                        },
                        {
                            "line": 136,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pnum_pos := h.pkt_num_pos;\n"
                        },
                        {
                            "line": 137,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pnum_len := get_pnum_len(pkt_init);\n"
                        },
                        {
                            "line": 138,
                            "file": "quic_protection.ivy",
                            "instruction": "        var hdr_len := pnum_pos + pnum_len;\n"
                        },
                        {
                            "line": 139,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 140,
                            "file": "quic_protection.ivy",
                            "instruction": "        # Tricky: before encrypting the payload, we need to adjust the length field\n"
                        },
                        {
                            "line": 141,
                            "file": "quic_protection.ivy",
                            "instruction": "        # so that it includes the AEAD checksum. Of course, we don't know what\n"
                        },
                        {
                            "line": 142,
                            "file": "quic_protection.ivy",
                            "instruction": "        # that actually is. Here we assume it is 16 bytes. Even worse, the length of\n"
                        },
                        {
                            "line": 143,
                            "file": "quic_protection.ivy",
                            "instruction": "        # the length field could grow. Here, we assume the length field format is\n"
                        },
                        {
                            "line": 144,
                            "file": "quic_protection.ivy",
                            "instruction": "        # always two bytes. \n"
                        },
                        {
                            "line": 145,
                            "file": "quic_protection.ivy",
                            "instruction": "        if h.hdr_long {\n"
                        },
                        {
                            "line": 146,
                            "file": "quic_protection.ivy",
                            "instruction": "            var new_len := to_var_int_16(h.payload_length-10); # 16 vs 10 -10 +16\n"
                        },
                        {
                            "line": 147,
                            "file": "quic_protection.ivy",
                            "instruction": "            pkt_init := pkt_init.set(pnum_pos-2,new_len.value(0));\n"
                        },
                        {
                            "line": 148,
                            "file": "quic_protection.ivy",
                            "instruction": "            pkt_init := pkt_init.set(pnum_pos-1,new_len.value(1));\n"
                        },
                        {
                            "line": 149,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 150,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 151,
                            "file": "quic_protection.ivy",
                            "instruction": "        var hdr  := pkt_init.segment(0,pnum_pos);\n"
                        },
                        {
                            "line": 152,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pnum := pkt_init.segment(pnum_pos,hdr_len);\n"
                        },
                        {
                            "line": 153,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pyld_i := pkt_init.segment(hdr_len,pkt.end); \n"
                        },
                        {
                            "line": 154,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 155,
                            "file": "quic_protection.ivy",
                            "instruction": "        var auth := pkt_init.segment(0,hdr_len);\n"
                        },
                        {
                            "line": 156,
                            "file": "quic_protection.ivy",
                            "instruction": "        var new_seq := get_pnum(pnum,0,pnum_len);\n"
                        },
                        {
                            "line": 157,
                            "file": "quic_protection.ivy",
                            "instruction": "        new_seq := correct_pnum(seq,new_seq,pnum_len);\n"
                        },
                        {
                            "line": 158,
                            "file": "quic_protection.ivy",
                            "instruction": "        pyld_i := tls.encrypt_aead(c,level,pyld_i,new_seq,auth);\n"
                        },
                        {
                            "line": 159,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 160,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 161,
                            "file": "quic_protection.ivy",
                            "instruction": "        # start l 3Computing the sample position is a bit tricky. First we\n"
                        },
                        {
                            "line": 162,
                            "file": "quic_protection.ivy",
                            "instruction": "        # assume the length of the pnum is 4, which means the offset\n"
                        },
                        {
                            "line": 163,
                            "file": "quic_protection.ivy",
                            "instruction": "        # of the sample withing the payload is `4 -\n"
                        },
                        {
                            "line": 164,
                            "file": "quic_protection.ivy",
                            "instruction": "        # pnum_len`. However, if there are not enough bytes in the\n"
                        },
                        {
                            "line": 165,
                            "file": "quic_protection.ivy",
                            "instruction": "        # payload, we change it to `payld.end - sample`. Note,\n"
                        },
                        {
                            "line": 166,
                            "file": "quic_protection.ivy",
                            "instruction": "        # however, that we are using natural numbers, so if the\n"
                        },
                        {
                            "line": 167,
                            "file": "quic_protection.ivy",
                            "instruction": "        # position would be negative, it saturates to zero. This is\n"
                        },
                        {
                            "line": 168,
                            "file": "quic_protection.ivy",
                            "instruction": "        # consistent with the statement that you should never sample\n"
                        },
                        {
                            "line": 169,
                            "file": "quic_protection.ivy",
                            "instruction": "        # any bytes from the packet number itself. This leaves the\n"
                        },
                        {
                            "line": 170,
                            "file": "quic_protection.ivy",
                            "instruction": "        # possibility that there are not enough bytes to sample, that\n"
                        },
                        {
                            "line": 171,
                            "file": "quic_protection.ivy",
                            "instruction": "        # is, in the sample, there will be some trailing\n"
                        },
                        {
                            "line": 172,
                            "file": "quic_protection.ivy",
                            "instruction": "        # zeros. Nonetheless, the spec says that the sample size will\n"
                        },
                        {
                            "line": 173,
                            "file": "quic_protection.ivy",
                            "instruction": "        # never be larger than the smallest encrypted payload, so we\n"
                        },
                        {
                            "line": 174,
                            "file": "quic_protection.ivy",
                            "instruction": "        # should be OK.\n"
                        },
                        {
                            "line": 175,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 176,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pn_offset : stream_pos := 0;\n"
                        },
                        {
                            "line": 177,
                            "file": "quic_protection.ivy",
                            "instruction": "        if h.hdr_long {\n"
                        },
                        {
                            "line": 178,
                            "file": "quic_protection.ivy",
                            "instruction": "            pn_offset := hdr_len - pnum_pos;\n"
                        },
                        {
                            "line": 179,
                            "file": "quic_protection.ivy",
                            "instruction": "        } else {\n"
                        },
                        {
                            "line": 180,
                            "file": "quic_protection.ivy",
                            "instruction": "            pn_offset := 1 + 4;\n"
                        },
                        {
                            "line": 181,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 182,
                            "file": "quic_protection.ivy",
                            "instruction": "\t\n"
                        },
                        {
                            "line": 183,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample_pos : stream_pos :=  4 - pnum_len;  #- pnum_len;\n"
                        },
                        {
                            "line": 184,
                            "file": "quic_protection.ivy",
                            "instruction": "        var new_pyld := pyld_i;\n"
                        },
                        {
                            "line": 185,
                            "file": "quic_protection.ivy",
                            "instruction": "        if sample_pos + sample_size > pkt_init.end { #MC\n"
                        },
                        {
                            "line": 186,
                            "file": "quic_protection.ivy",
                            "instruction": "            var diff := (sample_pos + sample_size) - pyld_i.end;\n"
                        },
                        {
                            "line": 187,
                            "file": "quic_protection.ivy",
                            "instruction": "            var i : stream_pos := 0;\n"
                        },
                        {
                            "line": 188,
                            "file": "quic_protection.ivy",
                            "instruction": "            while i < diff {\n"
                        },
                        {
                            "line": 189,
                            "file": "quic_protection.ivy",
                            "instruction": "                new_pyld := new_pyld.append(0x00);\n"
                        },
                        {
                            "line": 190,
                            "file": "quic_protection.ivy",
                            "instruction": "                i := i + 1\n"
                        },
                        {
                            "line": 191,
                            "file": "quic_protection.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 192,
                            "file": "quic_protection.ivy",
                            "instruction": "            #sample_pos := pyld.end - sample_size #MC shift vs padding ? #[*1*]\n"
                        },
                        {
                            "line": 193,
                            "file": "quic_protection.ivy",
                            "instruction": "            #check with mcmillan vs maxime piraux\n"
                        },
                        {
                            "line": 194,
                            "file": "quic_protection.ivy",
                            "instruction": "            pyld_i := new_pyld;  #[*2*]\n"
                        },
                        {
                            "line": 195,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 196,
                            "file": "quic_protection.ivy",
                            "instruction": "\t\n"
                        },
                        {
                            "line": 197,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample := pyld_i.segment(sample_pos,sample_pos+sample_size); \n"
                        },
                        {
                            "line": 198,
                            "file": "quic_protection.ivy",
                            "instruction": "        var mask := stream_data.empty;\n"
                        },
                        {
                            "line": 199,
                            "file": "quic_protection.ivy",
                            "instruction": "        mask := tls.encrypt_cipher(c,level,mask.resize(5,0),sample,false);\n"
                        },
                        {
                            "line": 200,
                            "file": "quic_protection.ivy",
                            "instruction": "        var byte0_mask := bvand(mask.value(0), 0x0f if h.hdr_long else 0x1f);\n"
                        },
                        {
                            "line": 201,
                            "file": "quic_protection.ivy",
                            "instruction": "        hdr := hdr.set(0,byte_xor(pkt_init.value(0),byte0_mask));\n"
                        },
                        {
                            "line": 202,
                            "file": "quic_protection.ivy",
                            "instruction": "        pnum := stream_data_xor(pkt_init.segment(pnum_pos,pnum_pos+pnum_len),mask.segment(1,1+pnum_len));        \n"
                        },
                        {
                            "line": 203,
                            "file": "quic_protection.ivy",
                            "instruction": "        pkt_init := hdr.extend(pnum).extend(pyld_i);\n"
                        },
                        {
                            "line": 204,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 205,
                            "file": "quic_protection.ivy",
                            "instruction": "        # ----------------------------------------------------------\n"
                        },
                        {
                            "line": 206,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 207,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample_size_rtt : stream_pos := tls.iv_size(c,1);\n"
                        },
                        {
                            "line": 208,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pnum_pos_rtt := h_rtt.pkt_num_pos;\n"
                        },
                        {
                            "line": 209,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pnum_len_rtt := get_pnum_len_b(pkt_rtt); \n"
                        },
                        {
                            "line": 210,
                            "file": "quic_protection.ivy",
                            "instruction": "        var hdr_len_rtt := pnum_pos_rtt + pnum_len_rtt;\n"
                        },
                        {
                            "line": 211,
                            "file": "quic_protection.ivy",
                            "instruction": "        \n"
                        },
                        {
                            "line": 212,
                            "file": "quic_protection.ivy",
                            "instruction": "        # Tricky: before encrypting the payload, we need to adjust the length field\n"
                        },
                        {
                            "line": 213,
                            "file": "quic_protection.ivy",
                            "instruction": "        # so that it includes the AEAD checksum. Of course, we don't know what\n"
                        },
                        {
                            "line": 214,
                            "file": "quic_protection.ivy",
                            "instruction": "        # that actually is. Here we assume it is 16 bytes. Even worse, the length of\n"
                        },
                        {
                            "line": 215,
                            "file": "quic_protection.ivy",
                            "instruction": "        # the length field could grow. Here, we assume the length field format is\n"
                        },
                        {
                            "line": 216,
                            "file": "quic_protection.ivy",
                            "instruction": "        # always two bytes. \n"
                        },
                        {
                            "line": 217,
                            "file": "quic_protection.ivy",
                            "instruction": "        if h_rtt.hdr_long {\n"
                        },
                        {
                            "line": 218,
                            "file": "quic_protection.ivy",
                            "instruction": "            var new_len := to_var_int_16(h_rtt.payload_length+16);\n"
                        },
                        {
                            "line": 219,
                            "file": "quic_protection.ivy",
                            "instruction": "            pkt_rtt := pkt_rtt.set(pnum_pos_rtt-2,new_len.value(0));\n"
                        },
                        {
                            "line": 220,
                            "file": "quic_protection.ivy",
                            "instruction": "            pkt_rtt := pkt_rtt.set(pnum_pos_rtt-1,new_len.value(1));\n"
                        },
                        {
                            "line": 221,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 222,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 223,
                            "file": "quic_protection.ivy",
                            "instruction": "        var hdr_rtt  := pkt_rtt.segment(0,pnum_pos_rtt);\n"
                        },
                        {
                            "line": 224,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pnum_rtt := pkt_rtt.segment(pnum_pos_rtt,hdr_len_rtt);\n"
                        },
                        {
                            "line": 225,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pyld_rtt := pkt_rtt.segment(hdr_len_rtt,pkt_rtt.end);\n"
                        },
                        {
                            "line": 226,
                            "file": "quic_protection.ivy",
                            "instruction": "        var auth_rtt := pkt_rtt.segment(0,hdr_len_rtt);\n"
                        },
                        {
                            "line": 227,
                            "file": "quic_protection.ivy",
                            "instruction": "        var new_seq_rtt := get_pnum(pnum_rtt,0,pnum_len_rtt);\n"
                        },
                        {
                            "line": 228,
                            "file": "quic_protection.ivy",
                            "instruction": "        new_seq_rtt := correct_pnum(seq,new_seq_rtt,pnum_len_rtt);\n"
                        },
                        {
                            "line": 229,
                            "file": "quic_protection.ivy",
                            "instruction": "        pyld_rtt := tls.encrypt_aead(c,1,pyld_rtt,new_seq_rtt,auth_rtt);\n"
                        },
                        {
                            "line": 230,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 231,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 232,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 233,
                            "file": "quic_protection.ivy",
                            "instruction": "        # start l 3Computing the sample position is a bit tricky. First we\n"
                        },
                        {
                            "line": 234,
                            "file": "quic_protection.ivy",
                            "instruction": "        # assume the length of the pnum is 4, which means the offset\n"
                        },
                        {
                            "line": 235,
                            "file": "quic_protection.ivy",
                            "instruction": "        # of the sample withing the payload is `4 -\n"
                        },
                        {
                            "line": 236,
                            "file": "quic_protection.ivy",
                            "instruction": "        # pnum_len`. However, if there are not enough bytes in the\n"
                        },
                        {
                            "line": 237,
                            "file": "quic_protection.ivy",
                            "instruction": "        # payload, we change it to `payld.end - sample`. Note,\n"
                        },
                        {
                            "line": 238,
                            "file": "quic_protection.ivy",
                            "instruction": "        # however, that we are using natural numbers, so if the\n"
                        },
                        {
                            "line": 239,
                            "file": "quic_protection.ivy",
                            "instruction": "        # position would be negative, it saturates to zero. This is\n"
                        },
                        {
                            "line": 240,
                            "file": "quic_protection.ivy",
                            "instruction": "        # consistent with the statement that you should never sample\n"
                        },
                        {
                            "line": 241,
                            "file": "quic_protection.ivy",
                            "instruction": "        # any bytes from the packet number itself. This leaves the\n"
                        },
                        {
                            "line": 242,
                            "file": "quic_protection.ivy",
                            "instruction": "        # possibility that there are not enough bytes to sample, that\n"
                        },
                        {
                            "line": 243,
                            "file": "quic_protection.ivy",
                            "instruction": "        # is, in the sample, there will be some trailing\n"
                        },
                        {
                            "line": 244,
                            "file": "quic_protection.ivy",
                            "instruction": "        # zeros. Nonetheless, the spec says that the sample size will\n"
                        },
                        {
                            "line": 245,
                            "file": "quic_protection.ivy",
                            "instruction": "        # never be larger than the smallest encrypted payload, so we\n"
                        },
                        {
                            "line": 246,
                            "file": "quic_protection.ivy",
                            "instruction": "        # should be OK.\n"
                        },
                        {
                            "line": 247,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 248,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pn_offset_rtt : stream_pos := 0;\n"
                        },
                        {
                            "line": 249,
                            "file": "quic_protection.ivy",
                            "instruction": "        if h_rtt.hdr_long {\n"
                        },
                        {
                            "line": 250,
                            "file": "quic_protection.ivy",
                            "instruction": "            pn_offset_rtt := hdr_len_rtt - pnum_pos_rtt;\n"
                        },
                        {
                            "line": 251,
                            "file": "quic_protection.ivy",
                            "instruction": "        } else {\n"
                        },
                        {
                            "line": 252,
                            "file": "quic_protection.ivy",
                            "instruction": "            pn_offset_rtt := 1 + 4;\n"
                        },
                        {
                            "line": 253,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 254,
                            "file": "quic_protection.ivy",
                            "instruction": "\t\n"
                        },
                        {
                            "line": 255,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample_pos_rtt : stream_pos :=  4 - pnum_len_rtt;  #- pnum_len;\n"
                        },
                        {
                            "line": 256,
                            "file": "quic_protection.ivy",
                            "instruction": "        var new_pyld_rtt := pyld_rtt;\n"
                        },
                        {
                            "line": 257,
                            "file": "quic_protection.ivy",
                            "instruction": "        if sample_pos_rtt + sample_size_rtt > pkt_rtt.end  { #MC CHECK\n"
                        },
                        {
                            "line": 258,
                            "file": "quic_protection.ivy",
                            "instruction": "            var diff := (sample_pos_rtt + sample_size_rtt) - pyld_rtt.end;\n"
                        },
                        {
                            "line": 259,
                            "file": "quic_protection.ivy",
                            "instruction": "            var i : stream_pos := 0;\n"
                        },
                        {
                            "line": 260,
                            "file": "quic_protection.ivy",
                            "instruction": "            while i < diff {\n"
                        },
                        {
                            "line": 261,
                            "file": "quic_protection.ivy",
                            "instruction": "                new_pyld_rtt := new_pyld_rtt.append(0x00);\n"
                        },
                        {
                            "line": 262,
                            "file": "quic_protection.ivy",
                            "instruction": "                i := i + 1\n"
                        },
                        {
                            "line": 263,
                            "file": "quic_protection.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 264,
                            "file": "quic_protection.ivy",
                            "instruction": "            #check with mcmillan vs maxime piraux\n"
                        },
                        {
                            "line": 265,
                            "file": "quic_protection.ivy",
                            "instruction": "            pyld_rtt := new_pyld_rtt;  #[*2*]\n"
                        },
                        {
                            "line": 266,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 267,
                            "file": "quic_protection.ivy",
                            "instruction": "\t\n"
                        },
                        {
                            "line": 268,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample_rtt := pyld_rtt.segment(sample_pos_rtt,sample_pos_rtt+sample_size_rtt); \n"
                        },
                        {
                            "line": 269,
                            "file": "quic_protection.ivy",
                            "instruction": "        var mask_rtt := stream_data.empty;\n"
                        },
                        {
                            "line": 270,
                            "file": "quic_protection.ivy",
                            "instruction": "        mask_rtt := tls.encrypt_cipher(c,1,mask_rtt.resize(5,0),sample_rtt,false); # TODO\n"
                        },
                        {
                            "line": 271,
                            "file": "quic_protection.ivy",
                            "instruction": "        var byte0_mask_rtt := bvand(mask_rtt.value(0), 0x0f if h_rtt.hdr_long else 0x1f);\n"
                        },
                        {
                            "line": 272,
                            "file": "quic_protection.ivy",
                            "instruction": "        hdr_rtt := hdr_rtt.set(0,byte_xor(pkt_rtt.value(0),byte0_mask_rtt));\n"
                        },
                        {
                            "line": 273,
                            "file": "quic_protection.ivy",
                            "instruction": "        pnum_rtt := stream_data_xor(pkt_rtt.segment(pnum_pos_rtt,pnum_pos_rtt+pnum_len_rtt),mask_rtt.segment(1,1+pnum_len_rtt));        \n"
                        },
                        {
                            "line": 274,
                            "file": "quic_protection.ivy",
                            "instruction": "        pkt_rtt := hdr_rtt.extend(pnum_rtt).extend(pyld_rtt);\n"
                        },
                        {
                            "line": 275,
                            "file": "quic_protection.ivy",
                            "instruction": "        # ----------------------------------------------------------\n"
                        },
                        {
                            "line": 276,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 277,
                            "file": "quic_protection.ivy",
                            "instruction": "        pkt := pkt_init.extend(pkt_rtt);\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": null,
                    "exported": false,
                    "events": false
                },
                {
                    "line": 128,
                    "action_name": "prot.encrypt_rtt",
                    "implementation": [
                        {
                            "line": 127,
                            "file": "quic_protection.ivy",
                            "instruction": "        var h := get_header_info(pkt,false);\n"
                        },
                        {
                            "line": 128,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pkt_rtt := pkt.segment(h.payload_length,pkt.end);\n"
                        },
                        {
                            "line": 129,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pkt_init := pkt.segment(0,h.payload_length);\n"
                        },
                        {
                            "line": 130,
                            "file": "quic_protection.ivy",
                            "instruction": "        var h_rtt := get_header_info(pkt_rtt,false);\n"
                        },
                        {
                            "line": 131,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 132,
                            "file": "quic_protection.ivy",
                            "instruction": "        # ----------------------------------------------------------------------\n"
                        },
                        {
                            "line": 133,
                            "file": "quic_protection.ivy",
                            "instruction": "       \n"
                        },
                        {
                            "line": 134,
                            "file": "quic_protection.ivy",
                            "instruction": "        var level := get_level(pkt_init);\n"
                        },
                        {
                            "line": 135,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample_size : stream_pos := tls.iv_size(c,level);        \n"
                        },
                        {
                            "line": 136,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pnum_pos := h.pkt_num_pos;\n"
                        },
                        {
                            "line": 137,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pnum_len := get_pnum_len(pkt_init);\n"
                        },
                        {
                            "line": 138,
                            "file": "quic_protection.ivy",
                            "instruction": "        var hdr_len := pnum_pos + pnum_len;\n"
                        },
                        {
                            "line": 139,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 140,
                            "file": "quic_protection.ivy",
                            "instruction": "        # Tricky: before encrypting the payload, we need to adjust the length field\n"
                        },
                        {
                            "line": 141,
                            "file": "quic_protection.ivy",
                            "instruction": "        # so that it includes the AEAD checksum. Of course, we don't know what\n"
                        },
                        {
                            "line": 142,
                            "file": "quic_protection.ivy",
                            "instruction": "        # that actually is. Here we assume it is 16 bytes. Even worse, the length of\n"
                        },
                        {
                            "line": 143,
                            "file": "quic_protection.ivy",
                            "instruction": "        # the length field could grow. Here, we assume the length field format is\n"
                        },
                        {
                            "line": 144,
                            "file": "quic_protection.ivy",
                            "instruction": "        # always two bytes. \n"
                        },
                        {
                            "line": 145,
                            "file": "quic_protection.ivy",
                            "instruction": "        if h.hdr_long {\n"
                        },
                        {
                            "line": 146,
                            "file": "quic_protection.ivy",
                            "instruction": "            var new_len := to_var_int_16(h.payload_length-10); # 16 vs 10 -10 +16\n"
                        },
                        {
                            "line": 147,
                            "file": "quic_protection.ivy",
                            "instruction": "            pkt_init := pkt_init.set(pnum_pos-2,new_len.value(0));\n"
                        },
                        {
                            "line": 148,
                            "file": "quic_protection.ivy",
                            "instruction": "            pkt_init := pkt_init.set(pnum_pos-1,new_len.value(1));\n"
                        },
                        {
                            "line": 149,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 150,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 151,
                            "file": "quic_protection.ivy",
                            "instruction": "        var hdr  := pkt_init.segment(0,pnum_pos);\n"
                        },
                        {
                            "line": 152,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pnum := pkt_init.segment(pnum_pos,hdr_len);\n"
                        },
                        {
                            "line": 153,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pyld_i := pkt_init.segment(hdr_len,pkt.end); \n"
                        },
                        {
                            "line": 154,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 155,
                            "file": "quic_protection.ivy",
                            "instruction": "        var auth := pkt_init.segment(0,hdr_len);\n"
                        },
                        {
                            "line": 156,
                            "file": "quic_protection.ivy",
                            "instruction": "        var new_seq := get_pnum(pnum,0,pnum_len);\n"
                        },
                        {
                            "line": 157,
                            "file": "quic_protection.ivy",
                            "instruction": "        new_seq := correct_pnum(seq,new_seq,pnum_len);\n"
                        },
                        {
                            "line": 158,
                            "file": "quic_protection.ivy",
                            "instruction": "        pyld_i := tls.encrypt_aead(c,level,pyld_i,new_seq,auth);\n"
                        },
                        {
                            "line": 159,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 160,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 161,
                            "file": "quic_protection.ivy",
                            "instruction": "        # start l 3Computing the sample position is a bit tricky. First we\n"
                        },
                        {
                            "line": 162,
                            "file": "quic_protection.ivy",
                            "instruction": "        # assume the length of the pnum is 4, which means the offset\n"
                        },
                        {
                            "line": 163,
                            "file": "quic_protection.ivy",
                            "instruction": "        # of the sample withing the payload is `4 -\n"
                        },
                        {
                            "line": 164,
                            "file": "quic_protection.ivy",
                            "instruction": "        # pnum_len`. However, if there are not enough bytes in the\n"
                        },
                        {
                            "line": 165,
                            "file": "quic_protection.ivy",
                            "instruction": "        # payload, we change it to `payld.end - sample`. Note,\n"
                        },
                        {
                            "line": 166,
                            "file": "quic_protection.ivy",
                            "instruction": "        # however, that we are using natural numbers, so if the\n"
                        },
                        {
                            "line": 167,
                            "file": "quic_protection.ivy",
                            "instruction": "        # position would be negative, it saturates to zero. This is\n"
                        },
                        {
                            "line": 168,
                            "file": "quic_protection.ivy",
                            "instruction": "        # consistent with the statement that you should never sample\n"
                        },
                        {
                            "line": 169,
                            "file": "quic_protection.ivy",
                            "instruction": "        # any bytes from the packet number itself. This leaves the\n"
                        },
                        {
                            "line": 170,
                            "file": "quic_protection.ivy",
                            "instruction": "        # possibility that there are not enough bytes to sample, that\n"
                        },
                        {
                            "line": 171,
                            "file": "quic_protection.ivy",
                            "instruction": "        # is, in the sample, there will be some trailing\n"
                        },
                        {
                            "line": 172,
                            "file": "quic_protection.ivy",
                            "instruction": "        # zeros. Nonetheless, the spec says that the sample size will\n"
                        },
                        {
                            "line": 173,
                            "file": "quic_protection.ivy",
                            "instruction": "        # never be larger than the smallest encrypted payload, so we\n"
                        },
                        {
                            "line": 174,
                            "file": "quic_protection.ivy",
                            "instruction": "        # should be OK.\n"
                        },
                        {
                            "line": 175,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 176,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pn_offset : stream_pos := 0;\n"
                        },
                        {
                            "line": 177,
                            "file": "quic_protection.ivy",
                            "instruction": "        if h.hdr_long {\n"
                        },
                        {
                            "line": 178,
                            "file": "quic_protection.ivy",
                            "instruction": "            pn_offset := hdr_len - pnum_pos;\n"
                        },
                        {
                            "line": 179,
                            "file": "quic_protection.ivy",
                            "instruction": "        } else {\n"
                        },
                        {
                            "line": 180,
                            "file": "quic_protection.ivy",
                            "instruction": "            pn_offset := 1 + 4;\n"
                        },
                        {
                            "line": 181,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 182,
                            "file": "quic_protection.ivy",
                            "instruction": "\t\n"
                        },
                        {
                            "line": 183,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample_pos : stream_pos :=  4 - pnum_len;  #- pnum_len;\n"
                        },
                        {
                            "line": 184,
                            "file": "quic_protection.ivy",
                            "instruction": "        var new_pyld := pyld_i;\n"
                        },
                        {
                            "line": 185,
                            "file": "quic_protection.ivy",
                            "instruction": "        if sample_pos + sample_size > pkt_init.end { #MC\n"
                        },
                        {
                            "line": 186,
                            "file": "quic_protection.ivy",
                            "instruction": "            var diff := (sample_pos + sample_size) - pyld_i.end;\n"
                        },
                        {
                            "line": 187,
                            "file": "quic_protection.ivy",
                            "instruction": "            var i : stream_pos := 0;\n"
                        },
                        {
                            "line": 188,
                            "file": "quic_protection.ivy",
                            "instruction": "            while i < diff {\n"
                        },
                        {
                            "line": 189,
                            "file": "quic_protection.ivy",
                            "instruction": "                new_pyld := new_pyld.append(0x00);\n"
                        },
                        {
                            "line": 190,
                            "file": "quic_protection.ivy",
                            "instruction": "                i := i + 1\n"
                        },
                        {
                            "line": 191,
                            "file": "quic_protection.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 192,
                            "file": "quic_protection.ivy",
                            "instruction": "            #sample_pos := pyld.end - sample_size #MC shift vs padding ? #[*1*]\n"
                        },
                        {
                            "line": 193,
                            "file": "quic_protection.ivy",
                            "instruction": "            #check with mcmillan vs maxime piraux\n"
                        },
                        {
                            "line": 194,
                            "file": "quic_protection.ivy",
                            "instruction": "            pyld_i := new_pyld;  #[*2*]\n"
                        },
                        {
                            "line": 195,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 196,
                            "file": "quic_protection.ivy",
                            "instruction": "\t\n"
                        },
                        {
                            "line": 197,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample := pyld_i.segment(sample_pos,sample_pos+sample_size); \n"
                        },
                        {
                            "line": 198,
                            "file": "quic_protection.ivy",
                            "instruction": "        var mask := stream_data.empty;\n"
                        },
                        {
                            "line": 199,
                            "file": "quic_protection.ivy",
                            "instruction": "        mask := tls.encrypt_cipher(c,level,mask.resize(5,0),sample,false);\n"
                        },
                        {
                            "line": 200,
                            "file": "quic_protection.ivy",
                            "instruction": "        var byte0_mask := bvand(mask.value(0), 0x0f if h.hdr_long else 0x1f);\n"
                        },
                        {
                            "line": 201,
                            "file": "quic_protection.ivy",
                            "instruction": "        hdr := hdr.set(0,byte_xor(pkt_init.value(0),byte0_mask));\n"
                        },
                        {
                            "line": 202,
                            "file": "quic_protection.ivy",
                            "instruction": "        pnum := stream_data_xor(pkt_init.segment(pnum_pos,pnum_pos+pnum_len),mask.segment(1,1+pnum_len));        \n"
                        },
                        {
                            "line": 203,
                            "file": "quic_protection.ivy",
                            "instruction": "        pkt_init := hdr.extend(pnum).extend(pyld_i);\n"
                        },
                        {
                            "line": 204,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 205,
                            "file": "quic_protection.ivy",
                            "instruction": "        # ----------------------------------------------------------\n"
                        },
                        {
                            "line": 206,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 207,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample_size_rtt : stream_pos := tls.iv_size(c,1);\n"
                        },
                        {
                            "line": 208,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pnum_pos_rtt := h_rtt.pkt_num_pos;\n"
                        },
                        {
                            "line": 209,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pnum_len_rtt := get_pnum_len_b(pkt_rtt); \n"
                        },
                        {
                            "line": 210,
                            "file": "quic_protection.ivy",
                            "instruction": "        var hdr_len_rtt := pnum_pos_rtt + pnum_len_rtt;\n"
                        },
                        {
                            "line": 211,
                            "file": "quic_protection.ivy",
                            "instruction": "        \n"
                        },
                        {
                            "line": 212,
                            "file": "quic_protection.ivy",
                            "instruction": "        # Tricky: before encrypting the payload, we need to adjust the length field\n"
                        },
                        {
                            "line": 213,
                            "file": "quic_protection.ivy",
                            "instruction": "        # so that it includes the AEAD checksum. Of course, we don't know what\n"
                        },
                        {
                            "line": 214,
                            "file": "quic_protection.ivy",
                            "instruction": "        # that actually is. Here we assume it is 16 bytes. Even worse, the length of\n"
                        },
                        {
                            "line": 215,
                            "file": "quic_protection.ivy",
                            "instruction": "        # the length field could grow. Here, we assume the length field format is\n"
                        },
                        {
                            "line": 216,
                            "file": "quic_protection.ivy",
                            "instruction": "        # always two bytes. \n"
                        },
                        {
                            "line": 217,
                            "file": "quic_protection.ivy",
                            "instruction": "        if h_rtt.hdr_long {\n"
                        },
                        {
                            "line": 218,
                            "file": "quic_protection.ivy",
                            "instruction": "            var new_len := to_var_int_16(h_rtt.payload_length+16);\n"
                        },
                        {
                            "line": 219,
                            "file": "quic_protection.ivy",
                            "instruction": "            pkt_rtt := pkt_rtt.set(pnum_pos_rtt-2,new_len.value(0));\n"
                        },
                        {
                            "line": 220,
                            "file": "quic_protection.ivy",
                            "instruction": "            pkt_rtt := pkt_rtt.set(pnum_pos_rtt-1,new_len.value(1));\n"
                        },
                        {
                            "line": 221,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 222,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 223,
                            "file": "quic_protection.ivy",
                            "instruction": "        var hdr_rtt  := pkt_rtt.segment(0,pnum_pos_rtt);\n"
                        },
                        {
                            "line": 224,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pnum_rtt := pkt_rtt.segment(pnum_pos_rtt,hdr_len_rtt);\n"
                        },
                        {
                            "line": 225,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pyld_rtt := pkt_rtt.segment(hdr_len_rtt,pkt_rtt.end);\n"
                        },
                        {
                            "line": 226,
                            "file": "quic_protection.ivy",
                            "instruction": "        var auth_rtt := pkt_rtt.segment(0,hdr_len_rtt);\n"
                        },
                        {
                            "line": 227,
                            "file": "quic_protection.ivy",
                            "instruction": "        var new_seq_rtt := get_pnum(pnum_rtt,0,pnum_len_rtt);\n"
                        },
                        {
                            "line": 228,
                            "file": "quic_protection.ivy",
                            "instruction": "        new_seq_rtt := correct_pnum(seq,new_seq_rtt,pnum_len_rtt);\n"
                        },
                        {
                            "line": 229,
                            "file": "quic_protection.ivy",
                            "instruction": "        pyld_rtt := tls.encrypt_aead(c,1,pyld_rtt,new_seq_rtt,auth_rtt);\n"
                        },
                        {
                            "line": 230,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 231,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 232,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 233,
                            "file": "quic_protection.ivy",
                            "instruction": "        # start l 3Computing the sample position is a bit tricky. First we\n"
                        },
                        {
                            "line": 234,
                            "file": "quic_protection.ivy",
                            "instruction": "        # assume the length of the pnum is 4, which means the offset\n"
                        },
                        {
                            "line": 235,
                            "file": "quic_protection.ivy",
                            "instruction": "        # of the sample withing the payload is `4 -\n"
                        },
                        {
                            "line": 236,
                            "file": "quic_protection.ivy",
                            "instruction": "        # pnum_len`. However, if there are not enough bytes in the\n"
                        },
                        {
                            "line": 237,
                            "file": "quic_protection.ivy",
                            "instruction": "        # payload, we change it to `payld.end - sample`. Note,\n"
                        },
                        {
                            "line": 238,
                            "file": "quic_protection.ivy",
                            "instruction": "        # however, that we are using natural numbers, so if the\n"
                        },
                        {
                            "line": 239,
                            "file": "quic_protection.ivy",
                            "instruction": "        # position would be negative, it saturates to zero. This is\n"
                        },
                        {
                            "line": 240,
                            "file": "quic_protection.ivy",
                            "instruction": "        # consistent with the statement that you should never sample\n"
                        },
                        {
                            "line": 241,
                            "file": "quic_protection.ivy",
                            "instruction": "        # any bytes from the packet number itself. This leaves the\n"
                        },
                        {
                            "line": 242,
                            "file": "quic_protection.ivy",
                            "instruction": "        # possibility that there are not enough bytes to sample, that\n"
                        },
                        {
                            "line": 243,
                            "file": "quic_protection.ivy",
                            "instruction": "        # is, in the sample, there will be some trailing\n"
                        },
                        {
                            "line": 244,
                            "file": "quic_protection.ivy",
                            "instruction": "        # zeros. Nonetheless, the spec says that the sample size will\n"
                        },
                        {
                            "line": 245,
                            "file": "quic_protection.ivy",
                            "instruction": "        # never be larger than the smallest encrypted payload, so we\n"
                        },
                        {
                            "line": 246,
                            "file": "quic_protection.ivy",
                            "instruction": "        # should be OK.\n"
                        },
                        {
                            "line": 247,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 248,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pn_offset_rtt : stream_pos := 0;\n"
                        },
                        {
                            "line": 249,
                            "file": "quic_protection.ivy",
                            "instruction": "        if h_rtt.hdr_long {\n"
                        },
                        {
                            "line": 250,
                            "file": "quic_protection.ivy",
                            "instruction": "            pn_offset_rtt := hdr_len_rtt - pnum_pos_rtt;\n"
                        },
                        {
                            "line": 251,
                            "file": "quic_protection.ivy",
                            "instruction": "        } else {\n"
                        },
                        {
                            "line": 252,
                            "file": "quic_protection.ivy",
                            "instruction": "            pn_offset_rtt := 1 + 4;\n"
                        },
                        {
                            "line": 253,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 254,
                            "file": "quic_protection.ivy",
                            "instruction": "\t\n"
                        },
                        {
                            "line": 255,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample_pos_rtt : stream_pos :=  4 - pnum_len_rtt;  #- pnum_len;\n"
                        },
                        {
                            "line": 256,
                            "file": "quic_protection.ivy",
                            "instruction": "        var new_pyld_rtt := pyld_rtt;\n"
                        },
                        {
                            "line": 257,
                            "file": "quic_protection.ivy",
                            "instruction": "        if sample_pos_rtt + sample_size_rtt > pkt_rtt.end  { #MC CHECK\n"
                        },
                        {
                            "line": 258,
                            "file": "quic_protection.ivy",
                            "instruction": "            var diff := (sample_pos_rtt + sample_size_rtt) - pyld_rtt.end;\n"
                        },
                        {
                            "line": 259,
                            "file": "quic_protection.ivy",
                            "instruction": "            var i : stream_pos := 0;\n"
                        },
                        {
                            "line": 260,
                            "file": "quic_protection.ivy",
                            "instruction": "            while i < diff {\n"
                        },
                        {
                            "line": 261,
                            "file": "quic_protection.ivy",
                            "instruction": "                new_pyld_rtt := new_pyld_rtt.append(0x00);\n"
                        },
                        {
                            "line": 262,
                            "file": "quic_protection.ivy",
                            "instruction": "                i := i + 1\n"
                        },
                        {
                            "line": 263,
                            "file": "quic_protection.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 264,
                            "file": "quic_protection.ivy",
                            "instruction": "            #check with mcmillan vs maxime piraux\n"
                        },
                        {
                            "line": 265,
                            "file": "quic_protection.ivy",
                            "instruction": "            pyld_rtt := new_pyld_rtt;  #[*2*]\n"
                        },
                        {
                            "line": 266,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 267,
                            "file": "quic_protection.ivy",
                            "instruction": "\t\n"
                        },
                        {
                            "line": 268,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample_rtt := pyld_rtt.segment(sample_pos_rtt,sample_pos_rtt+sample_size_rtt); \n"
                        },
                        {
                            "line": 269,
                            "file": "quic_protection.ivy",
                            "instruction": "        var mask_rtt := stream_data.empty;\n"
                        },
                        {
                            "line": 270,
                            "file": "quic_protection.ivy",
                            "instruction": "        mask_rtt := tls.encrypt_cipher(c,1,mask_rtt.resize(5,0),sample_rtt,false); # TODO\n"
                        },
                        {
                            "line": 271,
                            "file": "quic_protection.ivy",
                            "instruction": "        var byte0_mask_rtt := bvand(mask_rtt.value(0), 0x0f if h_rtt.hdr_long else 0x1f);\n"
                        },
                        {
                            "line": 272,
                            "file": "quic_protection.ivy",
                            "instruction": "        hdr_rtt := hdr_rtt.set(0,byte_xor(pkt_rtt.value(0),byte0_mask_rtt));\n"
                        },
                        {
                            "line": 273,
                            "file": "quic_protection.ivy",
                            "instruction": "        pnum_rtt := stream_data_xor(pkt_rtt.segment(pnum_pos_rtt,pnum_pos_rtt+pnum_len_rtt),mask_rtt.segment(1,1+pnum_len_rtt));        \n"
                        },
                        {
                            "line": 274,
                            "file": "quic_protection.ivy",
                            "instruction": "        pkt_rtt := hdr_rtt.extend(pnum_rtt).extend(pyld_rtt);\n"
                        },
                        {
                            "line": 275,
                            "file": "quic_protection.ivy",
                            "instruction": "        # ----------------------------------------------------------\n"
                        },
                        {
                            "line": 276,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 277,
                            "file": "quic_protection.ivy",
                            "instruction": "        pkt := pkt_init.extend(pkt_rtt);\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": null,
                    "exported": false,
                    "events": false
                },
                {
                    "line": 411,
                    "action_name": "prot.get_header_info",
                    "implementation": [
                        {
                            "line": 411,
                            "file": "quic_protection.ivy",
                            "instruction": "        h.hdr_long := bvand(0x80,pkt.value(0)) ~= 0;\n"
                        },
                        {
                            "line": 412,
                            "file": "quic_protection.ivy",
                            "instruction": "        h.hdr_type := bfe[0][6](pkt.value(0));\n"
                        },
                        {
                            "line": 413,
                            "file": "quic_protection.ivy",
                            "instruction": "        if h.hdr_long {\n"
                        },
                        {
                            "line": 414,
                            "file": "quic_protection.ivy",
                            "instruction": "            var dcil : stream_pos := bfe[0][7](pkt.value(5));\n"
                        },
                        {
                            "line": 415,
                            "file": "quic_protection.ivy",
                            "instruction": "            h.dcid := bytes_to_cid(pkt.segment(6,6+dcil));\n"
                        },
                        {
                            "line": 416,
                            "file": "quic_protection.ivy",
                            "instruction": "            var scil : stream_pos := bfe[0][7](pkt.value(6+dcil));\n"
                        },
                        {
                            "line": 417,
                            "file": "quic_protection.ivy",
                            "instruction": "            h.scid := bytes_to_cid(pkt.segment(7+dcil,7+dcil+scil));\n"
                        },
                        {
                            "line": 418,
                            "file": "quic_protection.ivy",
                            "instruction": "            if decrypt {\n"
                        },
                        {
                            "line": 419,
                            "file": "quic_protection.ivy",
                            "instruction": "                client_initial_scil := scil;\n"
                        },
                        {
                            "line": 420,
                            "file": "quic_protection.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 421,
                            "file": "quic_protection.ivy",
                            "instruction": "            var pos := 1 + 4 + 1 + dcil + 1 + scil; #7 + dcil + scil;\n"
                        },
                        {
                            "line": 422,
                            "file": "quic_protection.ivy",
                            "instruction": "            var tlen : stream_pos := 0;\n"
                        },
                        {
                            "line": 423,
                            "file": "quic_protection.ivy",
                            "instruction": "            var retry_token_len : stream_pos := 0;\n"
                        },
                        {
                            "line": 424,
                            "file": "quic_protection.ivy",
                            "instruction": "            if bvand(h.hdr_type,0x30) = 0x00 {\n"
                        },
                        {
                            "line": 425,
                            "file": "quic_protection.ivy",
                            "instruction": "                #Initial packet\n"
                        },
                        {
                            "line": 426,
                            "file": "quic_protection.ivy",
                            "instruction": "                tlen := get_var_int_len(pkt,pos);\n"
                        },
                        {
                            "line": 427,
                            "file": "quic_protection.ivy",
                            "instruction": "                retry_token_len := get_var_int(pkt,pos,tlen);\n"
                        },
                        {
                            "line": 428,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.token_length := retry_token_len;\n"
                        },
                        {
                            "line": 429,
                            "file": "quic_protection.ivy",
                            "instruction": "                pos := pos + tlen + retry_token_len;\n"
                        },
                        {
                            "line": 430,
                            "file": "quic_protection.ivy",
                            "instruction": "            } else {\n"
                        },
                        {
                            "line": 431,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.token_length := 0;\n"
                        },
                        {
                            "line": 432,
                            "file": "quic_protection.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 433,
                            "file": "quic_protection.ivy",
                            "instruction": "            var len := get_var_int_len(pkt,pos);\n"
                        },
                        {
                            "line": 434,
                            "file": "quic_protection.ivy",
                            "instruction": "            h.payload_length := get_var_int(pkt,pos,len);\n"
                        },
                        {
                            "line": 435,
                            "file": "quic_protection.ivy",
                            "instruction": "            h.payload_length_pos := pos;\n"
                        },
                        {
                            "line": 436,
                            "file": "quic_protection.ivy",
                            "instruction": "            h.pkt_num_pos := pos + len;\n"
                        },
                        {
                            "line": 437,
                            "file": "quic_protection.ivy",
                            "instruction": "        }\n"
                        },
                        {
                            "line": 438,
                            "file": "quic_protection.ivy",
                            "instruction": "        else {\n"
                        },
                        {
                            "line": 439,
                            "file": "quic_protection.ivy",
                            "instruction": "            #todo check if good for client test too\n"
                        },
                        {
                            "line": 440,
                            "file": "quic_protection.ivy",
                            "instruction": "            if ~decrypt {\n"
                        },
                        {
                            "line": 441,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.dcid := bytes_to_cid(pkt.segment(1,1+client_initial_scil));\n"
                        },
                        {
                            "line": 442,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.payload_length_pos := 1+client_initial_scil;\n"
                        },
                        {
                            "line": 443,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.pkt_num_pos := 1+client_initial_scil;\n"
                        },
                        {
                            "line": 444,
                            "file": "quic_protection.ivy",
                            "instruction": "            } else {\n"
                        },
                        {
                            "line": 445,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.dcid := bytes_to_cid(pkt.segment(1,1+8));\n"
                        },
                        {
                            "line": 446,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.payload_length_pos := 1+8;\n"
                        },
                        {
                            "line": 447,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.pkt_num_pos := 1+8;\n"
                        },
                        {
                            "line": 448,
                            "file": "quic_protection.ivy",
                            "instruction": "            }\n"
                        },
                        {
                            "line": 449,
                            "file": "quic_protection.ivy",
                            "instruction": "        }\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "h",
                        "type": "header_info"
                    },
                    "action_parameters": [
                        {
                            "name": "pkt",
                            "type": "stream_data"
                        },
                        {
                            "name": "decrypt",
                            "type": "bool"
                        }
                    ],
                    "exported": false,
                    "events": false
                },
                {
                    "line": 369,
                    "action_name": "prot.get_level",
                    "implementation": [
                        {
                            "line": 368,
                            "file": "quic_protection.ivy",
                            "instruction": "        if bvand(pkt.value(0),0x80) ~= 0 {\n"
                        },
                        {
                            "line": 369,
                            "file": "quic_protection.ivy",
                            "instruction": "            var hdr_type := bvand(pkt.value(0),0x30); #  : type_bits :=  bfe[0][6](pkt.value(0)); # \n"
                        },
                        {
                            "line": 370,
                            "file": "quic_protection.ivy",
                            "instruction": "            #call show_htype(hdr_type);\n"
                        },
                        {
                            "line": 371,
                            "file": "quic_protection.ivy",
                            "instruction": "            if hdr_type = 0x00 | hdr_type = 0x30 { # | hdr_type = 0x20\n"
                        },
                        {
                            "line": 372,
                            "file": "quic_protection.ivy",
                            "instruction": "                level := 0;\n"
                        },
                        {
                            "line": 373,
                            "file": "quic_protection.ivy",
                            "instruction": "            } \n"
                        },
                        {
                            "line": 374,
                            "file": "quic_protection.ivy",
                            "instruction": "            else if hdr_type = 0x10 {\n"
                        },
                        {
                            "line": 375,
                            "file": "quic_protection.ivy",
                            "instruction": "                # 0RTT\n"
                        },
                        {
                            "line": 376,
                            "file": "quic_protection.ivy",
                            "instruction": "                level := 1;\n"
                        },
                        {
                            "line": 377,
                            "file": "quic_protection.ivy",
                            "instruction": "            } \n"
                        },
                        {
                            "line": 378,
                            "file": "quic_protection.ivy",
                            "instruction": "            else  { # if hdr_type = 0x20, TODO: other packet types\n"
                        },
                        {
                            "line": 379,
                            "file": "quic_protection.ivy",
                            "instruction": "                level := 2;\n"
                        },
                        {
                            "line": 380,
                            "file": "quic_protection.ivy",
                            "instruction": "            }\n"
                        },
                        {
                            "line": 381,
                            "file": "quic_protection.ivy",
                            "instruction": "        } else {\n"
                        },
                        {
                            "line": 382,
                            "file": "quic_protection.ivy",
                            "instruction": "            level := 3;\n"
                        },
                        {
                            "line": 383,
                            "file": "quic_protection.ivy",
                            "instruction": "        }\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "level",
                        "type": "tls.level"
                    },
                    "action_parameters": [
                        {
                            "name": "pkt",
                            "type": "stream_data"
                        }
                    ],
                    "exported": false,
                    "events": false
                },
                {
                    "line": 483,
                    "action_name": "prot.get_pnum",
                    "implementation": [
                        {
                            "line": 482,
                            "file": "quic_protection.ivy",
                            "instruction": "        var data := pkt.segment(pnum_pos,pnum_pos + pnum_len);\n"
                        },
                        {
                            "line": 483,
                            "file": "quic_protection.ivy",
                            "instruction": "        seq := 0;\n"
                        },
                        {
                            "line": 484,
                            "file": "quic_protection.ivy",
                            "instruction": "        var idx:stream_pos := 0;\n"
                        },
                        {
                            "line": 485,
                            "file": "quic_protection.ivy",
                            "instruction": "        while idx < data.end {\n"
                        },
                        {
                            "line": 486,
                            "file": "quic_protection.ivy",
                            "instruction": "            seq := 256 * seq + bfe[0][7](data.value(idx));\n"
                        },
                        {
                            "line": 487,
                            "file": "quic_protection.ivy",
                            "instruction": "            idx := idx.next;\n"
                        },
                        {
                            "line": 488,
                            "file": "quic_protection.ivy",
                            "instruction": "        }\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "seq",
                        "type": "pkt_num"
                    },
                    "action_parameters": [
                        {
                            "name": "pkt",
                            "type": "stream_data"
                        },
                        {
                            "name": "pnum_pos",
                            "type": "stream_pos"
                        },
                        {
                            "name": "pnum_len",
                            "type": "stream_pos"
                        }
                    ],
                    "exported": false,
                    "events": false
                },
                {
                    "line": 476,
                    "action_name": "prot.get_pnum_len",
                    "implementation": [
                        {
                            "line": 475,
                            "file": "quic_protection.ivy",
                            "instruction": "        var len_minus_one : stream_pos := bfe[0][1](pkt.value(0));\n"
                        },
                        {
                            "line": 476,
                            "file": "quic_protection.ivy",
                            "instruction": "        pnum_len := len_minus_one + 1;\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "pnum_len",
                        "type": "stream_pos"
                    },
                    "action_parameters": [
                        {
                            "name": "pkt",
                            "type": "stream_data"
                        }
                    ],
                    "exported": false,
                    "events": false
                },
                {
                    "line": 470,
                    "action_name": "prot.get_pnum_len_b",
                    "implementation": [
                        {
                            "line": 469,
                            "file": "quic_protection.ivy",
                            "instruction": "        <<<\n"
                        },
                        {
                            "line": 470,
                            "file": "quic_protection.ivy",
                            "instruction": "        pnum_len = (pkt[0] & 0x3) + 1;\n"
                        },
                        {
                            "line": 471,
                            "file": "quic_protection.ivy",
                            "instruction": "        >>>\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "pnum_len",
                        "type": "stream_pos"
                    },
                    "action_parameters": [
                        {
                            "name": "pkt",
                            "type": "stream_data"
                        }
                    ],
                    "exported": false,
                    "events": false
                },
                {
                    "line": 511,
                    "action_name": "prot.get_var_int",
                    "implementation": [
                        {
                            "line": 510,
                            "file": "quic_protection.ivy",
                            "instruction": "        var idx:stream_pos := pos;\n"
                        },
                        {
                            "line": 511,
                            "file": "quic_protection.ivy",
                            "instruction": "        val := 0;\n"
                        },
                        {
                            "line": 512,
                            "file": "quic_protection.ivy",
                            "instruction": "        while idx < pos + len {\n"
                        },
                        {
                            "line": 513,
                            "file": "quic_protection.ivy",
                            "instruction": "            var byte := pkt.value(idx);\n"
                        },
                        {
                            "line": 514,
                            "file": "quic_protection.ivy",
                            "instruction": "            if idx = pos {\n"
                        },
                        {
                            "line": 515,
                            "file": "quic_protection.ivy",
                            "instruction": "                byte := bvand(byte,0x3f);\n"
                        },
                        {
                            "line": 516,
                            "file": "quic_protection.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 517,
                            "file": "quic_protection.ivy",
                            "instruction": "            val := 256 * val + bfe[0][7](byte);\n"
                        },
                        {
                            "line": 518,
                            "file": "quic_protection.ivy",
                            "instruction": "            idx := idx.next;\n"
                        },
                        {
                            "line": 519,
                            "file": "quic_protection.ivy",
                            "instruction": "        }\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "val",
                        "type": "stream_pos"
                    },
                    "action_parameters": [
                        {
                            "name": "pkt",
                            "type": "stream_data"
                        },
                        {
                            "name": "pos",
                            "type": "stream_pos"
                        },
                        {
                            "name": "len",
                            "type": "stream_pos"
                        }
                    ],
                    "exported": false,
                    "events": false
                },
                {
                    "line": 495,
                    "action_name": "prot.get_var_int_len",
                    "implementation": [
                        {
                            "line": 494,
                            "file": "quic_protection.ivy",
                            "instruction": "        var code := bvand(0xc0,pkt.value(pos));\n"
                        },
                        {
                            "line": 495,
                            "file": "quic_protection.ivy",
                            "instruction": "        if code = 0 {\n"
                        },
                        {
                            "line": 496,
                            "file": "quic_protection.ivy",
                            "instruction": "            len := 1;\n"
                        },
                        {
                            "line": 497,
                            "file": "quic_protection.ivy",
                            "instruction": "        } else if code = 0x40 {\n"
                        },
                        {
                            "line": 498,
                            "file": "quic_protection.ivy",
                            "instruction": "            len := 2;\n"
                        },
                        {
                            "line": 499,
                            "file": "quic_protection.ivy",
                            "instruction": "        } else if code = 0x80 {\n"
                        },
                        {
                            "line": 500,
                            "file": "quic_protection.ivy",
                            "instruction": "            len := 4;\n"
                        },
                        {
                            "line": 501,
                            "file": "quic_protection.ivy",
                            "instruction": "        } else {\n"
                        },
                        {
                            "line": 502,
                            "file": "quic_protection.ivy",
                            "instruction": "            len := 8;\n"
                        },
                        {
                            "line": 503,
                            "file": "quic_protection.ivy",
                            "instruction": "        }\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "len",
                        "type": "stream_pos"
                    },
                    "action_parameters": [
                        {
                            "name": "pkt",
                            "type": "stream_data"
                        },
                        {
                            "name": "pos",
                            "type": "stream_pos"
                        }
                    ],
                    "exported": false,
                    "events": false
                },
                {
                    "line": 353,
                    "action_name": "prot.retry_integrity_tag",
                    "implementation": [
                        {
                            "line": 351,
                            "file": "quic_protection.ivy",
                            "instruction": "        # TODO useless, call directly  tls.compute_retry_integrity_tag\n"
                        },
                        {
                            "line": 352,
                            "file": "quic_protection.ivy",
                            "instruction": "        var rt := tls.compute_retry_integrity_tag(\n"
                        },
                        {
                            "line": 353,
                            "file": "quic_protection.ivy",
                            "instruction": "                                odcil, cid_to_us(odcid),\n"
                        },
                        {
                            "line": 354,
                            "file": "quic_protection.ivy",
                            "instruction": "                                pversion,\n"
                        },
                        {
                            "line": 355,
                            "file": "quic_protection.ivy",
                            "instruction": "                                dcil, cid_to_us(dcid),\n"
                        },
                        {
                            "line": 356,
                            "file": "quic_protection.ivy",
                            "instruction": "                                scil, cid_to_us(scid),\n"
                        },
                        {
                            "line": 357,
                            "file": "quic_protection.ivy",
                            "instruction": "                                token,seq,h,b);\n"
                        },
                        {
                            "line": 358,
                            "file": "quic_protection.ivy",
                            "instruction": "         cipher := rt;\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": null,
                    "exported": false,
                    "events": false
                },
                {
                    "line": 565,
                    "action_name": "prot.show_header",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "h",
                            "type": "header_info"
                        }
                    ],
                    "exported": false,
                    "events": false
                },
                {
                    "line": 564,
                    "action_name": "prot.show_token_len",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "ver",
                            "type": "stream_pos"
                        }
                    ],
                    "exported": false,
                    "events": false
                },
                {
                    "line": 557,
                    "action_name": "prot.stream_data_xor",
                    "implementation": [
                        {
                            "line": 556,
                            "file": "quic_protection.ivy",
                            "instruction": "        var idx := x.begin;\n"
                        },
                        {
                            "line": 557,
                            "file": "quic_protection.ivy",
                            "instruction": "        while idx < x.end {\n"
                        },
                        {
                            "line": 558,
                            "file": "quic_protection.ivy",
                            "instruction": "            x := x.set(idx,byte_xor(x.value(idx),y.value(idx)));\n"
                        },
                        {
                            "line": 559,
                            "file": "quic_protection.ivy",
                            "instruction": "            idx := idx.next\n"
                        },
                        {
                            "line": 560,
                            "file": "quic_protection.ivy",
                            "instruction": "        }\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "x",
                        "type": "stream_data"
                    },
                    "action_parameters": [
                        {
                            "name": "x",
                            "type": "stream_data"
                        },
                        {
                            "name": "y",
                            "type": "stream_data"
                        }
                    ],
                    "exported": false,
                    "events": false
                },
                {
                    "line": 524,
                    "action_name": "prot.to_var_int_16",
                    "implementation": [
                        {
                            "line": 523,
                            "file": "quic_protection.ivy",
                            "instruction": "        <<<\n"
                        },
                        {
                            "line": 524,
                            "file": "quic_protection.ivy",
                            "instruction": "        bytes.push_back(0x40 | (val >> 8) & 0x3f);\n"
                        },
                        {
                            "line": 525,
                            "file": "quic_protection.ivy",
                            "instruction": "        bytes.push_back(val & 0xff);\n"
                        },
                        {
                            "line": 526,
                            "file": "quic_protection.ivy",
                            "instruction": "        >>>\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "bytes",
                        "type": "stream_data"
                    },
                    "action_parameters": [
                        {
                            "name": "val",
                            "type": "stream_pos"
                        }
                    ],
                    "exported": false,
                    "events": false
                }
            ]
        }
    ],
    "quic_security.ivy": [
        {
            "actions": {
                "line": 355,
                "action_name": "set_encryption_level",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 252,
                "action_name": "show_test",
                "action_return": null,
                "exported": false,
                "action_parameters": null,
                "events": true
            }
        },
        {
            "actions": {
                "line": 351,
                "action_name": "show_tls_keys_established_event",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 158,
                "action_name": "tls_client_0rtt_response",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "ppkt",
                        "type": "stream_data"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 87,
                "action_name": "tls_client_initial_request",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "nonce",
                        "type": "cid"
                    },
                    {
                        "name": "pversion",
                        "type": "version"
                    },
                    {
                        "name": "id",
                        "type": "tls_api.id"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 100,
                "action_name": "tls_client_initial_response",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "ppkt",
                        "type": "stream_data"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 144,
                "action_name": "tls_client_retry_response",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "ppkt",
                        "type": "stream_data"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 131,
                "action_name": "tls_client_version_response",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "ppkt",
                        "type": "stream_data"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 69,
                "action_name": "tls_keys_established_event",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 54,
                "action_name": "tls_recv_event",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "lo",
                        "type": "stream_pos"
                    },
                    {
                        "name": "hi",
                        "type": "stream_pos"
                    }
                ],
                "exported": false,
                "events": false
            }
        },
        {
            "actions": {
                "line": 33,
                "action_name": "tls_send_event",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "data",
                        "type": "stream_data"
                    },
                    {
                        "name": "pos",
                        "type": "stream_pos"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "tls_id",
                        "type": "tls_api.id"
                    }
                ],
                "exported": false,
                "events": false
            }
        }
    ],
    "tls_protocol.ivy": [
        {
            "tls_name": "tls",
            "tls_object": [
                {
                    "name": "handshakes",
                    "type": "vector(handshake)",
                    "instance": true
                },
                {
                    "name": "handshake_parser",
                    "type": "deserializer(stream_pos,stream_data,handshakes,tls_deser)",
                    "instance": true
                }
            ],
            "tls_module": null,
            "actions": [
                {
                    "line": 41,
                    "action_name": "tls.handshake_data_event",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "src",
                            "type": "ip.endpoint"
                        },
                        {
                            "name": "dst",
                            "type": "ip.endpoint"
                        },
                        {
                            "name": "data",
                            "type": "stream_data"
                        }
                    ],
                    "exported": false,
                    "events": false
                },
                {
                    "line": 31,
                    "action_name": "tls.handshake_event",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "src",
                            "type": "ip.endpoint"
                        },
                        {
                            "name": "dst",
                            "type": "ip.endpoint"
                        },
                        {
                            "name": "h",
                            "type": "handshake"
                        }
                    ],
                    "exported": false,
                    "events": false
                }
            ]
        }
    ],
    "tls_msg.ivy": [
        {
            "tls_api_name": "tls_api",
            "tls_api_object": [],
            "tls_api_module": {
                "module_parameters": [],
                "module_attributes": []
            },
            "actions": [
                {
                    "line": 54,
                    "action_name": "tls_api.upper.alert",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "c",
                            "type": "cid"
                        },
                        {
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "exported": false,
                    "events": false
                },
                {
                    "line": 46,
                    "action_name": "tls_api.upper.recv",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "c",
                            "type": "cid"
                        },
                        {
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "exported": false,
                    "events": false
                }
            ]
        }
    ]
}