version: "3.7"
services:
  ivy-standalone:
    hostname: ivy-picotls-standalone
    container_name: ivy-picotls-standalone
    image: "ivy-picotls-standalone:latest"
    command: bash -c "python3 run_experiments.py --getstats --update_include_tls --webapp --compile  --docker"
    ports:
      - "49150:80"
    volumes:
      - ${PWD}/tls-keys:/tmp/QUIC-FormalVerification/tls-keys
      - ${PWD}/tickets:/tmp/QUIC-FormalVerification/tickets
      - ${PWD}/qlogs:/tmp/QUIC-FormalVerification/qlogs
      - ${PWD}/QUIC-Ivy/doc/examples/quic:/tmp/QUIC-FormalVerification/QUIC-Ivy/doc/examples/quic
      - ${PWD}/QUIC-Ivy/ivy/ivy_to_cpp.py:/tmp/QUIC-FormalVerification/QUIC-Ivy/ivy/ivy_to_cpp.py
      - ${PWD}/QUIC-Ivy/ivy/include/1.7:/tmp/QUIC-FormalVerification/QUIC-Ivy/ivy/include/1.7
    networks:
      - net
    privileged: true
    environment:
      - ROOT_PATH=${PWD} # TODO remove eventually

  # https://unix.stackexchange.com/questions/644176/how-to-permanently-add-self-signed-certificate-in-firefox
  ivy-visualizer:
    hostname: ivy-visualizer
    container_name: ivy-visualizer
    image: "ivy-visualizer:latest"
    command: ./startup_vizualizer.sh # NODE_OPTIONS=--openssl-legacy-provider
    ports:
      - "49149:80"
    #volumes:
    #  - ${PWD}/QUIC-Ivy/doc/examples/quic/test/temp:/usr/src/vizualizer/public/temp
    networks:
      - net
    privileged: true
  
  #################################################
  # Implementations workers
  #################################################

  picoquic-ivy:
    hostname: picoquic-ivy
    container_name: picoquic-ivy
    image: "picoquic-ivy:latest"
    command: python3 run_experiments.py --update_include_tls --getstats --worker --compile  --docker
    ports:
      - "49154:80"
    volumes:
      - ${PWD}/tls-keys:/tmp/QUIC-FormalVerification/tls-keys
      - ${PWD}/tickets:/tmp/QUIC-FormalVerification/tickets
      - ${PWD}/qlogs:/tmp/QUIC-FormalVerification/qlogs
      - ${PWD}/QUIC-Ivy/doc/examples/quic:/tmp/QUIC-FormalVerification/QUIC-Ivy/doc/examples/quic
      - ${PWD}/QUIC-Ivy/ivy/ivy_to_cpp.py:/tmp/QUIC-FormalVerification/QUIC-Ivy/ivy/ivy_to_cpp.py
      - ${PWD}/QUIC-Ivy/ivy/include/1.7:/tmp/QUIC-FormalVerification/QUIC-Ivy/ivy/include/1.7
    networks:
      - net
    privileged: true

  quant-ivy:
    hostname: quant-ivy
    container_name: quant-ivy
    image: "quant-ivy:latest"
    command: python3 run_experiments.py --update_include_tls --getstats --worker --compile  --docker
    ports:
      - "49155:80"
    volumes:
      - ${PWD}/tls-keys:/tmp/QUIC-FormalVerification/tls-keys
      - ${PWD}/tickets:/tmp/QUIC-FormalVerification/tickets
      - ${PWD}/qlogs:/tmp/QUIC-FormalVerification/qlogs
      - ${PWD}/QUIC-Ivy/doc/examples/quic:/tmp/QUIC-FormalVerification/QUIC-Ivy/doc/examples/quic
      - ${PWD}/QUIC-Ivy/ivy/ivy_to_cpp.py:/tmp/QUIC-FormalVerification/QUIC-Ivy/ivy/ivy_to_cpp.py
      - ${PWD}/QUIC-Ivy/ivy/include/1.7:/tmp/QUIC-FormalVerification/QUIC-Ivy/ivy/include/1.7
    networks:
      - net
    privileged: true

  #################################################
  # PlantUML -> useless still only png or svg -> not dynamic
  #################################################

  # plantuml-server:
  #   image: jgraph/plantuml-server
  #   expose:
  #     - "8080"
  #   networks:
  #     - net
  #   volumes:
  #     - ./plantUML/fonts:/usr/share/fonts/drawio
  
  # image-export:
  #   image: jgraph/export-server
  #   expose:
  #     - "8000"
  #   networks:
  #     - net
  #   volumes:
  #     - ./plantUML/fonts:/usr/share/fonts/drawio

  # drawio:
  #   image: jgraph/drawio
  #   ports:
  #     - "8443:8443"
  #     - "8080:8080"
  #   depends_on:
  #     - plantuml-server
  #     - image-export
  #   networks:
  #     - net
  #   volumes:
  #     - ./plantUML/PostConfig.js:/usr/local/tomcat/webapps/draw/js/PostConfig.js
  #     - ./plantUML/PreConfig.js:/usr/local/tomcat/webapps/draw/js/PreConfig.js
  #   environment:
  #     - PLANTUML_URL=http://plantuml-server:8080/
  #     - EXPORT_URL=http://image-export:8000/

networks:
  net:
    driver: bridge
