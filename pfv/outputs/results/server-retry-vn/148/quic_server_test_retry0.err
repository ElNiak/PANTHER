       Fresh unicode-xid v0.2.2
       Fresh cfg-if v1.0.0
       Fresh once_cell v1.9.0
       Fresh cc v1.0.72
       Fresh autocfg v1.0.1
       Fresh untrusted v0.7.1
       Fresh pin-project-lite v0.2.7
       Fresh spin v0.5.2
warning: use of deprecated function `core::sync::atomic::spin_loop_hint`: use hint::spin_loop instead
 --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs:1:48
  |
1 | use core::sync::atomic::{AtomicBool, Ordering, spin_loop_hint as cpu_relax};
  |                                                ^^^^^^^^^^^^^^
  |
  = note: `#[warn(deprecated)]` on by default

warning: use of deprecated function `core::sync::atomic::spin_loop_hint`: use hint::spin_loop instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs:136:17
    |
136 |                 cpu_relax();
    |                 ^^^^^^^^^

warning: use of deprecated function `core::sync::atomic::spin_loop_hint`: use hint::spin_loop instead
 --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:8:26
  |
8 | use core::sync::atomic::{spin_loop_hint as cpu_relax, AtomicUsize, Ordering};
  |                          ^^^^^^^^^^^^^^

warning: use of deprecated function `core::sync::atomic::spin_loop_hint`: use hint::spin_loop instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:170:25
    |
170 |                 None => cpu_relax(),
    |                         ^^^^^^^^^

warning: use of deprecated function `core::sync::atomic::spin_loop_hint`: use hint::spin_loop instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:284:25
    |
284 |                 None => cpu_relax(),
    |                         ^^^^^^^^^

warning: use of deprecated function `core::sync::atomic::spin_loop_hint`: use hint::spin_loop instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:320:25
    |
320 |                 None => cpu_relax(),
    |                         ^^^^^^^^^

warning: use of deprecated function `core::sync::atomic::spin_loop_hint`: use hint::spin_loop instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:404:13
    |
404 |             cpu_relax();
    |             ^^^^^^^^^

warning: use of deprecated function `core::sync::atomic::spin_loop_hint`: use hint::spin_loop instead
 --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs:2:49
  |
2 | use core::sync::atomic::{AtomicUsize, Ordering, spin_loop_hint as cpu_relax};
  |                                                 ^^^^^^^^^^^^^^

warning: use of deprecated function `core::sync::atomic::spin_loop_hint`: use hint::spin_loop instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs:125:21
    |
125 |                     cpu_relax();
    |                     ^^^^^^^^^

warning: use of deprecated function `core::sync::atomic::spin_loop_hint`: use hint::spin_loop instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs:149:31
    |
149 |                 RUNNING    => cpu_relax(), // We spin
    |                               ^^^^^^^^^

warning: use of deprecated associated function `core::sync::atomic::AtomicBool::compare_and_swap`: Use `compare_exchange` or `compare_exchange_weak` instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs:131:25
    |
131 |         while self.lock.compare_and_swap(false, true, Ordering::Acquire) != false
    |                         ^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `core::sync::atomic::AtomicBool::compare_and_swap`: Use `compare_exchange` or `compare_exchange_weak` instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs:181:22
    |
181 |         if self.lock.compare_and_swap(false, true, Ordering::Acquire) == false
    |                      ^^^^^^^^^^^^^^^^

warning: use of deprecated associated function `core::sync::atomic::AtomicUsize::compare_and_swap`: Use `compare_exchange` or `compare_exchange_weak` instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs:104:33
    |
104 |             status = self.state.compare_and_swap(INCOMPLETE,
    |                                 ^^^^^^^^^^^^^^^^

warning: `spin` (lib) generated 13 warnings
       Fresh lazy_static v1.4.0
       Fresh version_check v0.9.3
       Fresh regex-syntax v0.6.25
warning: field is never read: `printer`
  --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.25/src/ast/print.rs:66:5
   |
66 |     printer: &'p mut Printer,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field is never read: `printer`
  --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.25/src/hir/print.rs:74:5
   |
74 |     printer: &'p mut Printer,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

       Fresh base64 v0.13.0
warning: `regex-syntax` (lib) generated 2 warnings
       Fresh tinyvec_macros v0.1.0
       Fresh futures-sink v0.3.19
       Fresh slab v0.4.5
       Fresh ppv-lite86 v0.2.15
       Fresh pin-utils v0.1.0
       Fresh futures-io v0.3.19
       Fresh ansi_term v0.12.1
warning: trait objects without an explicit `dyn` are deprecated
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs:279:21
    |
279 |         let f: &mut fmt::Write = f;
    |                     ^^^^^^^^^^ help: use `dyn`: `dyn fmt::Write`
    |
    = note: `#[warn(bare_trait_objects)]` on by default
    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>

warning: trait objects without an explicit `dyn` are deprecated
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs:291:29
    |
291 |                 let f: &mut fmt::Write = f;
    |                             ^^^^^^^^^^ help: use `dyn`: `dyn fmt::Write`
    |
    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>

warning: trait objects without an explicit `dyn` are deprecated
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs:295:29
    |
295 |                 let f: &mut fmt::Write = f;
    |                             ^^^^^^^^^^ help: use `dyn`: `dyn fmt::Write`
    |
    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>

warning: trait objects without an explicit `dyn` are deprecated
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/ansi.rs:308:21
    |
308 |         let f: &mut fmt::Write = f;
    |                     ^^^^^^^^^^ help: use `dyn`: `dyn fmt::Write`
    |
    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>

warning: trait objects without an explicit `dyn` are deprecated
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs:201:21
    |
201 |         let w: &mut fmt::Write = f;
    |                     ^^^^^^^^^^ help: use `dyn`: `dyn fmt::Write`
    |
    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>

warning: trait objects without an explicit `dyn` are deprecated
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs:210:21
    |
210 |         let w: &mut io::Write = w;
    |                     ^^^^^^^^^ help: use `dyn`: `dyn io::Write`
    |
    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>

warning: trait objects without an explicit `dyn` are deprecated
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs:229:21
    |
229 |         let f: &mut fmt::Write = f;
    |                     ^^^^^^^^^^ help: use `dyn`: `dyn fmt::Write`
    |
    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>

warning: trait objects without an explicit `dyn` are deprecated
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/display.rs:239:21
    |
239 |         let w: &mut io::Write = w;
    |                     ^^^^^^^^^ help: use `dyn`: `dyn io::Write`
    |
    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>

warning: associated type `wstr` should have an upper camel case name
 --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/write.rs:6:10
  |
6 |     type wstr: ?Sized;
  |          ^^^^ help: convert the identifier to upper camel case (notice the capitalization): `Wstr`
  |
  = note: `#[warn(non_camel_case_types)]` on by default

warning: trait objects without an explicit `dyn` are deprecated
  --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/write.rs:15:23
   |
15 | impl<'a> AnyWrite for fmt::Write + 'a {
   |                       ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn fmt::Write + 'a`
   |
   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>

warning: trait objects without an explicit `dyn` are deprecated
  --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/ansi_term-0.12.1/src/write.rs:29:23
   |
29 | impl<'a> AnyWrite for io::Write + 'a {
   |                       ^^^^^^^^^^^^^^ help: use `dyn`: `dyn io::Write + 'a`
   |
   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>

       Fresh unicode-width v0.1.9
       Fresh build_const v0.2.2
       Fresh bytes v1.1.0
warning: `ansi_term` (lib) generated 11 warnings
       Fresh matches v0.1.9
       Fresh openssl-probe v0.1.4
       Fresh unicode-segmentation v1.8.0
       Fresh vec_map v0.8.2
warning: unnecessary parentheses around type
    --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs:1010:34
     |
1010 |     fn next(&mut self) -> Option<(&'a V)> { self.iter.next().map(|e| e.1) }
     |                                  ^     ^
     |
     = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
     |
1010 -     fn next(&mut self) -> Option<(&'a V)> { self.iter.next().map(|e| e.1) }
1010 +     fn next(&mut self) -> Option<&'a V> { self.iter.next().map(|e| e.1) }
     | 

warning: unnecessary parentheses around type
    --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs:1017:39
     |
1017 |     fn next_back(&mut self) -> Option<(&'a V)> { self.iter.next_back().map(|e| e.1) }
     |                                       ^     ^
     |
help: remove these parentheses
     |
1017 -     fn next_back(&mut self) -> Option<(&'a V)> { self.iter.next_back().map(|e| e.1) }
1017 +     fn next_back(&mut self) -> Option<&'a V> { self.iter.next_back().map(|e| e.1) }
     | 

warning: unnecessary parentheses around type
    --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs:1023:34
     |
1023 |     fn next(&mut self) -> Option<(&'a mut V)> { self.iter_mut.next().map(|e| e.1) }
     |                                  ^         ^
     |
help: remove these parentheses
     |
1023 -     fn next(&mut self) -> Option<(&'a mut V)> { self.iter_mut.next().map(|e| e.1) }
1023 +     fn next(&mut self) -> Option<&'a mut V> { self.iter_mut.next().map(|e| e.1) }
     | 

warning: `vec_map` (lib) generated 3 warnings
       Fresh percent-encoding v2.1.0
       Fresh bitflags v1.3.2
       Fresh strsim v0.8.0
       Fresh unicode-bidi v0.3.7
       Fresh unwrap v1.2.1
       Fresh bencher v0.1.5
warning: trait objects without an explicit `dyn` are deprecated
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:123:20
    |
123 |     DynBenchFn(Box<TDynBenchFn + 'static>),
    |                    ^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn TDynBenchFn + 'static`
    |
    = note: `#[warn(bare_trait_objects)]` on by default
    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:220:36
    |
220 |             Some(ref path) => Some(try!(File::create(path))),
    |                                    ^^^
    |
    = note: `#[warn(deprecated)]` on by default

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:254:13
    |
254 |             try!(self.write_pretty(verbose));
    |             ^^^

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:262:17
    |
262 |                 try!(stdout.write_all(word.as_bytes()));
    |                 ^^^

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:271:17
    |
271 |                 try!(stdout.write_all(s.as_bytes()));
    |                 ^^^

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:300:17
    |
300 |                 try!(self.write_bench());
    |                 ^^^

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:322:9
    |
322 |         try!(self.write_plain("\nfailures:\n"));
    |         ^^^

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:339:9
    |
339 |         try!(self.write_plain("\nfailures:\n"));
    |         ^^^

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:335:13
    |
335 |             try!(self.write_plain("\n"));
    |             ^^^

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:336:13
    |
336 |             try!(self.write_plain(&fail_out));
    |             ^^^

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:342:13
    |
342 |             try!(self.write_plain(&format!("    {}\n", name)));
    |             ^^^

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:355:9
    |
355 |         try!(self.write_plain("\ntest result: "));
    |         ^^^

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:367:9
    |
367 |         try!(self.write_plain(&s));
    |         ^^^

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:352:13
    |
352 |             try!(self.write_failures());
    |             ^^^

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:358:13
    |
358 |             try!(self.write_pretty("ok"));
    |             ^^^

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:360:13
    |
360 |             try!(self.write_pretty("FAILED"));
    |             ^^^

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:444:5
    |
444 |     try!(run_tests(opts, tests, |x| callback(&x, &mut st)));
    |     ^^^

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:421:17
    |
421 |                 try!(st.write_log(&test, &result));
    |                 ^^^

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:422:17
    |
422 |                 try!(st.write_result(&result));
    |                 ^^^

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:434:18
    |
434 |     let mut st = try!(ConsoleTestState::new(opts));
    |                  ^^^

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:503:5
    |
503 |     try!(callback(TeFiltered(filtered_descs)));
    |     ^^^

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:510:9
    |
510 |         try!(callback(TeWait(b.desc.clone(), b.testfn.padding())));
    |         ^^^

warning: use of deprecated macro `try`: use the `?` operator instead
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/bencher-0.1.5/lib.rs:512:9
    |
512 |         try!(callback(TeResult(test, result, stdout)));
    |         ^^^

warning: `bencher` (lib) generated 23 warnings
       Fresh thread_local v1.1.3
       Fresh tracing-core v0.1.21
       Fresh sharded-slab v0.1.4
       Fresh regex v1.5.4
warning: field is never read: `dfa`
  --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.5.4/src/exec.rs:81:5
   |
81 |     dfa: Program,
   |     ^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field is never read: `dfa_reverse`
  --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.5.4/src/exec.rs:85:5
   |
85 |     dfa_reverse: Program,
   |     ^^^^^^^^^^^^^^^^^^^^

warning: field is never read: `suffixes`
  --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.5.4/src/exec.rs:90:5
   |
90 |     suffixes: LiteralSearcher,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

       Fresh regex-automata v0.1.10
warning: `regex` (lib) generated 3 warnings
       Fresh tinyvec v1.5.1
       Fresh textwrap v0.11.0
       Fresh heck v0.3.3
       Fresh form_urlencoded v1.0.1
       Fresh libc v0.2.112
       Fresh proc-macro2 v1.0.34
       Fresh log v0.4.14
warning: use of deprecated function `core::sync::atomic::spin_loop_hint`: use hint::spin_loop instead
    --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.14/src/lib.rs:1365:36
     |
1365 |                 std::sync::atomic::spin_loop_hint();
     |                                    ^^^^^^^^^^^^^^
     |
     = note: `#[warn(deprecated)]` on by default

warning: `log` (lib) generated 1 warning
       Fresh memchr v2.4.1
       Fresh futures-core v0.3.19
       Fresh matchers v0.0.1
       Fresh pem v1.0.1
       Fresh futures-task v0.3.19
       Fresh unicode-normalization v0.1.19
       Fresh anyhow v1.0.51
       Fresh quote v1.0.10
       Fresh ring v0.16.20
warning: field is never read: `cpu_features`
  --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/ring-0.16.20/src/digest.rs:49:5
   |
49 |     cpu_features: cpu::Features,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

       Fresh getrandom v0.2.3
       Fresh atty v0.2.14
warning: `ring` (lib) generated 1 warning
       Fresh num_cpus v1.13.1
       Fresh signal-hook-registry v1.4.0
       Fresh mio v0.7.14
       Fresh dirs-sys-next v0.1.2
       Fresh socket2 v0.3.19
       Fresh num-traits v0.2.14
       Fresh futures-channel v0.3.19
       Fresh idna v0.2.3
       Fresh crc v1.8.1
       Fresh syn v1.0.83
       Fresh sct v0.6.1
       Fresh webpki v0.21.4
       Fresh rand_core v0.6.3
       Fresh proc-macro-error-attr v1.0.4
       Fresh clap v2.34.0
       Fresh directories-next v2.0.0
       Fresh num-integer v0.1.44
       Fresh url v2.2.2
       Fresh tracing-attributes v0.1.18
       Fresh futures-macro v0.3.19
       Fresh thiserror-impl v1.0.30
       Fresh rustls v0.19.1
warning: trait objects without an explicit `dyn` are deprecated
  --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-0.19.1/src/record_layer.rs:32:32
   |
32 |             message_encrypter: MessageEncrypter::invalid(),
   |                                ^^^^^^^^^^^^^^^^ help: use `dyn`: `<dyn MessageEncrypter>`
   |
   = note: `#[warn(bare_trait_objects)]` on by default
   = warning: this is accepted in the current edition (Rust 2018) but is a hard error in Rust 2021!
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>

warning: trait objects without an explicit `dyn` are deprecated
  --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-0.19.1/src/record_layer.rs:33:32
   |
33 |             message_decrypter: MessageDecrypter::invalid(),
   |                                ^^^^^^^^^^^^^^^^ help: use `dyn`: `<dyn MessageDecrypter>`
   |
   = warning: this is accepted in the current edition (Rust 2018) but is a hard error in Rust 2021!
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>

       Fresh ct-logs v0.8.0
       Fresh tokio-macros v1.7.0
warning: `rustls` (lib) generated 2 warnings
       Fresh pin-project-internal v1.0.8
       Fresh rand_chacha v0.3.1
       Fresh proc-macro-error v1.0.4
warning: panic message is not a string literal
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/proc-macro-error-1.0.4/src/lib.rs:472:12
    |
472 |     panic!(AbortNow)
    |     ------ ^^^^^^^^
    |     |
    |     help: use std::panic::panic_any instead: `std::panic::panic_any`
    |
    = note: `#[warn(non_fmt_panics)]` on by default
    = note: this usage of panic!() is deprecated; it will be a hard error in Rust 2021
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>

       Fresh tracing v0.1.29
warning: `proc-macro-error` (lib) generated 1 warning
       Fresh chrono v0.4.19
warning: field is never read: `locale`
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs:729:5
    |
729 |     locale: Option<Locale>,
    |     ^^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs:417:9
    |
417 | #![deny(dead_code)]
    |         ^^^^^^^^^

       Fresh futures-util v0.3.19
       Fresh thiserror v1.0.30
       Fresh rustls-native-certs v0.5.0
warning: unnecessary trailing semicolon
  --> /root/.cargo/registry/src/github.com-1ecc6299db9ec823/rustls-native-certs-0.5.0/src/rustls.rs:27:6
   |
27 |     };
   |      ^ help: remove this semicolon
   |
   = note: `#[warn(redundant_semicolons)]` on by default

warning: `chrono` (lib) generated 1 warning
warning: `rustls-native-certs` (lib) generated 1 warning
       Fresh tokio v1.15.0
       Fresh rand v0.8.4
       Fresh pin-project v1.0.8
       Fresh structopt-derive v0.4.18
       Fresh futures-executor v0.3.19
       Fresh yasna v0.4.0
       Fresh tracing-subscriber v0.2.25
       Fresh quinn-proto v0.7.0 (/quic/quinn/quinn-proto)
warning: field is never read: `first`
   --> quinn-proto/src/packet.rs:473:9
    |
473 |         first: u8,
    |         ^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: `quinn-proto` (lib) generated 1 warning
       Fresh tracing-futures v0.2.5
       Fresh structopt v0.3.25
       Fresh futures v0.3.19
       Fresh rcgen v0.8.14
       Fresh quinn v0.7.0 (/quic/quinn/quinn)
    Finished dev [unoptimized + debuginfo] target(s) in 0.11s
     Running `target/debug/examples/server /QUIC-Ivy/doc/examples/quic/index.html --keylog --stateless-retry --listen '127.0.0.1:4443'`
listening on 127.0.0.1:4443
