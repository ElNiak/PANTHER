#lang ivy1.7

include order
include quic_infer
include file
include ivy_quic_shim_server
include quic_locale
include ivy_quic_server_behavior

#
# We fix the initial transport parameters here. TODO: In principle these
# parameters should be selected randomly by some event.
#

include ivy_quic_server_standard_tp

# Generate connection_close frames only for the client.

before quic_frame.connection_close.handle(f:quic_frame.connection_close,scid:cid,dcid:cid) {
    if _generating {
        require client.ep.addr ~= 0;         
        require scid = the_cid;
    } else {
        require is_frame_encoding_error
    }
}

# Generate connection_close frames only for the client.

before quic_frame.application_close.handle(f:quic_frame.application_close,scid:cid,dcid:cid) {
    if _generating {
        require client.ep.addr ~= 0;
        require scid = the_cid;
    }
}


before quic_frame.new_token.handle(f:quic_frame.new_token,scid:cid,dcid:cid) {
    if _generating {
        require client.ep.addr ~= 0;
        require scid = the_cid;
        require f.length = 0;
    }
}
# The actions listed below will be generated by the mirror.
#
# Note: some of these are commented out. They are added in other files
# that include this one.

export quic_frame.ack.handle
export quic_frame.stream.handle
export quic_frame.crypto.handle
export quic_frame.path_response.handle
export quic_frame.handshake_done.handle
export packet_event
export client_send_event
export tls_recv_event
#export quic_frame.new_connection_id.handle
#export quic_frame.retire_connection_id.handle
#export quic_frame.rst_stream.handle
#export quic_frame.max_stream_id.handle
#export quic_frame.connection_close.handle
#export quic_frame.max_stream_data.handle

export quic_frame.new_token.handle


# Final check
#
# When the test is complete, the tester calls the special action `_finalize`.
# We use this action to make some heuristic checks, for example that some
# data was actually received from the server. We can add advice to this
# action with additional checks.

export action _finalize = {
    # chris TODO 
    require is_frame_encoding_error;
}


