#lang ivy1.7

#    The protocol supports the caching of responses in order to
#    efficiently fulfill requests.  Simple caching is enabled using
#    freshness and validity information carried with CoAP responses.  A
#    cache could be located in an endpoint or an intermediary.  Caching
#    functionality is specified in Section 5.6.

#    Proxying is useful in constrained networks for several reasons,
#    including to limit network traffic, to improve performance, to access
#    resources of sleeping devices, and for security reasons.  The
#    proxying of requests on behalf of another CoAP endpoint is supported
#    in the protocol.  When using a proxy, the URI of the resource to
#    request is included in the request, while the destination IP address
#    is set to the address of the proxy.  See Section 5.7 for more
#    information on proxy functionality.

#    As CoAP was designed according to the REST architecture [REST], and
#    thus exhibits functionality similar to that of the HTTP protocol, it
#    is quite straightforward to map from CoAP to HTTP and from HTTP to
#    CoAP.  Such a mapping may be used to realize an HTTP REST interface
#    using CoAP or to convert between HTTP and CoAP.  This conversion can
#    be carried out by a cross-protocol proxy ("cross-proxy"), which
#    converts the Method or Response Code, media type, and options to the
#    corresponding HTTP feature.  Section 10 provides more detail about
#    HTTP mapping.