#lang ivy1.7

include order
include ping_file

after init {
    sock := net.open(endpoint_id.server,server.ep);
    server.set_tls_id(0);
    client.set_tls_id(1);
}

action endpoint_to_pid(src:ip.endpoint) returns (pid:endpoint_id) = {
    pid := endpoint_id.server;
}

action socket_endpoint(host:endpoint_id,s:net.socket) returns (src:ip.endpoint) = {
    src := server.ep;
}

action endpoint_to_socket(src:ip.endpoint) returns (socket:net.socket) = {
    socket := sock;
}

action tls_id_to_src(tls_id:tls_api.id) returns (src:ip.endpoint) = {
    src := server.ep if tls_id = client.tls_id else client.ep;
}

action tls_id_to_dst(tls_id:tls_api.id) returns (dst:ip.endpoint) = {
    dst := client.ep if tls_id = client.tls_id else server.ep;
}

action dst_is_generated(dst:ip.endpoint) returns (res:bool) = {
    res := dst = server.ep;
}

action dst_tls_id(dst:ip.endpoint) returns (tls_id:tls_api.id) = {
    tls_id := server.tls_id
}

action src_tls_id(src:ip.endpoint) returns (tls_id:tls_api.id) = {
    tls_id := server.tls_id;
}

# --------------------------------------------------------------------------

var http_response : stream_data
instance http_response_file : binary_input_file(stream_data,cid)

after init {
    http_response := http_response_file.read;
}


before ping_packet_event(src:ip.endpoint,dst:ip.endpoint,pkt:ping_packet) {
    if _generating { 
        require client.ep.addr ~= 0;  # must have a client address to send to
        require src = server.ep;
        require dst = client.ep;
    }
}

action client_send_event(src:ip.endpoint, dst:ip.endpoint, end : stream_pos)
    
around client_send_event {
    require src = server.ep;
    require dst = client.ep;
    require ping_length = ping_packet_end;
    require ping_length < end & end <= http_response.end;
    ...
    while end < http_response.end & http_response.value(end) ~= 10 {
        end := end.next
    };
    if end < http_response.end {
        end := end.next
    };
    var data := http_response.segment(ping_length,end);
    call app_send_event(src,dst,data,ping_length,true);
}

attribute radix=16       # print in hex
