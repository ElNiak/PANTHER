{
    "quic_server_test.ivy": [
        {
            "actions": {
                "line": 66,
                "action_name": "_finalize",
                "implementation": [
                    {
                        "line": 66,
                        "file": "quic_server_test.ivy",
                        "instruction": "    # chris TODO \n"
                    },
                    {
                        "line": 67,
                        "file": "quic_server_test.ivy",
                        "instruction": "    require is_no_error;\n"
                    },
                    {
                        "line": 68,
                        "file": "quic_server_test.ivy",
                        "instruction": "    require conn_total_data(the_cid) > 0;\n"
                    },
                    {
                        "line": 69,
                        "file": "quic_server_test.ivy",
                        "instruction": "    #call \n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": null,
                "exported": true,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [
                        {
                            "caller_func": "Environment",
                            "component": "Environment"
                        }
                    ],
                    "assertions": [
                        {
                            "line": 68,
                            "file": "quic_server_test.ivy",
                            "assertion": "require is_no_error;\n"
                        },
                        {
                            "line": 69,
                            "file": "quic_server_test.ivy",
                            "assertion": "require conn_total_data(the_cid) > 0;\n"
                        },
                        {
                            "line": 939,
                            "file": "quic_frame.ivy",
                            "assertion": "require tls_handshake_finished;\n"
                        },
                        {
                            "line": 940,
                            "file": "quic_frame.ivy",
                            "assertion": "require (connected(dcid) & connected_to(dcid) = scid); # | (e = quic_packet_type.zero_rtt & established_0rtt_keys(scid)); #e = quic_packet_type.zero_rtt & \n"
                        },
                        {
                            "line": 941,
                            "file": "quic_frame.ivy",
                            "assertion": "require (e = quic_packet_type.one_rtt & established_1rtt_keys(scid)); # | (e = quic_packet_type.zero_rtt & established_0rtt_keys(scid)); # | e = quic_packet_type.zero_rtt  | e = quic_packet_type.zero_rtt & established_0rtt_keys(scid)  \n"
                        },
                        {
                            "line": 944,
                            "file": "quic_frame.ivy",
                            "assertion": "require (e = quic_packet_type.one_rtt & established_1rtt_keys(scid)) | (e = quic_packet_type.zero_rtt & ~established_1rtt_keys(scid));\n"
                        },
                        {
                            "line": 954,
                            "file": "quic_frame.ivy",
                            "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                        },
                        {
                            "line": 962,
                            "file": "quic_frame.ivy",
                            "assertion": "require ~conn_closed(scid);  # [8]\n"
                        },
                        {
                            "line": 966,
                            "file": "quic_frame.ivy",
                            "assertion": "require ((offset) + (f.length)) <= stream_app_data_end(dcid,f.id);\n"
                        },
                        {
                            "line": 969,
                            "file": "quic_frame.ivy",
                            "assertion": "require f.data = stream_app_data(dcid,f.id).segment(offset,offset+f.length); # TODO\n"
                        },
                        {
                            "line": 970,
                            "file": "quic_frame.ivy",
                            "assertion": "require f.fin <-> (stream_app_data_finished(dcid,f.id) & offset+f.length = stream_app_data_end(dcid,f.id));\n"
                        },
                        {
                            "line": 979,
                            "file": "quic_frame.ivy",
                            "assertion": "require conn_seen(scid);  # [9]\n"
                        },
                        {
                            "line": 991,
                            "file": "quic_frame.ivy",
                            "assertion": "require stream_reset(dcid,f.id) ->\n"
                        },
                        {
                            "line": 996,
                            "file": "quic_frame.ivy",
                            "assertion": "require stream_id_allowed(dcid,f.id,e);  # [6]\n"
                        },
                        {
                            "line": 999,
                            "file": "quic_frame.ivy",
                            "assertion": "require  f.id = 4; #  f.id = 8 |f.id = 4 |\n"
                        },
                        {
                            "line": 245,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require scid = the_cid;\n"
                        },
                        {
                            "line": 247,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require connected(the_cid) & dcid = connected_to(the_cid);\n"
                        },
                        {
                            "line": 249,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require f.len & f.off; \n"
                        },
                        {
                            "line": 250,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require f.length > 0;\n"
                        },
                        {
                            "line": 251,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require f.offset = stream_length(dcid,f.id);\n"
                        },
                        {
                            "line": 252,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require f.length = (stream_app_data_end(dcid,f.id)) - f.offset;\n"
                        }
                    ]
                }
            }
        },
        {
            "functions": [],
            "relations": []
        }
    ],
    "quic_loss_recovery.ivy": [
        {
            "actions": {
                "line": 258,
                "action_name": "abs",
                "implementation": [
                    {
                        "line": 257,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 258,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    z = abs(x);\n"
                    },
                    {
                        "line": 259,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "z",
                    "type": "microseconds"
                },
                "action_parameters": [
                    {
                        "name": "x",
                        "type": "microseconds"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 523,
                "action_name": "detect_and_remove_acked_packets",
                "implementation": [
                    {
                        "line": 522,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    var sent_packets_size := sent_packets_end(pn_space);\n"
                    },
                    {
                        "line": 523,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    sent_packets_end(pn_space) := 0;\n"
                    },
                    {
                        "line": 524,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    newly_acked_packets_end(pn_space) := 0;\n"
                    },
                    {
                        "line": 525,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    var idx : stream_pos := 0;\n"
                    },
                    {
                        "line": 526,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    if sent_packets_size > 0 {\n"
                    },
                    {
                        "line": 527,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        while idx < sent_packets_size {\n"
                    },
                    {
                        "line": 528,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            var current_pkt := sent_packets(pn_space,idx);\n"
                    },
                    {
                        "line": 529,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            if current_pkt.seq_num <= largest_acked {\n"
                    },
                    {
                        "line": 530,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                # acked\n"
                    },
                    {
                        "line": 531,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                newly_acked_packets(pn_space,newly_acked_packets_end(pn_space)) := current_pkt;\n"
                    },
                    {
                        "line": 532,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                newly_acked_packets_end(pn_space) := newly_acked_packets_end(pn_space) + 1;\n"
                    },
                    {
                        "line": 533,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            }\n"
                    },
                    {
                        "line": 534,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            else {\n"
                    },
                    {
                        "line": 535,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                # not acked\n"
                    },
                    {
                        "line": 536,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                sent_packets(pn_space,sent_packets_end(pn_space)) := current_pkt;\n"
                    },
                    {
                        "line": 537,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                sent_packets_end(pn_space) := sent_packets_end(pn_space) + 1;\n"
                    },
                    {
                        "line": 538,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            }\n"
                    },
                    {
                        "line": 539,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            idx := idx + 1;\n"
                    },
                    {
                        "line": 540,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 541,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 542,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    call show_detect_and_remove_acked_packets(largest_acked, sent_packets_size, newly_acked_packets_end(pn_space), sent_packets_end(pn_space));\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "largest_acked",
                        "type": "pkt_num"
                    },
                    {
                        "name": "pn_space",
                        "type": "quic_packet_type"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 427,
                "action_name": "detect_and_remove_lost_packets",
                "implementation": [
                    {
                        "line": 427,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    loss_time(pn_space) := 0;\n"
                    },
                    {
                        "line": 428,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    var max := smoothed_rtt(dcid);\n"
                    },
                    {
                        "line": 429,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    if max < latest_rtt(dcid) {\n"
                    },
                    {
                        "line": 430,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        max := latest_rtt(dcid);\n"
                    },
                    {
                        "line": 431,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 432,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 433,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    var loss_delay := kTimeThreshold * max;\n"
                    },
                    {
                        "line": 434,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    if loss_delay < kGranularity {\n"
                    },
                    {
                        "line": 435,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        loss_delay := kGranularity;\n"
                    },
                    {
                        "line": 436,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 437,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 438,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    var tp := trans_params(dcid);\n"
                    },
                    {
                        "line": 439,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 440,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    var lost_sent_time := time_api.c_timer.now_micros - loss_delay;\n"
                    },
                    {
                        "line": 441,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    var sent_packets_size := sent_packets_end(pn_space);\n"
                    },
                    {
                        "line": 442,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    sent_packets_end(pn_space) := 0;\n"
                    },
                    {
                        "line": 443,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    lost_packets_end(pn_space) := 0;\n"
                    },
                    {
                        "line": 444,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    var idx : stream_pos := 0;\n"
                    },
                    {
                        "line": 445,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    call show_detect_and_remove_lost_packets(lost_sent_time, loss_delay, sent_packets_size);\n"
                    },
                    {
                        "line": 446,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    while idx < sent_packets_size {\n"
                    },
                    {
                        "line": 447,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        var current_pkt := sent_packets(pn_space,idx);\n"
                    },
                    {
                        "line": 448,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        # TODO\n"
                    },
                    {
                        "line": 449,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        if current_pkt.seq_num <= largest_acked_packet(pn_space) {\n"
                    },
                    {
                        "line": 450,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            if min_ack_delay.is_set(tp) {\n"
                    },
                    {
                        "line": 451,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                if sent_packets_time_sent(pn_space, current_pkt.seq_num) <= lost_sent_time |\n"
                    },
                    {
                        "line": 452,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                    largest_acked_packet(pn_space) >= current_pkt.seq_num + streampos_to_seqnum(ack_out_of_order_val(dcid)) {\n"
                    },
                    {
                        "line": 453,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                    lost_packets(pn_space,lost_packets_end(pn_space)) := current_pkt;\n"
                    },
                    {
                        "line": 454,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                    lost_packets_end(pn_space) := lost_packets_end(pn_space) + 1;\n"
                    },
                    {
                        "line": 455,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                } \n"
                    },
                    {
                        "line": 456,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                else {\n"
                    },
                    {
                        "line": 457,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                    sent_packets(pn_space,sent_packets_end(pn_space)) := current_pkt;\n"
                    },
                    {
                        "line": 458,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                    sent_packets_end(pn_space) := sent_packets_end(pn_space) + 1;\n"
                    },
                    {
                        "line": 459,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                    if loss_time(pn_space) = 0 {\n"
                    },
                    {
                        "line": 460,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                        loss_time(pn_space) := sent_packets_time_sent(pn_space, current_pkt.seq_num) + loss_delay;\n"
                    },
                    {
                        "line": 461,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                    } \n"
                    },
                    {
                        "line": 462,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                    else {\n"
                    },
                    {
                        "line": 463,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                        var min := loss_time(pn_space);\n"
                    },
                    {
                        "line": 464,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                        if min > sent_packets_time_sent(pn_space, current_pkt.seq_num) + loss_delay {\n"
                    },
                    {
                        "line": 465,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                            loss_time(pn_space) := sent_packets_time_sent(pn_space, current_pkt.seq_num) + loss_delay;\n"
                    },
                    {
                        "line": 466,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                        }\n"
                    },
                    {
                        "line": 467,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                    }\n"
                    },
                    {
                        "line": 468,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                };\n"
                    },
                    {
                        "line": 469,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            }\n"
                    },
                    {
                        "line": 470,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            else {\n"
                    },
                    {
                        "line": 471,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                if sent_packets_time_sent(pn_space, current_pkt.seq_num) <= lost_sent_time |\n"
                    },
                    {
                        "line": 472,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                    largest_acked_packet(pn_space) >= current_pkt.seq_num + streampos_to_seqnum(kPacketThreshold) {\n"
                    },
                    {
                        "line": 473,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                    lost_packets(pn_space,lost_packets_end(pn_space)) := current_pkt;\n"
                    },
                    {
                        "line": 474,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                    lost_packets_end(pn_space) := lost_packets_end(pn_space) + 1;\n"
                    },
                    {
                        "line": 475,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                } else {\n"
                    },
                    {
                        "line": 476,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                    sent_packets(pn_space,sent_packets_end(pn_space)) := current_pkt;\n"
                    },
                    {
                        "line": 477,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                    sent_packets_end(pn_space) := sent_packets_end(pn_space) + 1;\n"
                    },
                    {
                        "line": 478,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                    if loss_time(pn_space) = 0 {\n"
                    },
                    {
                        "line": 479,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                        loss_time(pn_space) := sent_packets_time_sent(pn_space, current_pkt.seq_num) + loss_delay;\n"
                    },
                    {
                        "line": 480,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                    } \n"
                    },
                    {
                        "line": 481,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                    else {\n"
                    },
                    {
                        "line": 482,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                        var min := loss_time(pn_space);\n"
                    },
                    {
                        "line": 483,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                        if min > sent_packets_time_sent(pn_space, current_pkt.seq_num) + loss_delay {\n"
                    },
                    {
                        "line": 484,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                            loss_time(pn_space) := sent_packets_time_sent(pn_space, current_pkt.seq_num) + loss_delay;\n"
                    },
                    {
                        "line": 485,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                        }\n"
                    },
                    {
                        "line": 486,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                    }\n"
                    },
                    {
                        "line": 487,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                };\n"
                    },
                    {
                        "line": 488,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            }\n"
                    },
                    {
                        "line": 489,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 490,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        idx := idx + 1;\n"
                    },
                    {
                        "line": 491,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 492,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    # lost_packets := lost_packets_temp;\n"
                    },
                    {
                        "line": 493,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    call show_loss_time_update(loss_time(pn_space), pn_space);\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "pn_space",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "streampos_to_seqnum",
                        "component": "quic_loss_recovery.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 321,
                "action_name": "get_loss_time_space",
                "implementation": [
                    {
                        "line": 320,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    var inter_time := loss_time(quic_packet_type.initial);\n"
                    },
                    {
                        "line": 321,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    var inter_space := quic_packet_type.initial;\n"
                    },
                    {
                        "line": 322,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 323,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    if inter_time = 0 | loss_time(quic_packet_type.handshake) < inter_time {\n"
                    },
                    {
                        "line": 324,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        inter_time := loss_time(quic_packet_type.handshake);\n"
                    },
                    {
                        "line": 325,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        inter_space := quic_packet_type.handshake;\n"
                    },
                    {
                        "line": 326,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 327,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 328,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    if inter_time = 0 | loss_time(quic_packet_type.one_rtt) < inter_time {\n"
                    },
                    {
                        "line": 329,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        inter_time := loss_time(quic_packet_type.one_rtt);\n"
                    },
                    {
                        "line": 330,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        inter_space := quic_packet_type.one_rtt;\n"
                    },
                    {
                        "line": 331,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 332,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    \n"
                    },
                    {
                        "line": 333,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    time := inter_time;\n"
                    },
                    {
                        "line": 334,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    space := inter_space;\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "time",
                    "type": "microseconds, space"
                },
                "action_parameters": null,
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 272,
                "action_name": "get_pto_time_and_space",
                "implementation": [
                    {
                        "line": 271,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    var max := 4 * rttvar(dcid);\n"
                    },
                    {
                        "line": 272,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    if max < kGranularity {\n"
                    },
                    {
                        "line": 273,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        max := kGranularity;\n"
                    },
                    {
                        "line": 274,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 275,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    var duration := (smoothed_rtt(dcid) + max) * pow(pto_count,2);\n"
                    },
                    {
                        "line": 276,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 277,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    # Anti-deadlock PTO starts from the current time\n"
                    },
                    {
                        "line": 278,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    if ~ack_eliciting_packet_in_flight {\n"
                    },
                    {
                        "line": 279,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        if ~peer_completed_address_validation(dst, dcid) {\n"
                    },
                    {
                        "line": 280,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            pto_timeout_res := duration + time_api.c_timer.now_micros;\n"
                    },
                    {
                        "line": 281,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            if established_handshake_keys(dcid) {\n"
                    },
                    {
                        "line": 282,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                pto_space := quic_packet_type.handshake;\n"
                    },
                    {
                        "line": 283,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            } \n"
                    },
                    {
                        "line": 284,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            else {\n"
                    },
                    {
                        "line": 285,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                pto_space := quic_packet_type.initial;\n"
                    },
                    {
                        "line": 286,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            }\n"
                    },
                    {
                        "line": 287,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "         };\n"
                    },
                    {
                        "line": 288,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    } else {\n"
                    },
                    {
                        "line": 289,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        # TODO should loop on all packet number spaces, but strange\n"
                    },
                    {
                        "line": 290,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        var temp_pto_timeout_res : microseconds := 0xFFFFFF; # infinity\n"
                    },
                    {
                        "line": 291,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        \n"
                    },
                    {
                        "line": 292,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        var temp_pto_space := quic_packet_type.initial;\n"
                    },
                    {
                        "line": 293,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        var t := time_of_last_ack_eliciting_packet(temp_pto_space) + duration;\n"
                    },
                    {
                        "line": 294,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        if t < temp_pto_timeout_res {\n"
                    },
                    {
                        "line": 295,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            pto_timeout_res := t;\n"
                    },
                    {
                        "line": 296,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            pto_space := temp_pto_space;\n"
                    },
                    {
                        "line": 297,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 298,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 299,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        temp_pto_space := quic_packet_type.handshake;\n"
                    },
                    {
                        "line": 300,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        t := time_of_last_ack_eliciting_packet(temp_pto_space) + duration;\n"
                    },
                    {
                        "line": 301,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        if t < temp_pto_timeout_res {\n"
                    },
                    {
                        "line": 302,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            pto_timeout_res := t;\n"
                    },
                    {
                        "line": 303,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            pto_space := temp_pto_space;\n"
                    },
                    {
                        "line": 304,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 305,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        \n"
                    },
                    {
                        "line": 306,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        temp_pto_space := quic_packet_type.one_rtt;\n"
                    },
                    {
                        "line": 307,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        if peer_completed_address_validation(dst, dcid) {\n"
                    },
                    {
                        "line": 308,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            duration := duration + max_ack_delay_tp * pow(pto_count,2);\n"
                    },
                    {
                        "line": 309,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            t := time_of_last_ack_eliciting_packet(temp_pto_space) + duration;\n"
                    },
                    {
                        "line": 310,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            if t < temp_pto_timeout_res {\n"
                    },
                    {
                        "line": 311,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                pto_timeout_res := t;\n"
                    },
                    {
                        "line": 312,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                pto_space := temp_pto_space;\n"
                    },
                    {
                        "line": 313,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            };\n"
                    },
                    {
                        "line": 314,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 315,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 316,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    call show_get_pto_time_and_space(pto_timeout_res, pto_space);\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "pto_timeout_res",
                    "type": "microseconds, pto_space"
                },
                "action_parameters": [
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 625,
                "action_name": "includes_ack_eliciting",
                "implementation": [
                    {
                        "line": 624,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    var idx : stream_pos := 0;\n"
                    },
                    {
                        "line": 625,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    var res_inter := false;\n"
                    },
                    {
                        "line": 626,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    while idx < newly_acked_packets_end(pn_space) {\n"
                    },
                    {
                        "line": 627,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        if sent_packets_ack_eliciting(newly_acked_packets(pn_space, idx).ptype, newly_acked_packets(pn_space, idx).seq_num) {\n"
                    },
                    {
                        "line": 628,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            res_inter := true;\n"
                    },
                    {
                        "line": 629,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 630,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        idx := idx + 1;\n"
                    },
                    {
                        "line": 631,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 632,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    res := res_inter;\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "res",
                    "type": "bool"
                },
                "action_parameters": [
                    {
                        "name": "pn_space",
                        "type": "quic_packet_type"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 548,
                "action_name": "on_ack_received",
                "implementation": [
                    {
                        "line": 548,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    call show_on_ack_received(largest_acked, ack_delay, pn_space);\n"
                    },
                    {
                        "line": 549,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    ack_delay := ack_delay * pow(2, ack_delay_exponent_tp);\n"
                    },
                    {
                        "line": 550,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    call show_on_ack_received(largest_acked, ack_delay, pn_space);\n"
                    },
                    {
                        "line": 551,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    if largest_acked_packet(pn_space) = 0xFFFFFF { # infinity\n"
                    },
                    {
                        "line": 552,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        largest_acked_packet(pn_space) := largest_acked;\n"
                    },
                    {
                        "line": 553,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    } else {\n"
                    },
                    {
                        "line": 554,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        if largest_acked > largest_acked_packet(pn_space) {\n"
                    },
                    {
                        "line": 555,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            largest_acked_packet(pn_space) := largest_acked;\n"
                    },
                    {
                        "line": 556,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 557,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 558,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    # call show_largest_acked_packet(largest_acked, pn_space);\n"
                    },
                    {
                        "line": 559,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    # DetectAndRemoveAckedPackets finds packets that are newly\n"
                    },
                    {
                        "line": 560,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    # acknowledged and removes them from sent_packets.\n"
                    },
                    {
                        "line": 561,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 562,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    detect_and_remove_acked_packets(largest_acked, pn_space);\n"
                    },
                    {
                        "line": 563,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 564,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    if newly_acked_packets_end(pn_space) > 0 {\n"
                    },
                    {
                        "line": 565,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        # Update the RTT if the largest acknowledged is newly acked\n"
                    },
                    {
                        "line": 566,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        # and at least one ack-eliciting was newly acked.\n"
                    },
                    {
                        "line": 567,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        var idx : stream_pos:= 0;\n"
                    },
                    {
                        "line": 568,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        var largest_acked_pkt := newly_acked_packets(pn_space, idx);\n"
                    },
                    {
                        "line": 569,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        idx := idx + 1;\n"
                    },
                    {
                        "line": 570,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        while idx < newly_acked_packets_end(pn_space) {\n"
                    },
                    {
                        "line": 571,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            if newly_acked_packets(pn_space, idx).seq_num > largest_acked_pkt.seq_num {\n"
                    },
                    {
                        "line": 572,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                largest_acked_pkt := newly_acked_packets(pn_space, idx);\n"
                    },
                    {
                        "line": 573,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            }\n"
                    },
                    {
                        "line": 574,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            idx := idx + 1;\n"
                    },
                    {
                        "line": 575,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 576,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        call show_largest_acked_packet(largest_acked_pkt.seq_num, largest_acked, pn_space);\n"
                    },
                    {
                        "line": 577,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        call show_include_ack_eliciting(includes_ack_eliciting(pn_space), pn_space);\n"
                    },
                    {
                        "line": 578,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        if largest_acked_pkt.seq_num = largest_acked & includes_ack_eliciting(pn_space) {\n"
                    },
                    {
                        "line": 579,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            latest_rtt(largest_acked_pkt.dst_cid) := time_api.c_timer.now_micros - sent_packets_time_sent(largest_acked_pkt.ptype,largest_acked_pkt.seq_num);\n"
                    },
                    {
                        "line": 580,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            call show_latest_rtt(latest_rtt(largest_acked_pkt.dst_cid),largest_acked_pkt.dst_cid);\n"
                    },
                    {
                        "line": 581,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            call update_rtt(ack_delay, largest_acked_pkt.dst_cid);\n"
                    },
                    {
                        "line": 582,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 583,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        \n"
                    },
                    {
                        "line": 584,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        # Process ECN information if present.\n"
                    },
                    {
                        "line": 585,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        # TODO\n"
                    },
                    {
                        "line": 586,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        # if ack.ecn {\n"
                    },
                    {
                        "line": 587,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        #     # TODO\n"
                    },
                    {
                        "line": 588,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        #     call process_ecn(ack,pn_space);\n"
                    },
                    {
                        "line": 589,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        # }\n"
                    },
                    {
                        "line": 590,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 591,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        detect_and_remove_lost_packets(pn_space,largest_acked_pkt.dst_cid);\n"
                    },
                    {
                        "line": 592,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        call show_detect_and_remove_lost_packets_size(pn_space,lost_packets_end(pn_space));\n"
                    },
                    {
                        "line": 593,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        if lost_packets_end(pn_space) > 0 {\n"
                    },
                    {
                        "line": 594,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            call on_packets_lost(pn_space);\n"
                    },
                    {
                        "line": 595,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 596,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 597,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        call on_packets_acked(pn_space);\n"
                    },
                    {
                        "line": 598,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 599,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        # Reset pto_count unless the client is unsure if\n"
                    },
                    {
                        "line": 600,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        # the server has validated the client's address.\n"
                    },
                    {
                        "line": 601,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 602,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        if peer_completed_address_validation(dst, largest_acked_pkt.dst_cid) {\n"
                    },
                    {
                        "line": 603,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            pto_count := 0;\n"
                    },
                    {
                        "line": 604,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 605,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        call set_loss_detection_timer(dst, largest_acked_pkt.dst_cid);\n"
                    },
                    {
                        "line": 606,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    }\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "largest_acked",
                        "type": "pkt_num"
                    },
                    {
                        "name": "ack_delay",
                        "type": "microseconds"
                    },
                    {
                        "name": "pn_space",
                        "type": "quic_packet_type"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "on_packets_acked",
                        "component": "quic_loss_recovery.ivy"
                    },
                    {
                        "caller_func": "on_packets_lost",
                        "component": "quic_loss_recovery.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 506,
                "action_name": "on_datagram_received",
                "implementation": [
                    {
                        "line": 503,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    # If this datagram unblocks the server, arm the\n"
                    },
                    {
                        "line": 504,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    # PTO timer to avoid deadlock.\n"
                    },
                    {
                        "line": 505,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    if anti_amplification_limit_reached { # TODO\n"
                    },
                    {
                        "line": 506,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        call set_loss_detection_timer(dst, dcid);\n"
                    },
                    {
                        "line": 507,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        if loss_detection_timer < time_api.c_timer.now_micros {\n"
                    },
                    {
                        "line": 508,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            loss_detection_timer := pto_timeout;\n"
                    },
                    {
                        "line": 509,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            # Execute PTO if it would have expired\n"
                    },
                    {
                        "line": 510,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            # while the amplification limit applied.\n"
                    },
                    {
                        "line": 511,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            call show_loss_detection_timeout;\n"
                    },
                    {
                        "line": 512,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            call on_loss_detection_timeout(dst, dcid);\n"
                    },
                    {
                        "line": 513,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 514,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    };\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "datagram",
                        "type": "stream_data"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "on_datagram_received",
                        "component": "quic_endpoint.ivy"
                    },
                    {
                        "caller_func": "on_datagram_received",
                        "component": "quic_endpoint.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 379,
                "action_name": "on_loss_detection_timeout",
                "implementation": [
                    {
                        "line": 378,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    var earliest_loss_time : microseconds;\n"
                    },
                    {
                        "line": 379,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    var pn_space : quic_packet_type;\n"
                    },
                    {
                        "line": 380,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    (earliest_loss_time, pn_space) := get_loss_time_space;\n"
                    },
                    {
                        "line": 381,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    call show_get_loss_time_space(earliest_loss_time, pn_space);\n"
                    },
                    {
                        "line": 382,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    if earliest_loss_time ~= 0 {\n"
                    },
                    {
                        "line": 383,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        # var lost_packets := \n"
                    },
                    {
                        "line": 384,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        detect_and_remove_lost_packets(pn_space,dcid);\n"
                    },
                    {
                        "line": 385,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        # assert(!lost_packets.empty())\n"
                    },
                    {
                        "line": 386,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        call on_packets_lost(pn_space);\n"
                    },
                    {
                        "line": 387,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        call set_loss_detection_timer(dst, dcid);\n"
                    },
                    {
                        "line": 388,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    } else {\n"
                    },
                    {
                        "line": 389,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        if ~ack_eliciting_packet_in_flight & ~peer_completed_address_validation(dst, dcid) {\n"
                    },
                    {
                        "line": 390,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            # Client sends an anti-deadlock packet: Initial is padded\n"
                    },
                    {
                        "line": 391,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            # to earn more anti-amplification credit,\n"
                    },
                    {
                        "line": 392,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            # a Handshake packet proves address ownership.\n"
                    },
                    {
                        "line": 393,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            if established_handshake_keys(dcid) {\n"
                    },
                    {
                        "line": 394,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                # TODO SendOneAckElicitingHandshakePacket()\n"
                    },
                    {
                        "line": 395,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                need_sent_ack_eliciting_handshake_packet := true;\n"
                    },
                    {
                        "line": 396,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            } else {\n"
                    },
                    {
                        "line": 397,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                # TODO SendOneAckElicitingPaddedInitialPacket()\n"
                    },
                    {
                        "line": 398,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                need_sent_ack_eliciting_initial_packet := true;\n"
                    },
                    {
                        "line": 399,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            }\n"
                    },
                    {
                        "line": 400,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        } else {\n"
                    },
                    {
                        "line": 401,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            # PTO. Send new data if available, else retransmit old data.\n"
                    },
                    {
                        "line": 402,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            # If neither is available, send a single PING frame.\n"
                    },
                    {
                        "line": 403,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            var pto_timeout_t : microseconds;\n"
                    },
                    {
                        "line": 404,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            var pto_space : quic_packet_type;\n"
                    },
                    {
                        "line": 405,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            (pto_timeout_t, pto_space) := get_pto_time_and_space(dst,dcid);\n"
                    },
                    {
                        "line": 406,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            loss_detection_timer := pto_timeout_t;\n"
                    },
                    {
                        "line": 407,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            pto_timeout := pto_timeout_t;\n"
                    },
                    {
                        "line": 408,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            # TODO SendOneOrTwoAckElicitingPackets(pn_space)\n"
                    },
                    {
                        "line": 409,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            if pn_space = quic_packet_type.initial {\n"
                    },
                    {
                        "line": 410,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                need_sent_ack_eliciting_initial_packet := true;\n"
                    },
                    {
                        "line": 411,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            } else if pn_space = quic_packet_type.handshake {\n"
                    },
                    {
                        "line": 412,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                need_sent_ack_eliciting_handshake_packet := true;\n"
                    },
                    {
                        "line": 413,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            } else {\n"
                    },
                    {
                        "line": 414,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                need_sent_ack_eliciting_application_packet := true;\n"
                    },
                    {
                        "line": 415,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            };\n"
                    },
                    {
                        "line": 416,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 417,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        pto_count := pto_count + 1;\n"
                    },
                    {
                        "line": 418,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        call set_loss_detection_timer(dst, dcid);\n"
                    },
                    {
                        "line": 419,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    };\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "on_packets_lost",
                        "component": "quic_loss_recovery.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 727,
                "action_name": "on_packet_received",
                "implementation": [
                    {
                        "line": 727,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "     # After a packet is recv, information about the packet is stored\n"
                    },
                    {
                        "line": 728,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    received_packets_end(pkt.ptype) := received_packets_end(pkt.ptype) + 1;\n"
                    },
                    {
                        "line": 729,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    received_packets(pkt.ptype,received_packets_end(pkt.ptype)) := pkt;\n"
                    },
                    {
                        "line": 730,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    received_packets_packet_number(pkt.ptype,pkt.seq_num) := pkt.seq_num;\n"
                    },
                    {
                        "line": 731,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    received_packets_time_sent(pkt.ptype,pkt.seq_num) := time_api.c_timer.now_micros;\n"
                    },
                    {
                        "line": 732,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    received_packets_ack_eliciting(pkt.ptype,pkt.seq_num) := queued_ack_eliciting_pkt(seqnum_to_streampos(pkt.seq_num));\n"
                    },
                    {
                        "line": 733,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    received_packets_in_flight(pkt.ptype,pkt.seq_num) := true;\n"
                    },
                    {
                        "line": 734,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    received_packets_sent_bytes(pkt.ptype,pkt.seq_num) := sent_bytes; # TODO\n"
                    },
                    {
                        "line": 735,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 736,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    call show_seqnum_to_streampos(seqnum_to_streampos(pkt.seq_num));\n"
                    },
                    {
                        "line": 737,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    call show_on_packet_received(received_packets_end(pkt.ptype), received_packets_packet_number(pkt.ptype,pkt.seq_num), received_packets_time_sent(pkt.ptype,pkt.seq_num), received_packets_ack_eliciting(pkt.ptype,pkt.seq_num), sent_packets_in_flight(pkt.ptype,pkt.seq_num), received_packets_sent_bytes(pkt.ptype,pkt.seq_num));\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet"
                    },
                    {
                        "name": "sent_bytes",
                        "type": "stream_pos"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "on_packet_received",
                        "component": "quic_endpoint.ivy"
                    },
                    {
                        "caller_func": "seqnum_to_streampos",
                        "component": "quic_loss_recovery.ivy"
                    },
                    {
                        "caller_func": "show_seqnum_to_streampos",
                        "component": "quic_loss_recovery.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 695,
                "action_name": "on_packet_sent",
                "implementation": [
                    {
                        "line": 695,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    sent_time_of_largest_acked(pkt.seq_num) := time_api.c_timer.now_micros;\n"
                    },
                    {
                        "line": 696,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "     # After a packet is sent, information about the packet is stored\n"
                    },
                    {
                        "line": 697,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    sent_packets_end(pkt.ptype) := sent_packets_end(pkt.ptype) + 1;\n"
                    },
                    {
                        "line": 698,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    sent_packets(pkt.ptype,sent_packets_end(pkt.ptype)) := pkt;\n"
                    },
                    {
                        "line": 699,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    sent_packets_packet_number(pkt.ptype,pkt.seq_num) := pkt.seq_num;\n"
                    },
                    {
                        "line": 700,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    sent_packets_time_sent(pkt.ptype,pkt.seq_num) := time_api.c_timer.now_micros;\n"
                    },
                    {
                        "line": 701,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    sent_packets_ack_eliciting(pkt.ptype,pkt.seq_num) := queued_ack_eliciting_pkt(seqnum_to_streampos(pkt.seq_num));\n"
                    },
                    {
                        "line": 702,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    sent_packets_in_flight(pkt.ptype,pkt.seq_num) := true;\n"
                    },
                    {
                        "line": 703,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    sent_packets_sent_bytes(pkt.ptype,pkt.seq_num) := sent_bytes; # TODO\n"
                    },
                    {
                        "line": 704,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 705,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    var idx : stream_pos := 0;\n"
                    },
                    {
                        "line": 706,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    ack_eliciting_packet_in_flight := false;\n"
                    },
                    {
                        "line": 707,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    ack_eliciting_packet_in_flight_per_space(pkt.ptype) := false;\n"
                    },
                    {
                        "line": 708,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    while idx < sent_packets_end(pkt.ptype) {\n"
                    },
                    {
                        "line": 709,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        if queued_ack_eliciting_pkt(seqnum_to_streampos(sent_packets(pkt.ptype,idx).seq_num)) {\n"
                    },
                    {
                        "line": 710,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            ack_eliciting_packet_in_flight := true;\n"
                    },
                    {
                        "line": 711,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            ack_eliciting_packet_in_flight_per_space(pkt.ptype) := true;\n"
                    },
                    {
                        "line": 712,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 713,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        idx := idx + 1;\n"
                    },
                    {
                        "line": 714,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 715,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 716,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    if queued_ack_eliciting_pkt(seqnum_to_streampos(pkt.seq_num)){\n"
                    },
                    {
                        "line": 717,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        time_of_last_ack_eliciting_packet(pkt.ptype) := time_api.c_timer.now_micros;\n"
                    },
                    {
                        "line": 718,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        bytes_in_flight := bytes_in_flight + sent_bytes;\n"
                    },
                    {
                        "line": 719,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 720,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    call show_seqnum_to_streampos(seqnum_to_streampos(pkt.seq_num));\n"
                    },
                    {
                        "line": 721,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    call show_on_packet_sent(sent_packets_end(pkt.ptype), sent_packets_packet_number(pkt.ptype,pkt.seq_num), sent_packets_time_sent(pkt.ptype,pkt.seq_num), sent_packets_ack_eliciting(pkt.ptype,pkt.seq_num), sent_packets_in_flight(pkt.ptype,pkt.seq_num), sent_packets_sent_bytes(pkt.ptype,pkt.seq_num), ack_eliciting_packet_in_flight);\n"
                    },
                    {
                        "line": 722,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    call show_time_of_last_ack_eliciting_packet(time_of_last_ack_eliciting_packet(pkt.ptype),pkt.ptype);\n"
                    },
                    {
                        "line": 723,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    call set_loss_detection_timer(dst, pkt.dst_cid);\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet"
                    },
                    {
                        "name": "sent_bytes",
                        "type": "stream_pos"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "seqnum_to_streampos",
                        "component": "quic_loss_recovery.ivy"
                    },
                    {
                        "caller_func": "show_seqnum_to_streampos",
                        "component": "quic_loss_recovery.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 678,
                "action_name": "on_pn_space_discarded",
                "implementation": [
                    {
                        "line": 677,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    if ~ pn_space_discarded {\n"
                    },
                    {
                        "line": 678,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        call remove_from_bytes_in_flight(pn_space);\n"
                    },
                    {
                        "line": 679,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        sent_packets_end(pn_space) := 0;\n"
                    },
                    {
                        "line": 680,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        # Reset the loss detection and PTO timer\n"
                    },
                    {
                        "line": 681,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        time_of_last_ack_eliciting_packet(pn_space) := 0;\n"
                    },
                    {
                        "line": 682,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        loss_time(pn_space) := 0;\n"
                    },
                    {
                        "line": 683,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        pto_count := 0;\n"
                    },
                    {
                        "line": 684,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        call show_on_pn_space_discarded(pn_space);\n"
                    },
                    {
                        "line": 685,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        call set_loss_detection_timer(dst, dcid);\n"
                    },
                    {
                        "line": 686,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        pn_space_discarded := true;\n"
                    },
                    {
                        "line": 687,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    }\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "pn_space",
                        "type": "quic_packet_type"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "remove_from_bytes_in_flight",
                        "component": "quic_loss_recovery.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 338,
                "action_name": "peer_completed_address_validation",
                "implementation": [
                    {
                        "line": 338,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    if dst = server.ep {\n"
                    },
                    {
                        "line": 339,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        b := true;\n"
                    },
                    {
                        "line": 340,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 341,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    b := established_handshake_keys(dcid); # has received Handshake ACK || handshake confirmed\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "b",
                    "type": "bool"
                },
                "action_parameters": [
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 252,
                "action_name": "pow",
                "implementation": [
                    {
                        "line": 251,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 252,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    z = pow(x,y);\n"
                    },
                    {
                        "line": 253,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "z",
                    "type": "microseconds"
                },
                "action_parameters": [
                    {
                        "name": "x",
                        "type": "microseconds"
                    },
                    {
                        "name": "y",
                        "type": "microseconds"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 346,
                "action_name": "set_loss_detection_timer",
                "implementation": [
                    {
                        "line": 345,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    var earliest_loss_time : microseconds;\n"
                    },
                    {
                        "line": 346,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    var space : quic_packet_type;\n"
                    },
                    {
                        "line": 347,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    (earliest_loss_time, space) := get_loss_time_space;\n"
                    },
                    {
                        "line": 348,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    call show_get_loss_time_space(earliest_loss_time, space);\n"
                    },
                    {
                        "line": 349,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 350,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    if earliest_loss_time ~= 0 {\n"
                    },
                    {
                        "line": 351,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        loss_detection_timer :=  earliest_loss_time;\n"
                    },
                    {
                        "line": 352,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    } else {\n"
                    },
                    {
                        "line": 353,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        if anti_amplification_limit_reached { # (dst, dcid)\n"
                    },
                    {
                        "line": 354,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "           loss_detection_timer := 0;\n"
                    },
                    {
                        "line": 355,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 356,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        else {\n"
                    },
                    {
                        "line": 357,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            if ~ack_eliciting_packet_in_flight & peer_completed_address_validation(dst, dcid) {\n"
                    },
                    {
                        "line": 358,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                # There is nothing to detect lost, so no timer is set.\n"
                    },
                    {
                        "line": 359,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                # However, the client needs to arm the timer if the\n"
                    },
                    {
                        "line": 360,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                # server might be blocked by the anti-amplification limit.\n"
                    },
                    {
                        "line": 361,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                loss_detection_timer := 0;\n"
                    },
                    {
                        "line": 362,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            } else {\n"
                    },
                    {
                        "line": 363,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                var pto_timeout_t : microseconds;\n"
                    },
                    {
                        "line": 364,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                var pto_space : quic_packet_type;\n"
                    },
                    {
                        "line": 365,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                (pto_timeout_t, pto_space) := get_pto_time_and_space(dst,dcid);\n"
                    },
                    {
                        "line": 366,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                loss_detection_timer := pto_timeout_t;\n"
                    },
                    {
                        "line": 367,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                pto_timeout := pto_timeout_t;\n"
                    },
                    {
                        "line": 368,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            }\n"
                    },
                    {
                        "line": 369,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            \n"
                    },
                    {
                        "line": 370,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 371,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 372,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    call show_loss_detection_timer(loss_detection_timer);\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 743,
                "action_name": "show_detect_and_remove_acked_packets",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "largest_acked",
                        "type": "pkt_num"
                    },
                    {
                        "name": "sent_packets_size",
                        "type": "stream_pos"
                    },
                    {
                        "name": "newly_acked_packets_end",
                        "type": "stream_pos"
                    },
                    {
                        "name": "sent_packets_end",
                        "type": "stream_pos"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 742,
                "action_name": "show_detect_and_remove_lost_packets",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "lost_sent_time",
                        "type": "microseconds"
                    },
                    {
                        "name": "loss_delay",
                        "type": "microseconds"
                    },
                    {
                        "name": "sent_packets_size",
                        "type": "stream_pos"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 610,
                "action_name": "show_detect_and_remove_lost_packets_size",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "pn_space",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "lost_packets_end",
                        "type": "stream_pos"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 741,
                "action_name": "show_get_loss_time_space",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "t",
                        "type": "microseconds"
                    },
                    {
                        "name": "s",
                        "type": "quic_packet_type"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 750,
                "action_name": "show_get_pto_time_and_space",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "pto_timeout_res",
                        "type": "microseconds"
                    },
                    {
                        "name": "pto_space",
                        "type": "quic_packet_type"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 747,
                "action_name": "show_include_ack_eliciting",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "res",
                        "type": "bool"
                    },
                    {
                        "name": "pn_space",
                        "type": "quic_packet_type"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 748,
                "action_name": "show_largest_acked_packet",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "largest_acked",
                        "type": "pkt_num"
                    },
                    {
                        "name": "largest_acked2d",
                        "type": "pkt_num"
                    },
                    {
                        "name": "pn_space",
                        "type": "quic_packet_type"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 246,
                "action_name": "show_latest_rtt",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "t",
                        "type": "microseconds"
                    },
                    {
                        "name": "c",
                        "type": "cid"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 518,
                "action_name": "show_loss_detection_timeout",
                "action_return": null,
                "exported": false,
                "action_parameters": null,
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 749,
                "action_name": "show_loss_detection_timer",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "loss_detection_timer",
                        "type": "microseconds"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 497,
                "action_name": "show_loss_time_update",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "t",
                        "type": "microseconds"
                    },
                    {
                        "name": "pn_space",
                        "type": "quic_packet_type"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 611,
                "action_name": "show_on_ack_received",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "largest_acked",
                        "type": "pkt_num"
                    },
                    {
                        "name": "ack_delay",
                        "type": "microseconds"
                    },
                    {
                        "name": "pn_space",
                        "type": "quic_packet_type"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 745,
                "action_name": "show_on_packet_received",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "sent_packets_end",
                        "type": "stream_pos"
                    },
                    {
                        "name": "sent_packets_packet_number",
                        "type": "pkt_num"
                    },
                    {
                        "name": "sent_packets_time_sent",
                        "type": "microseconds"
                    },
                    {
                        "name": "sent_packets_ack_eliciting",
                        "type": "bool"
                    },
                    {
                        "name": "sent_packets_in_flight",
                        "type": "bool"
                    },
                    {
                        "name": "sent_packets_sent_bytes",
                        "type": "stream_pos"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 744,
                "action_name": "show_on_packet_sent",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "sent_packets_end",
                        "type": "stream_pos"
                    },
                    {
                        "name": "sent_packets_packet_number",
                        "type": "pkt_num"
                    },
                    {
                        "name": "sent_packets_time_sent",
                        "type": "microseconds"
                    },
                    {
                        "name": "sent_packets_ack_eliciting",
                        "type": "bool"
                    },
                    {
                        "name": "sent_packets_in_flight",
                        "type": "bool"
                    },
                    {
                        "name": "sent_packets_sent_bytes",
                        "type": "stream_pos"
                    },
                    {
                        "name": "ack_eliciting_packet_in_flight",
                        "type": "bool"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 691,
                "action_name": "show_on_pn_space_discarded",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "pn_space",
                        "type": "quic_packet_type"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 751,
                "action_name": "show_time_of_last_ack_eliciting_packet",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "time_of_last_ack_eliciting_packet",
                        "type": "microseconds"
                    },
                    {
                        "name": "ptype",
                        "type": "quic_packet_type"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 674,
                "action_name": "show_update_rtt",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "latest_rtt",
                        "type": "microseconds"
                    },
                    {
                        "name": "min_rtt",
                        "type": "microseconds"
                    },
                    {
                        "name": "smoothed_rtt",
                        "type": "microseconds"
                    },
                    {
                        "name": "rttvar",
                        "type": "microseconds"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    }
                ],
                "called_from": [
                    {
                        "caller_func": "show_update_rtt",
                        "component": "quic_loss_recovery.ivy"
                    },
                    {
                        "caller_func": "show_update_rtt",
                        "component": "quic_loss_recovery.ivy"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 636,
                "action_name": "update_rtt",
                "implementation": [
                    {
                        "line": 636,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    call show_update_rtt(latest_rtt(dcid), min_rtt(dcid), smoothed_rtt(dcid), rttvar(dcid), dcid);\n"
                    },
                    {
                        "line": 637,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    if first_rtt_sample = 0 {\n"
                    },
                    {
                        "line": 638,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        min_rtt(dcid) := latest_rtt(dcid);\n"
                    },
                    {
                        "line": 639,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        smoothed_rtt(dcid) := latest_rtt(dcid);\n"
                    },
                    {
                        "line": 640,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        rttvar(dcid) := latest_rtt(dcid) / 2;\n"
                    },
                    {
                        "line": 641,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        first_rtt_sample := time_api.c_timer.now_micros;\n"
                    },
                    {
                        "line": 642,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    } else {\n"
                    },
                    {
                        "line": 643,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        # min_rtt ignores acknowledgment delay.\n"
                    },
                    {
                        "line": 644,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        if min_rtt(dcid) > latest_rtt(dcid) {\n"
                    },
                    {
                        "line": 645,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            min_rtt(dcid) := latest_rtt(dcid);\n"
                    },
                    {
                        "line": 646,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 647,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        # Limit ack_delay by max_ack_delay after handshake\n"
                    },
                    {
                        "line": 648,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        # confirmation.\n"
                    },
                    {
                        "line": 649,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        if established_handshake_keys(dcid) {\n"
                    },
                    {
                        "line": 650,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            if ack_delay > max_ack_delay_tp {\n"
                    },
                    {
                        "line": 651,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "                ack_delay := max_ack_delay_tp;\n"
                    },
                    {
                        "line": 652,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            }\n"
                    },
                    {
                        "line": 653,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 654,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        # Adjust for acknowledgment delay if plausible.\n"
                    },
                    {
                        "line": 655,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        var adjusted_rtt := latest_rtt(dcid);\n"
                    },
                    {
                        "line": 656,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        if latest_rtt(dcid) > min_rtt(dcid) + ack_delay {\n"
                    },
                    {
                        "line": 657,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "            adjusted_rtt := latest_rtt(dcid) - ack_delay;\n"
                    },
                    {
                        "line": 658,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 659,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        var abs := abs(smoothed_rtt(dcid) - adjusted_rtt);\n"
                    },
                    {
                        "line": 660,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        # if smoothed_rtt(dcid) < adjusted_rtt {\n"
                    },
                    {
                        "line": 661,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        #     abs := abs * -1;\n"
                    },
                    {
                        "line": 662,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        # }\n"
                    },
                    {
                        "line": 663,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        rttvar(dcid) := 3 * rttvar(dcid)/4 + abs/4;\n"
                    },
                    {
                        "line": 664,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "        smoothed_rtt(dcid) := 7 * smoothed_rtt(dcid)/8 + adjusted_rtt/8;\n"
                    },
                    {
                        "line": 665,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 666,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    # call show_latest_rtt(latest_rtt(dcid), dcid);\n"
                    },
                    {
                        "line": 667,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    # call show_min_rtt(min_rtt(dcid), dcid);\n"
                    },
                    {
                        "line": 668,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    # call show_smoothed_rtt(smoothed_rtt(dcid), dcid);\n"
                    },
                    {
                        "line": 669,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    # call show_rttvar(rttvar(dcid), dcid);\n"
                    },
                    {
                        "line": 670,
                        "file": "quic_loss_recovery.ivy",
                        "instruction": "    call show_update_rtt(latest_rtt(dcid), min_rtt(dcid), smoothed_rtt(dcid), rttvar(dcid), dcid);\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "ack_delay",
                        "type": "microseconds"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "functions": [
                {
                    "name": "loss_epoch : microseconds\n",
                    "comment": "",
                    "line": 33,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "loss_detection_timer : microseconds\n",
                    "comment": "",
                    "line": 36,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "first_rtt_sample : microseconds\n",
                    "comment": "",
                    "line": 41,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "latest_rtt(C:cid) : microseconds\n",
                    "comment": "",
                    "line": 46,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "smoothed_rtt(C:cid) : microseconds\n",
                    "comment": "",
                    "line": 61,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "rttvar(C:cid) : microseconds\n",
                    "comment": "",
                    "line": 64,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "min_rtt(C:cid) : microseconds\n",
                    "comment": "",
                    "line": 70,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "time_of_last_ack_eliciting_packet(E: quic_packet_type) : microseconds\n",
                    "comment": "",
                    "line": 73,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "largest_acked_packet(E: quic_packet_type) : pkt_num\n",
                    "comment": "",
                    "line": 76,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "local_largest_acked_packet(E: quic_packet_type) : pkt_num\n",
                    "comment": "",
                    "line": 78,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "loss_time(E: quic_packet_type) : microseconds\n",
                    "comment": "",
                    "line": 81,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "newly_acked_packets(E: quic_packet_type, I:stream_pos) : quic_packet\n",
                    "comment": "",
                    "line": 95,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "newly_acked_packets_end(E: quic_packet_type) : stream_pos\n",
                    "comment": "",
                    "line": 96,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "lost_packets(E: quic_packet_type, I:stream_pos) : quic_packet\n",
                    "comment": "",
                    "line": 98,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "lost_packets_end(E: quic_packet_type) : stream_pos\n",
                    "comment": "",
                    "line": 99,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "pc_lost(E: quic_packet_type, I:stream_pos) : quic_packet\n",
                    "comment": "",
                    "line": 101,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "pc_lost_end(E: quic_packet_type) : stream_pos\n",
                    "comment": "",
                    "line": 102,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "sent_packets(E: quic_packet_type, I:stream_pos) : quic_packet\n",
                    "comment": "",
                    "line": 104,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "sent_packets_end(E: quic_packet_type) : stream_pos\n",
                    "comment": "",
                    "line": 105,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "sent_packets_packet_number(E: quic_packet_type,S: pkt_num) : pkt_num\n",
                    "comment": "",
                    "line": 106,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "sent_packets_time_sent(E: quic_packet_type,S: pkt_num) : microseconds\n",
                    "comment": "",
                    "line": 107,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "sent_packets_sent_bytes(E: quic_packet_type,S: pkt_num) : stream_pos ",
                    "comment": " frame.arr",
                    "line": 110,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "received_packets(E: quic_packet_type, I:stream_pos) : quic_packet\n",
                    "comment": "",
                    "line": 113,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "received_packets_end(E: quic_packet_type) : stream_pos\n",
                    "comment": "",
                    "line": 114,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "received_packets_packet_number(E: quic_packet_type,S: pkt_num) : pkt_num\n",
                    "comment": "",
                    "line": 115,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "received_packets_time_sent(E: quic_packet_type,S: pkt_num) : microseconds\n",
                    "comment": "",
                    "line": 116,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "received_packets_sent_bytes(E: quic_packet_type,S: pkt_num) : stream_pos ",
                    "comment": " frame.arr",
                    "line": 119,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "packets_to_retransmit(E: quic_packet_type, I:stream_pos) : frame.arr\n",
                    "comment": "",
                    "line": 121,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "packets_to_retransmit_end(E: quic_packet_type) : stream_pos\n",
                    "comment": "",
                    "line": 122,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "sent_time_of_largest_acked(S:pkt_num) : microseconds\n",
                    "comment": "",
                    "line": 135,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "ack_time : microseconds\n",
                    "comment": "",
                    "line": 136,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "kPacketThreshold : stream_pos\n",
                    "comment": "",
                    "line": 139,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "kTimeThreshold : microseconds\n",
                    "comment": "",
                    "line": 149,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "kGranularity : microseconds\n",
                    "comment": "",
                    "line": 152,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "kInitialRtt : milliseconds\n",
                    "comment": "",
                    "line": 155,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "pto_count : microseconds ",
                    "comment": " for avoid to cast",
                    "line": 161,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "pto_timeout : microseconds\n",
                    "comment": "",
                    "line": 162,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "pto_backoff : stream_pos\n",
                    "comment": "",
                    "line": 163,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "max_idle_timeout_server : microseconds\n",
                    "comment": "",
                    "line": 165,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "max_idle_timeout_client : microseconds\n",
                    "comment": "",
                    "line": 166,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "max_idle_timeout_used : microseconds\n",
                    "comment": "",
                    "line": 167,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "idle_timeout(C:cid) : microseconds\n",
                    "comment": "",
                    "line": 168,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "timeout : microseconds\n",
                    "comment": "",
                    "line": 169,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "max_ack_delay_tp : microseconds\n",
                    "comment": "",
                    "line": 173,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "local_max_ack_delay_tp : microseconds\n",
                    "comment": "",
                    "line": 174,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "ack_delay_exponent_tp : microseconds\n",
                    "comment": "",
                    "line": 176,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "local_ack_delay_exponent_tp : microseconds\n",
                    "comment": "",
                    "line": 177,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "validation_timeout : microseconds\n",
                    "comment": "",
                    "line": 180,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "minimum_congestion_window : stream_pos\n",
                    "comment": "",
                    "line": 192,
                    "file": "quic_loss_recovery.ivy"
                }
            ],
            "relations": [
                {
                    "name": "sent_packets_ack_eliciting(E: quic_packet_type,S: pkt_num)\n",
                    "comment": "",
                    "line": 108,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "sent_packets_in_flight(E: quic_packet_type,S: pkt_num)\n",
                    "comment": "",
                    "line": 109,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "received_packets_ack_eliciting(E: quic_packet_type,S: pkt_num)\n",
                    "comment": "",
                    "line": 117,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "received_packets_in_flight(E: quic_packet_type,S: pkt_num)\n",
                    "comment": "",
                    "line": 118,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "ack_eliciting_packet_in_flight\n",
                    "comment": "",
                    "line": 124,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "ack_eliciting_packet_in_flight_per_space(E: quic_packet_type)\n",
                    "comment": "",
                    "line": 125,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "anti_amplification_limit_reached\n",
                    "comment": "",
                    "line": 146,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "respect_idle_timeout\n",
                    "comment": "",
                    "line": 170,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "connection_timeout \n",
                    "comment": "",
                    "line": 171,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "need_sent_ack_eliciting_initial_packet\n",
                    "comment": "",
                    "line": 182,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "need_sent_ack_eliciting_handshake_packet\n",
                    "comment": "",
                    "line": 183,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "need_sent_ack_eliciting_application_packet\n",
                    "comment": "",
                    "line": 184,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "pn_space_discarded\n",
                    "comment": "",
                    "line": 194,
                    "file": "quic_loss_recovery.ivy"
                },
                {
                    "name": "is_idle\n",
                    "comment": "",
                    "line": 196,
                    "file": "quic_loss_recovery.ivy"
                }
            ]
        }
    ],
    "quic_transport_parameters.ivy": [
        {
            "ack_delay_exponent": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "exponent_8",
                        "type": "microseconds"
                    }
                ]
            },
            "active_connection_id_limit": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "stream_pos_32",
                        "type": "stream_pos"
                    }
                ]
            },
            "disable_active_migration": {
                "called_from": [],
                "attributes": []
            },
            "enable_time_stamp": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "stream_pos_32",
                        "type": "stream_pos"
                    }
                ]
            },
            "grease_quic_bit": {
                "called_from": [],
                "attributes": []
            },
            "initial_max_data": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "stream_pos_32",
                        "type": "stream_pos"
                    }
                ]
            },
            "initial_max_stream_data_bidi_local": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "stream_pos_32",
                        "type": "stream_pos"
                    }
                ]
            },
            "initial_max_stream_data_bidi_remote": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "stream_pos_32",
                        "type": "stream_pos"
                    }
                ]
            },
            "initial_max_stream_data_uni": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "stream_pos_32",
                        "type": "stream_pos"
                    }
                ]
            },
            "initial_max_stream_id_bidi": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "stream_id_16",
                        "type": "stream_id"
                    }
                ]
            },
            "initial_max_stream_id_uni": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "stream_id_16",
                        "type": "stream_id"
                    }
                ]
            },
            "initial_source_connection_id": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "scid",
                        "type": "cid"
                    }
                ]
            },
            "loss_bits": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "unknown",
                        "type": "stream_pos"
                    }
                ]
            },
            "max_ack_delay": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "exponent_8",
                        "type": "milliseconds"
                    }
                ]
            },
            "max_idle_timeout": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "seconds_16",
                        "type": "milliseconds"
                    }
                ]
            },
            "max_packet_size": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "stream_pos_16",
                        "type": "stream_pos"
                    }
                ]
            },
            "min_ack_delay": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "exponent_8",
                        "type": "microseconds"
                    }
                ]
            },
            "original_destination_connection_id": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "dcid",
                        "type": "cid"
                    }
                ]
            },
            "preferred_address": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "ip_addr",
                        "type": "ip.addr,"
                    },
                    {
                        "name": "ip_port",
                        "type": "ip.port,"
                    },
                    {
                        "name": "ip6_addr",
                        "type": "ipv6.addr,"
                    },
                    {
                        "name": "ip6_port",
                        "type": "ipv6.port,"
                    },
                    {
                        "name": "pcid_len",
                        "type": "stream_pos,"
                    },
                    {
                        "name": "pcid",
                        "type": "cid,"
                    },
                    {
                        "name": "pref_token",
                        "type": "ipv6.addr"
                    }
                ]
            },
            "retry_source_connection_id": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "rcid",
                        "type": "cid"
                    }
                ]
            },
            "stateless_reset_token": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "data_8",
                        "type": "ipv6.addr"
                    }
                ]
            },
            "transport_parameter": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "action set(p",
                        "type": "this,s"
                    },
                    {
                        "name": "destructor is_set(S",
                        "type": "trans_params_struct)"
                    },
                    {
                        "name": "destructor value(S",
                        "type": "trans_params_struct)"
                    },
                    {
                        "name": "action set(p",
                        "type": "ptype,s"
                    },
                    {
                        "name": "is_set(s)",
                        "type": "= true;"
                    },
                    {
                        "name": "value(s)",
                        "type": "= p;"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    }
                ]
            },
            "unknown_ignore": {
                "called_from": [],
                "attributes": []
            },
            "unknown_transport_parameter": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "unknown",
                        "type": "stream_pos"
                    }
                ]
            },
            "version_information": {
                "called_from": [],
                "attributes": [
                    {
                        "name": "chosen_version",
                        "type": "version,"
                    },
                    {
                        "name": "other_version",
                        "type": "versions_bv"
                    }
                ]
            }
        },
        {
            "functions": [
                {
                    "name": "initial_max_stream_data_uni_server_0rtt : stream_pos\n",
                    "comment": "",
                    "line": 226,
                    "file": "quic_transport_parameters.ivy"
                },
                {
                    "name": "initial_max_stream_data_bidi_remote_server_0rtt : stream_pos\n",
                    "comment": "",
                    "line": 227,
                    "file": "quic_transport_parameters.ivy"
                },
                {
                    "name": "initial_max_data_server_0rtt : stream_pos\n",
                    "comment": "",
                    "line": 228,
                    "file": "quic_transport_parameters.ivy"
                },
                {
                    "name": "initial_max_stream_data_bidi_local_server_0rtt : stream_pos\n",
                    "comment": "",
                    "line": 229,
                    "file": "quic_transport_parameters.ivy"
                },
                {
                    "name": "initial_max_stream_id_bidi_server_0rtt : stream_id\n",
                    "comment": "",
                    "line": 230,
                    "file": "quic_transport_parameters.ivy"
                },
                {
                    "name": "active_connection_id_limit_server_0rtt : stream_pos\n",
                    "comment": "",
                    "line": 231,
                    "file": "quic_transport_parameters.ivy"
                }
            ],
            "relations": []
        }
    ],
    "quic_frame.ivy": [
        {
            "actions": {
                "line": 2173,
                "action_name": "acti_coid_check",
                "implementation": [
                    {
                        "line": 2173,
                        "file": "quic_frame.ivy",
                        "instruction": "    ok := true;\n"
                    },
                    {
                        "line": 2174,
                        "file": "quic_frame.ivy",
                        "instruction": "    var max : stream_pos := 0;\n"
                    },
                    {
                        "line": 2175,
                        "file": "quic_frame.ivy",
                        "instruction": "    var tp := trans_params(scid);\n"
                    },
                    {
                        "line": 2176,
                        "file": "quic_frame.ivy",
                        "instruction": "    if active_connection_id_limit.is_set(tp) {\n"
                    },
                    {
                        "line": 2177,
                        "file": "quic_frame.ivy",
                        "instruction": "        max := active_connection_id_limit.value(tp).stream_pos_32;\n"
                    },
                    {
                        "line": 2178,
                        "file": "quic_frame.ivy",
                        "instruction": "        ok := count <= max;\n"
                    },
                    {
                        "line": 2179,
                        "file": "quic_frame.ivy",
                        "instruction": "    };\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "ok",
                    "type": "bool"
                },
                "action_parameters": [
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "count",
                        "type": "stream_pos"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 1983,
                "action_name": "enqueue_frame",
                "implementation": [
                    {
                        "line": 1983,
                        "file": "quic_frame.ivy",
                        "instruction": "    queued_frames(scid) := queued_frames(scid).append(f);\n"
                    },
                    {
                        "line": 1984,
                        "file": "quic_frame.ivy",
                        "instruction": "    num_queued_frames(scid) := queued_frames(scid).end;\n"
                    },
                    {
                        "line": 1985,
                        "file": "quic_frame.ivy",
                        "instruction": "    queued_level(scid) := e;\n"
                    },
                    {
                        "line": 1986,
                        "file": "quic_frame.ivy",
                        "instruction": "    if ~probing {\n"
                    },
                    {
                        "line": 1987,
                        "file": "quic_frame.ivy",
                        "instruction": "        queued_non_probing(scid) := true;\n"
                    },
                    {
                        "line": 1988,
                        "file": "quic_frame.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 1989,
                        "file": "quic_frame.ivy",
                        "instruction": "    if ~(f isa frame.ack){ #& ~(f isa frame.padding){\n"
                    },
                    {
                        "line": 1990,
                        "file": "quic_frame.ivy",
                        "instruction": "        queued_non_ack(scid) := true;\n"
                    },
                    {
                        "line": 1991,
                        "file": "quic_frame.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 1992,
                        "file": "quic_frame.ivy",
                        "instruction": "    if  f isa frame.path_challenge {\n"
                    },
                    {
                        "line": 1993,
                        "file": "quic_frame.ivy",
                        "instruction": "        queued_challenge(scid) := true;\n"
                    },
                    {
                        "line": 1994,
                        "file": "quic_frame.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 1995,
                        "file": "quic_frame.ivy",
                        "instruction": "    if (f isa frame.connection_close) | (f isa frame.application_close) {\n"
                    },
                    {
                        "line": 1996,
                        "file": "quic_frame.ivy",
                        "instruction": "        queued_close(scid) := true;\n"
                    },
                    {
                        "line": 1997,
                        "file": "quic_frame.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 1998,
                        "file": "quic_frame.ivy",
                        "instruction": "    #Hamid\n"
                    },
                    {
                        "line": 1999,
                        "file": "quic_frame.ivy",
                        "instruction": "    if ~(f isa frame.ack) & ~(f isa frame.connection_close) { #& ~(f isa frame.padding){ & ~queued_ack_eliciting(scid)\n"
                    },
                    {
                        "line": 2000,
                        "file": "quic_frame.ivy",
                        "instruction": "\t    queued_ack_eliciting(scid) := true;\n"
                    },
                    {
                        "line": 2001,
                        "file": "quic_frame.ivy",
                        "instruction": "        if _generating {\n"
                    },
                    {
                        "line": 2002,
                        "file": "quic_frame.ivy",
                        "instruction": "            queued_ack_eliciting_pkt(seqnum_to_streampos(last_pkt_num(scid,e) + 0x1)) := true;  # TODO add client, vs server\n"
                    },
                    {
                        "line": 2003,
                        "file": "quic_frame.ivy",
                        "instruction": "            # call show_seqnum(seq);\n"
                    },
                    {
                        "line": 2004,
                        "file": "quic_frame.ivy",
                        "instruction": "            # call show_seqnum(last_pkt_num(scid,e) + 0x1);\n"
                    },
                    {
                        "line": 2005,
                        "file": "quic_frame.ivy",
                        "instruction": "            # call show_seqnum_to_streampos(seqnum_to_streampos(seq));\n"
                    },
                    {
                        "line": 2006,
                        "file": "quic_frame.ivy",
                        "instruction": "            # call show_seqnum_to_streampos(seqnum_to_streampos(last_pkt_num(scid,e) + 0x1));\n"
                    },
                    {
                        "line": 2007,
                        "file": "quic_frame.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 2008,
                        "file": "quic_frame.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 2009,
                        "file": "quic_frame.ivy",
                        "instruction": "    #Hamid\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "f",
                        "type": "frame"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "probing",
                        "type": "bool"
                    },
                    {
                        "name": "seq",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_ack_frequency_extension.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_ack_frequency_extension.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_ack_frequency_extension.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_ack_frequency_extension.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame_rtt",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame_rtt",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "seqnum_to_streampos",
                        "component": "quic_frame.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 2013,
                "action_name": "enqueue_frame_rtt",
                "implementation": [
                    {
                        "line": 2013,
                        "file": "quic_frame.ivy",
                        "instruction": "    queued_frames_rtt(scid) := queued_frames_rtt(scid).append(f);\n"
                    },
                    {
                        "line": 2014,
                        "file": "quic_frame.ivy",
                        "instruction": "    num_queued_frames_rtt(scid) := queued_frames_rtt(scid).end;\n"
                    },
                    {
                        "line": 2015,
                        "file": "quic_frame.ivy",
                        "instruction": "    queued_level_rtt(scid) := e;\n"
                    },
                    {
                        "line": 2016,
                        "file": "quic_frame.ivy",
                        "instruction": "    if ~(f isa frame.ack){ #& ~(f isa frame.padding){\n"
                    },
                    {
                        "line": 2017,
                        "file": "quic_frame.ivy",
                        "instruction": "        queued_non_ack(scid) := true;\n"
                    },
                    {
                        "line": 2018,
                        "file": "quic_frame.ivy",
                        "instruction": "    };\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "f",
                        "type": "frame"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "probing",
                        "type": "bool"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "frame_ack_name": "ack",
            "frame_ack_object": [
                {
                    "name": "gap",
                    "type": "pkt_num,"
                },
                {
                    "name": "ranges",
                    "type": "pkt_num"
                }
            ],
            "frame_ack_module": null,
            "actions": [
                {
                    "line": 706,
                    "action_name": "frame.ack.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [
                            {
                                "line": 273,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    if _generating {\n"
                            },
                            {
                                "line": 274,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require scid = the_cid;\n"
                            },
                            {
                                "line": 275,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        force_new_ack := true;\n"
                            },
                            {
                                "line": 276,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        #call handle_sending_ack(f.largest_acked);\n"
                            },
                            {
                                "line": 277,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    } \n"
                            }
                        ],
                        "after": [],
                        "around": [
                            {
                                "line": 708,
                                "file": "quic_frame.ivy",
                                "instruction": "            # is_not_sleeping := time_api.c_timer.is_sleep_fake_timeout;\n"
                            },
                            {
                                "line": 709,
                                "file": "quic_frame.ivy",
                                "instruction": "            # require (~is_not_sleeping -> ~_generating);\n"
                            },
                            {
                                "line": 710,
                                "file": "quic_frame.ivy",
                                "instruction": "            # require (_generating -> is_not_sleeping);\n"
                            },
                            {
                                "line": 711,
                                "file": "quic_frame.ivy",
                                "instruction": "            # var tp := trans_params(dcid);\n"
                            },
                            {
                                "line": 712,
                                "file": "quic_frame.ivy",
                                "instruction": "            # if min_ack_delay.is_set(tp)  {\n"
                            },
                            {
                                "line": 713,
                                "file": "quic_frame.ivy",
                                "instruction": "            # };\n"
                            },
                            {
                                "line": 714,
                                "file": "quic_frame.ivy",
                                "instruction": "            \n"
                            },
                            {
                                "line": 715,
                                "file": "quic_frame.ivy",
                                "instruction": "            # ack_time := time_api.c_timer.now_micros;\n"
                            },
                            {
                                "line": 716,
                                "file": "quic_frame.ivy",
                                "instruction": "            # An endpoint generates an RTT sample on receiving an ACK frame that meets the following two conditions:\n"
                            },
                            {
                                "line": 717,
                                "file": "quic_frame.ivy",
                                "instruction": "            # 1. the largest acknowledged packet number is newly acknowledged, and\n"
                            },
                            {
                                "line": 718,
                                "file": "quic_frame.ivy",
                                "instruction": "            # 2. at least one of the newly acknowledged packets was ack-eliciting.\n"
                            },
                            {
                                "line": 719,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 720,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 721,
                                "file": "quic_frame.ivy",
                                "instruction": "            if _generating  {\n"
                            },
                            {
                                "line": 722,
                                "file": "quic_frame.ivy",
                                "instruction": "            \trequire ~(e = quic_packet_type.initial) & ~(e = quic_packet_type.handshake); #& ~(e = quic_packet_type.handshake)\n"
                            },
                            {
                                "line": 723,
                                "file": "quic_frame.ivy",
                                "instruction": "                require ~conn_closed(scid);\n"
                            },
                            {
                                "line": 724,
                                "file": "quic_frame.ivy",
                                "instruction": "                # An endpoint measures the delays intentionally introduced between the time the \n"
                            },
                            {
                                "line": 725,
                                "file": "quic_frame.ivy",
                                "instruction": "                # packet with the largest packet number is received and the time an acknowledgment \n"
                            },
                            {
                                "line": 726,
                                "file": "quic_frame.ivy",
                                "instruction": "                # is sent. The endpoint encodes this delay in the Ack Delay field of an ACK frame; \n"
                            },
                            {
                                "line": 727,
                                "file": "quic_frame.ivy",
                                "instruction": "                # see Section 19.3. This allows the receiver of the ACK to adjust for any intentional delays, \n"
                            },
                            {
                                "line": 728,
                                "file": "quic_frame.ivy",
                                "instruction": "                # which is important for getting a better estimate of the path RTT when acknowledgments are delayed. \n"
                            },
                            {
                                "line": 729,
                                "file": "quic_frame.ivy",
                                "instruction": "                # A packet might be held in the OS kernel or elsewhere on the host before being processed. \n"
                            },
                            {
                                "line": 730,
                                "file": "quic_frame.ivy",
                                "instruction": "                # An endpoint MUST NOT include delays that it does not control when populating the\n"
                            },
                            {
                                "line": 731,
                                "file": "quic_frame.ivy",
                                "instruction": "                # Ack Delay field in an ACK frame.\n"
                            },
                            {
                                "line": 732,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 733,
                                "file": "quic_frame.ivy",
                                "instruction": "                # Scaling in this fashion allows for a larger range of values with a shorter encoding at \n"
                            },
                            {
                                "line": 734,
                                "file": "quic_frame.ivy",
                                "instruction": "                # the cost of lower resolution. Because the receiver doesn't use the ACK Delay for Initial \n"
                            },
                            {
                                "line": 735,
                                "file": "quic_frame.ivy",
                                "instruction": "                # and Handshake packets, a sender SHOULD send a value of 0. TODO\n"
                            },
                            {
                                "line": 736,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 737,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 738,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.handshake -> established_handshake_keys(scid);  # [4]\n"
                            },
                            {
                                "line": 739,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt -> established_1rtt_keys(scid);  # [4]\n"
                            },
                            {
                                "line": 740,
                                "file": "quic_frame.ivy",
                                "instruction": "            # Chris\n"
                            },
                            {
                                "line": 741,
                                "file": "quic_frame.ivy",
                                "instruction": "            # TODO ECN\n"
                            },
                            {
                                "line": 742,
                                "file": "quic_frame.ivy",
                                "instruction": "            require ~(e = quic_packet_type.version_negociation) & ~(e = quic_packet_type.retry) & ~(e = quic_packet_type.zero_rtt);\n"
                            },
                            {
                                "line": 743,
                                "file": "quic_frame.ivy",
                                "instruction": "            # Chris\n"
                            },
                            {
                                "line": 744,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 745,
                                "file": "quic_frame.ivy",
                                "instruction": "            \n"
                            },
                            {
                                "line": 746,
                                "file": "quic_frame.ivy",
                                "instruction": "            var idx : frame.ack.range.idx := 0;\n"
                            },
                            {
                                "line": 747,
                                "file": "quic_frame.ivy",
                                "instruction": "            var last := f.largest_acked;\n"
                            },
                            {
                                "line": 748,
                                "file": "quic_frame.ivy",
                                "instruction": "            if max_acked(dcid,e) < last {\n"
                            },
                            {
                                "line": 749,
                                "file": "quic_frame.ivy",
                                "instruction": "                max_acked(dcid,e) := last;  # [3]\n"
                            },
                            {
                                "line": 750,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 751,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 752,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 753,
                                "file": "quic_frame.ivy",
                                "instruction": "            call show_ack_eliciting_threshold_current_val(ack_eliciting_threshold_current_val(scid));\n"
                            },
                            {
                                "line": 754,
                                "file": "quic_frame.ivy",
                                "instruction": "            call show_ack_eliciting_threshold_current_val(ack_eliciting_threshold_current_val(dcid));\n"
                            },
                            {
                                "line": 755,
                                "file": "quic_frame.ivy",
                                "instruction": "            call show_ack_eliciting_threshold_val(ack_eliciting_threshold_val(scid));\n"
                            },
                            {
                                "line": 756,
                                "file": "quic_frame.ivy",
                                "instruction": "            call show_ack_eliciting_threshold_val(ack_eliciting_threshold_val(dcid));\n"
                            },
                            {
                                "line": 757,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 758,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 759,
                                "file": "quic_frame.ivy",
                                "instruction": "            \n"
                            },
                            {
                                "line": 760,
                                "file": "quic_frame.ivy",
                                "instruction": "            require f.ack_ranges.end > 0;\n"
                            },
                            {
                                "line": 761,
                                "file": "quic_frame.ivy",
                                "instruction": "            var some_new_ack := false;\n"
                            },
                            {
                                "line": 762,
                                "file": "quic_frame.ivy",
                                "instruction": "            while idx < f.ack_ranges.end {\n"
                            },
                            {
                                "line": 763,
                                "file": "quic_frame.ivy",
                                "instruction": "                var ack_range := f.ack_ranges.value(idx);\n"
                            },
                            {
                                "line": 764,
                                "file": "quic_frame.ivy",
                                "instruction": "                require idx > 0 -> ack_range.gap < last - 1;\n"
                            },
                            {
                                "line": 765,
                                "file": "quic_frame.ivy",
                                "instruction": "                var upper := last - ((ack_range.gap+2) if idx > 0 else 0);\n"
                            },
                            {
                                "line": 766,
                                "file": "quic_frame.ivy",
                                "instruction": "                require ack_range.ranges <= upper;\n"
                            },
                            {
                                "line": 767,
                                "file": "quic_frame.ivy",
                                "instruction": "                last := upper - ack_range.ranges;\n"
                            },
                            {
                                "line": 768,
                                "file": "quic_frame.ivy",
                                "instruction": "                var jdx := last;\n"
                            },
                            {
                                "line": 769,
                                "file": "quic_frame.ivy",
                                "instruction": "                while jdx <= upper {\n"
                            },
                            {
                                "line": 770,
                                "file": "quic_frame.ivy",
                                "instruction": "                        require sent_pkt(dcid,e,jdx);  # [1]\n"
                            },
                            {
                                "line": 771,
                                "file": "quic_frame.ivy",
                                "instruction": "                        if pkt_has_close(dcid,e,jdx) {\n"
                            },
                            {
                                "line": 772,
                                "file": "quic_frame.ivy",
                                "instruction": "                            conn_draining(scid) := true  # [5]\n"
                            },
                            {
                                "line": 773,
                                "file": "quic_frame.ivy",
                                "instruction": "                        };\n"
                            },
                            {
                                "line": 774,
                                "file": "quic_frame.ivy",
                                "instruction": "                        if ~acked_pkt(dcid,e,jdx) {\n"
                            },
                            {
                                "line": 775,
                                "file": "quic_frame.ivy",
                                "instruction": "                            if ack_eliciting_threshold_current_val(dcid) >= ack_eliciting_threshold_val(dcid) {\n"
                            },
                            {
                                "line": 776,
                                "file": "quic_frame.ivy",
                                "instruction": "                                some_new_ack := true;\n"
                            },
                            {
                                "line": 777,
                                "file": "quic_frame.ivy",
                                "instruction": "                                call show_ack_generated;\n"
                            },
                            {
                                "line": 778,
                                "file": "quic_frame.ivy",
                                "instruction": "                                ack_eliciting_threshold_current_val(dcid) := 0;\n"
                            },
                            {
                                "line": 779,
                                "file": "quic_frame.ivy",
                                "instruction": "                            };\n"
                            },
                            {
                                "line": 780,
                                "file": "quic_frame.ivy",
                                "instruction": "                        };\n"
                            },
                            {
                                "line": 781,
                                "file": "quic_frame.ivy",
                                "instruction": "                    acked_pkt(dcid,e,jdx) := true;\n"
                            },
                            {
                                "line": 782,
                                "file": "quic_frame.ivy",
                                "instruction": "                    jdx := jdx + 1\n"
                            },
                            {
                                "line": 783,
                                "file": "quic_frame.ivy",
                                "instruction": "                };\n"
                            },
                            {
                                "line": 784,
                                "file": "quic_frame.ivy",
                                "instruction": "    #           acked_pkt(dcid,N) := (last <= N & N <= upper) | acked_pkt(dcid,N);  # [2]\n"
                            },
                            {
                                "line": 785,
                                "file": "quic_frame.ivy",
                                "instruction": "                idx := idx.next;\n"
                            },
                            {
                                "line": 786,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 787,
                                "file": "quic_frame.ivy",
                                "instruction": "            # var local_ack_delay := on_ack_sent(last_pkt_num(scid,e),e);\n"
                            },
                            {
                                "line": 788,
                                "file": "quic_frame.ivy",
                                "instruction": "            # require _generating -> local_ack_delay <= local_max_ack_delay_tp;\n"
                            },
                            {
                                "line": 789,
                                "file": "quic_frame.ivy",
                                "instruction": "            if _generating {\n"
                            },
                            {
                                "line": 790,
                                "file": "quic_frame.ivy",
                                "instruction": "                #var local_ack_delay := on_ack_sent(last_pkt_num(scid,e),e);\n"
                            },
                            {
                                "line": 791,
                                "file": "quic_frame.ivy",
                                "instruction": "                # require ~need_sent_ack_eliciting_handshake_packet & ~need_sent_ack_eliciting_application_packet & ~need_sent_ack_eliciting_initial_packet;\n"
                            },
                            {
                                "line": 792,
                                "file": "quic_frame.ivy",
                                "instruction": "                require some_new_ack;\n"
                            },
                            {
                                "line": 793,
                                "file": "quic_frame.ivy",
                                "instruction": "                require f.largest_acked = max_acked(dcid,e);\n"
                            },
                            {
                                "line": 794,
                                "file": "quic_frame.ivy",
                                "instruction": "                # var local_ack_delay := on_ack_sent(max_acked(dcid,e) ,e);\n"
                            },
                            {
                                "line": 795,
                                "file": "quic_frame.ivy",
                                "instruction": "                # f.ack_delay := local_ack_delay;\n"
                            },
                            {
                                "line": 796,
                                "file": "quic_frame.ivy",
                                "instruction": "                # require local_ack_delay <= local_max_ack_delay_tp;\n"
                            },
                            {
                                "line": 797,
                                "file": "quic_frame.ivy",
                                "instruction": "                # call show_local_delay_ack(local_ack_delay,local_max_ack_delay_tp);\n"
                            },
                            {
                                "line": 798,
                                "file": "quic_frame.ivy",
                                "instruction": "                call show_ack_generated;\n"
                            },
                            {
                                "line": 799,
                                "file": "quic_frame.ivy",
                                "instruction": "            } \n"
                            },
                            {
                                "line": 800,
                                "file": "quic_frame.ivy",
                                "instruction": "\t    ...\n"
                            },
                            {
                                "line": 801,
                                "file": "quic_frame.ivy",
                                "instruction": "            if ~_generating {\n"
                            },
                            {
                                "line": 802,
                                "file": "quic_frame.ivy",
                                "instruction": "                call on_ack_received(dst_endpoint,f.largest_acked, f.ack_delay,e);\n"
                            },
                            {
                                "line": 803,
                                "file": "quic_frame.ivy",
                                "instruction": "            } \n"
                            },
                            {
                                "line": 804,
                                "file": "quic_frame.ivy",
                                "instruction": "            # else {\n"
                            },
                            {
                                "line": 805,
                                "file": "quic_frame.ivy",
                                "instruction": "            #     local_largest_acked_packet(e) := f.largest_acked;\n"
                            },
                            {
                                "line": 806,
                                "file": "quic_frame.ivy",
                                "instruction": "            # }\n"
                            },
                            {
                                "line": 807,
                                "file": "quic_frame.ivy",
                                "instruction": "            force_new_ack := false;\n"
                            },
                            {
                                "line": 808,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.ack"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": true,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.ack.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_ack_ecn_name": "ack_ecn",
            "frame_ack_ecn_object": [
                {
                    "name": "gap",
                    "type": "pkt_num,"
                },
                {
                    "name": "ranges",
                    "type": "pkt_num"
                }
            ],
            "frame_ack_ecn_module": null,
            "actions": [
                {
                    "line": 823,
                    "action_name": "frame.ack_ecn.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": [
                            {
                                "line": 825,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 826,
                                "file": "quic_frame.ivy",
                                "instruction": "            if _generating  {\n"
                            },
                            {
                                "line": 827,
                                "file": "quic_frame.ivy",
                                "instruction": "            \trequire ~(e = quic_packet_type.initial) & ~(e = quic_packet_type.handshake); #& ~(e = quic_packet_type.handshake)\n"
                            },
                            {
                                "line": 828,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 829,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 830,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.handshake -> established_handshake_keys(scid);  # [4]\n"
                            },
                            {
                                "line": 831,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt -> established_1rtt_keys(scid);  # [4]\n"
                            },
                            {
                                "line": 832,
                                "file": "quic_frame.ivy",
                                "instruction": "            #Chris\n"
                            },
                            {
                                "line": 833,
                                "file": "quic_frame.ivy",
                                "instruction": "            #TODO ECN\n"
                            },
                            {
                                "line": 834,
                                "file": "quic_frame.ivy",
                                "instruction": "            #require ~(e = quic_packet_type.version_negociation) & ~(e = quic_packet_type.retry);\n"
                            },
                            {
                                "line": 835,
                                "file": "quic_frame.ivy",
                                "instruction": "            #Chris\n"
                            },
                            {
                                "line": 836,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 837,
                                "file": "quic_frame.ivy",
                                "instruction": "            var idx : frame.ack_ecn.range.idx := 0;\n"
                            },
                            {
                                "line": 838,
                                "file": "quic_frame.ivy",
                                "instruction": "            var last := f.largest_acked;\n"
                            },
                            {
                                "line": 839,
                                "file": "quic_frame.ivy",
                                "instruction": "            if max_acked(dcid,e) < last {\n"
                            },
                            {
                                "line": 840,
                                "file": "quic_frame.ivy",
                                "instruction": "                max_acked(dcid,e) := last;  # [3]\n"
                            },
                            {
                                "line": 841,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 842,
                                "file": "quic_frame.ivy",
                                "instruction": "            require f.ack_ranges.end > 0;\n"
                            },
                            {
                                "line": 843,
                                "file": "quic_frame.ivy",
                                "instruction": "            var some_new_ack := false;\n"
                            },
                            {
                                "line": 844,
                                "file": "quic_frame.ivy",
                                "instruction": "            while idx < f.ack_ranges.end {\n"
                            },
                            {
                                "line": 845,
                                "file": "quic_frame.ivy",
                                "instruction": "                var ack_range := f.ack_ranges.value(idx);\n"
                            },
                            {
                                "line": 846,
                                "file": "quic_frame.ivy",
                                "instruction": "                require idx > 0 -> ack_range.gap < last - 1;\n"
                            },
                            {
                                "line": 847,
                                "file": "quic_frame.ivy",
                                "instruction": "                var upper := last - ((ack_range.gap+2) if idx > 0 else 0);\n"
                            },
                            {
                                "line": 848,
                                "file": "quic_frame.ivy",
                                "instruction": "                require ack_range.ranges <= upper;\n"
                            },
                            {
                                "line": 849,
                                "file": "quic_frame.ivy",
                                "instruction": "                last := upper - ack_range.ranges;\n"
                            },
                            {
                                "line": 850,
                                "file": "quic_frame.ivy",
                                "instruction": "                var jdx := last;\n"
                            },
                            {
                                "line": 851,
                                "file": "quic_frame.ivy",
                                "instruction": "                while jdx <= upper {\n"
                            },
                            {
                                "line": 852,
                                "file": "quic_frame.ivy",
                                "instruction": "                        require sent_pkt(dcid,e,jdx);  # [1]\n"
                            },
                            {
                                "line": 853,
                                "file": "quic_frame.ivy",
                                "instruction": "                        if pkt_has_close(dcid,e,jdx) {\n"
                            },
                            {
                                "line": 854,
                                "file": "quic_frame.ivy",
                                "instruction": "                            conn_draining(scid) := true  # [5]\n"
                            },
                            {
                                "line": 855,
                                "file": "quic_frame.ivy",
                                "instruction": "                        };\n"
                            },
                            {
                                "line": 856,
                                "file": "quic_frame.ivy",
                                "instruction": "                        if ~acked_pkt(dcid,e,jdx) {\n"
                            },
                            {
                                "line": 857,
                                "file": "quic_frame.ivy",
                                "instruction": "                            some_new_ack := true;\n"
                            },
                            {
                                "line": 858,
                                "file": "quic_frame.ivy",
                                "instruction": "                        };\n"
                            },
                            {
                                "line": 859,
                                "file": "quic_frame.ivy",
                                "instruction": "                    acked_pkt(dcid,e,jdx) := true;\n"
                            },
                            {
                                "line": 860,
                                "file": "quic_frame.ivy",
                                "instruction": "                    jdx := jdx + 1\n"
                            },
                            {
                                "line": 861,
                                "file": "quic_frame.ivy",
                                "instruction": "                };\n"
                            },
                            {
                                "line": 862,
                                "file": "quic_frame.ivy",
                                "instruction": "    #           acked_pkt(dcid,N) := (last <= N & N <= upper) | acked_pkt(dcid,N);  # [2]\n"
                            },
                            {
                                "line": 863,
                                "file": "quic_frame.ivy",
                                "instruction": "                idx := idx.next;\n"
                            },
                            {
                                "line": 864,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 865,
                                "file": "quic_frame.ivy",
                                "instruction": "            if _generating {\n"
                            },
                            {
                                "line": 866,
                                "file": "quic_frame.ivy",
                                "instruction": "                require some_new_ack;\n"
                            },
                            {
                                "line": 867,
                                "file": "quic_frame.ivy",
                                "instruction": "            }\n"
                            },
                            {
                                "line": 868,
                                "file": "quic_frame.ivy",
                                "instruction": "\t    ...\n"
                            },
                            {
                                "line": 869,
                                "file": "quic_frame.ivy",
                                "instruction": "            force_new_ack := false;\n"
                            },
                            {
                                "line": 870,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.ack_ecn"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.ack_ecn.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_application_close_name": "application_close",
            "frame_application_close_object": [
                {
                    "name": "err_code",
                    "type": "error_code,"
                },
                {
                    "name": "reason_phrase_length",
                    "type": "stream_pos,"
                },
                {
                    "name": "reason_phrase",
                    "type": "stream_data"
                }
            ],
            "frame_application_close_module": null,
            "actions": [
                {
                    "line": 1397,
                    "action_name": "frame.application_close.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [
                            {
                                "line": 350,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    if _generating {\n"
                            },
                            {
                                "line": 351,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require scid = the_cid;\n"
                            },
                            {
                                "line": 352,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    } else {\n"
                            },
                            {
                                "line": 353,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require is_no_error;\n"
                            },
                            {
                                "line": 354,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        call _finalize;\n"
                            },
                            {
                                "line": 355,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    }\n"
                            }
                        ],
                        "after": [],
                        "around": [
                            {
                                "line": 1398,
                                "file": "quic_frame.ivy",
                                "instruction": "            \n"
                            },
                            {
                                "line": 1399,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1400,
                                "file": "quic_frame.ivy",
                                "instruction": "            #require e ~= quic_packet_type.initial;\n"
                            },
                            {
                                "line": 1401,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 1402,
                                "file": "quic_frame.ivy",
                                "instruction": "            #require e = quic_packet_type.handshake -> established_handshake_keys(scid);\n"
                            },
                            {
                                "line": 1403,
                                "file": "quic_frame.ivy",
                                "instruction": "             if _generating  {\n"
                            },
                            {
                                "line": 1404,
                                "file": "quic_frame.ivy",
                                "instruction": "# require ~need_sent_ack_eliciting_application_packet & ~need_sent_ack_eliciting_handshake_packet & ~need_sent_ack_eliciting_initial_packet;\n"
                            },
                            {
                                "line": 1405,
                                "file": "quic_frame.ivy",
                                "instruction": "};\n"
                            },
                            {
                                "line": 1406,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1407,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(scid) & connected_to(scid) = dcid;\n"
                            },
                            {
                                "line": 1408,
                                "file": "quic_frame.ivy",
                                "instruction": "            require f.reason_phrase_length = f.reason_phrase.end;\n"
                            },
                            {
                                "line": 1409,
                                "file": "quic_frame.ivy",
                                "instruction": "            conn_closed(scid) := true;\n"
                            },
                            {
                                "line": 1410,
                                "file": "quic_frame.ivy",
                                "instruction": "            call handle_transport_error(f.err_code);\n"
                            },
                            {
                                "line": 1411,
                                "file": "quic_frame.ivy",
                                "instruction": "            if ~_generating {\n"
                            },
                            {
                                "line": 1412,
                                "file": "quic_frame.ivy",
                                "instruction": "                connection_closed := true;\n"
                            },
                            {
                                "line": 1413,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 1414,
                                "file": "quic_frame.ivy",
                                "instruction": "\t    ...\n"
                            },
                            {
                                "line": 1415,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.application_close"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "_finalize;",
                            "component": "ivy_quic_client_behavior.ivy"
                        },
                        {
                            "caller_func": "frame.application_close.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [
                            {
                                "caller_func": "frame.application_close.handle",
                                "component": "quic_frame.ivy"
                            }
                        ],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_connection_close_name": "connection_close",
            "frame_connection_close_object": [
                {
                    "name": "err_code",
                    "type": "error_code,"
                },
                {
                    "name": "frame_type",
                    "type": "error_code,"
                },
                {
                    "name": "reason_phrase_length",
                    "type": "stream_pos,"
                },
                {
                    "name": "reason_phrase",
                    "type": "stream_data"
                }
            ],
            "frame_connection_close_module": null,
            "actions": [
                {
                    "line": 1336,
                    "action_name": "frame.connection_close.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [
                            {
                                "line": 337,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    if _generating {\n"
                            },
                            {
                                "line": 338,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require conn_total_data(the_cid) > 1000; # tricks\n"
                            },
                            {
                                "line": 339,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require scid = the_cid;\n"
                            },
                            {
                                "line": 340,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require f.err_code = 0;\n"
                            },
                            {
                                "line": 341,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    } else {\n"
                            },
                            {
                                "line": 342,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require is_no_error;\n"
                            },
                            {
                                "line": 343,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        call _finalize;\n"
                            },
                            {
                                "line": 344,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    }\n"
                            }
                        ],
                        "after": [],
                        "around": [
                            {
                                "line": 1337,
                                "file": "quic_frame.ivy",
                                "instruction": "            \n"
                            },
                            {
                                "line": 1338,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1339,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt -> established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 1340,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.handshake -> established_handshake_keys(scid);\n"
                            },
                            {
                                "line": 1341,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1342,
                                "file": "quic_frame.ivy",
                                "instruction": "            if _generating  {\n"
                            },
                            {
                                "line": 1343,
                                "file": "quic_frame.ivy",
                                "instruction": "                # require ~need_sent_ack_eliciting_application_packet & ~need_sent_ack_eliciting_handshake_packet & ~need_sent_ack_eliciting_initial_packet;\n"
                            },
                            {
                                "line": 1344,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 1345,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(scid) & connected_to(scid) = dcid;\n"
                            },
                            {
                                "line": 1346,
                                "file": "quic_frame.ivy",
                                "instruction": "            require f.reason_phrase_length = f.reason_phrase.end;\n"
                            },
                            {
                                "line": 1347,
                                "file": "quic_frame.ivy",
                                "instruction": "            if _generating {\n"
                            },
                            {
                                "line": 1348,
                                "file": "quic_frame.ivy",
                                "instruction": "                require e = quic_packet_type.one_rtt;\n"
                            },
                            {
                                "line": 1349,
                                "file": "quic_frame.ivy",
                                "instruction": "                require ~conn_closed(scid);\n"
                            },
                            {
                                "line": 1350,
                                "file": "quic_frame.ivy",
                                "instruction": "            }\n"
                            },
                            {
                                "line": 1351,
                                "file": "quic_frame.ivy",
                                "instruction": "            else {\n"
                            },
                            {
                                "line": 1352,
                                "file": "quic_frame.ivy",
                                "instruction": "                connection_closed := true;\n"
                            },
                            {
                                "line": 1353,
                                "file": "quic_frame.ivy",
                                "instruction": "            }; \n"
                            },
                            {
                                "line": 1354,
                                "file": "quic_frame.ivy",
                                "instruction": "            conn_closed(scid) := true;\n"
                            },
                            {
                                "line": 1355,
                                "file": "quic_frame.ivy",
                                "instruction": "            call handle_transport_error(f.err_code);\n"
                            },
                            {
                                "line": 1356,
                                "file": "quic_frame.ivy",
                                "instruction": "\t    ...\n"
                            },
                            {
                                "line": 1357,
                                "file": "quic_frame.ivy",
                                "instruction": "            # if _generating {\n"
                            },
                            {
                                "line": 1358,
                                "file": "quic_frame.ivy",
                                "instruction": "            #     call _finalize;\n"
                            },
                            {
                                "line": 1359,
                                "file": "quic_frame.ivy",
                                "instruction": "            # };\n"
                            },
                            {
                                "line": 1360,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.connection_close"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "_finalize;",
                            "component": "ivy_quic_client_behavior.ivy"
                        },
                        {
                            "caller_func": "frame.connection_close.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [
                            {
                                "caller_func": "frame.connection_close.handle",
                                "component": "quic_frame.ivy"
                            }
                        ],
                        "assertions": [
                            {
                                "line": 68,
                                "file": "quic_server_test.ivy",
                                "assertion": "require is_no_error;\n"
                            },
                            {
                                "line": 69,
                                "file": "quic_server_test.ivy",
                                "assertion": "require conn_total_data(the_cid) > 0;\n"
                            },
                            {
                                "line": 113,
                                "file": "quic_ack_frequency_extension.ivy",
                                "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 114,
                                "file": "quic_ack_frequency_extension.ivy",
                                "assertion": "require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 115,
                                "file": "quic_ack_frequency_extension.ivy",
                                "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 117,
                                "file": "quic_ack_frequency_extension.ivy",
                                "assertion": "require  min_ack_delay.is_set(tp);\n"
                            },
                            {
                                "line": 1273,
                                "file": "quic_frame.ivy",
                                "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1274,
                                "file": "quic_frame.ivy",
                                "assertion": "require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);  # [3]\n"
                            },
                            {
                                "line": 1275,
                                "file": "quic_frame.ivy",
                                "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1276,
                                "file": "quic_frame.ivy",
                                "assertion": "require connected(scid) & connected_to(scid) = dcid;\n"
                            },
                            {
                                "line": 1280,
                                "file": "quic_frame.ivy",
                                "assertion": "require ~conn_closed(scid);  # [2]\n"
                            },
                            {
                                "line": 1828,
                                "file": "quic_frame.ivy",
                                "assertion": "around handle {require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1829,
                                "file": "quic_frame.ivy",
                                "assertion": "require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 1831,
                                "file": "quic_frame.ivy",
                                "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid); \n"
                            },
                            {
                                "line": 1834,
                                "file": "quic_frame.ivy",
                                "assertion": "require f.seq_num <= max_seq_num(dcid); #[1]\n"
                            },
                            {
                                "line": 327,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require scid = the_cid;\n"
                            },
                            {
                                "line": 1484,
                                "file": "quic_frame.ivy",
                                "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1485,
                                "file": "quic_frame.ivy",
                                "assertion": "require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 1489,
                                "file": "quic_frame.ivy",
                                "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 374,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require scid = the_cid;\n"
                            },
                            {
                                "line": 375,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require f.id = 4;\n"
                            }
                        ]
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_crypto_name": "crypto",
            "frame_crypto_object": [
                {
                    "name": "offset",
                    "type": "stream_pos,"
                },
                {
                    "name": "length",
                    "type": "stream_pos,"
                },
                {
                    "name": "data",
                    "type": "stream_data"
                }
            ],
            "frame_crypto_module": null,
            "actions": [
                {
                    "line": 1047,
                    "action_name": "frame.crypto.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [
                            {
                                "line": 259,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    if _generating {\n"
                            },
                            {
                                "line": 260,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require scid = the_cid;\n"
                            },
                            {
                                "line": 261,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require f.length > 0;\n"
                            },
                            {
                                "line": 262,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require f.offset = crypto_length(scid,e);\n"
                            },
                            {
                                "line": 263,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require f.length = (crypto_data_end(scid,e)) - f.offset;\n"
                            },
                            {
                                "line": 264,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    }\n"
                            }
                        ],
                        "after": [],
                        "around": [
                            {
                                "line": 1049,
                                "file": "quic_frame.ivy",
                                "instruction": "\t        #if ~scid=0 {\n"
                            },
                            {
                                "line": 1050,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1051,
                                "file": "quic_frame.ivy",
                                "instruction": "\t        #};\n"
                            },
                            {
                                "line": 1052,
                                "file": "quic_frame.ivy",
                                "instruction": "            # if _generating  {\n"
                            },
                            {
                                "line": 1053,
                                "file": "quic_frame.ivy",
                                "instruction": "            #     # require ~need_sent_ack_eliciting_application_packet & ~need_sent_ack_eliciting_handshake_packet & ~need_sent_ack_eliciting_initial_packet;\n"
                            },
                            {
                                "line": 1054,
                                "file": "quic_frame.ivy",
                                "instruction": "            # };\n"
                            },
                            {
                                "line": 1055,
                                "file": "quic_frame.ivy",
                                "instruction": "            require ~conn_closed(scid);  # [1]\n"
                            },
                            {
                                "line": 1056,
                                "file": "quic_frame.ivy",
                                "instruction": "            #chris\n"
                            },
                            {
                                "line": 1057,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e ~= quic_packet_type.zero_rtt;  # [4]\n"
                            },
                            {
                                "line": 1058,
                                "file": "quic_frame.ivy",
                                "instruction": "            #chris\n"
                            },
                            {
                                "line": 1059,
                                "file": "quic_frame.ivy",
                                "instruction": "\t        #if  ~is_crypto_limit_test | ~_generating { #For crypto limit test\n"
                            },
                            {
                                "line": 1060,
                                "file": "quic_frame.ivy",
                                "instruction": "                require ((f.offset) + (f.length)) <= crypto_data_end(scid,e);  # [2]\n"
                            },
                            {
                                "line": 1061,
                                "file": "quic_frame.ivy",
                                "instruction": "                require f.data = crypto_data(scid,e).segment(f.offset,f.offset+f.length);  # [2]\n"
                            },
                            {
                                "line": 1062,
                                "file": "quic_frame.ivy",
                                "instruction": "\t        #};\n"
                            },
                            {
                                "line": 1063,
                                "file": "quic_frame.ivy",
                                "instruction": "            ...\n"
                            },
                            {
                                "line": 1064,
                                "file": "quic_frame.ivy",
                                "instruction": "            #require e ~= quic_packet_type.zero_rtt;  # [4]\n"
                            },
                            {
                                "line": 1065,
                                "file": "quic_frame.ivy",
                                "instruction": "            var length := f.offset + f.length;\n"
                            },
                            {
                                "line": 1066,
                                "file": "quic_frame.ivy",
                                "instruction": "            if crypto_length(scid,e) < length {\n"
                            },
                            {
                                "line": 1067,
                                "file": "quic_frame.ivy",
                                "instruction": "                crypto_length(scid,e) := length;   # [3]\n"
                            },
                            {
                                "line": 1068,
                                "file": "quic_frame.ivy",
                                "instruction": "                #call show_crypto_length(crypto_length(scid,e));\n"
                            },
                            {
                                "line": 1069,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 1070,
                                "file": "quic_frame.ivy",
                                "instruction": "            var idx := f.offset;\n"
                            },
                            {
                                "line": 1071,
                                "file": "quic_frame.ivy",
                                "instruction": "            while idx < f.offset + f.length {\n"
                            },
                            {
                                "line": 1072,
                                "file": "quic_frame.ivy",
                                "instruction": "                crypto_data_present(scid,e,idx) := true;  # [3]\n"
                            },
                            {
                                "line": 1073,
                                "file": "quic_frame.ivy",
                                "instruction": "                idx := idx.next\n"
                            },
                            {
                                "line": 1074,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 1075,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            },
                            {
                                "line": 1076,
                                "file": "quic_frame.ivy",
                                "instruction": "            # TODO: is the following needed? Maybe it belongs somewhere else?\n"
                            },
                            {
                                "line": 1077,
                                "file": "quic_frame.ivy",
                                "instruction": "            if e = quic_packet_type.handshake {\n"
                            },
                            {
                                "line": 1078,
                                "file": "quic_frame.ivy",
                                "instruction": "                established_1rtt_keys(scid) := true;\n"
                            },
                            {
                                "line": 1079,
                                "file": "quic_frame.ivy",
                                "instruction": "            }\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.crypto"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": true,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.crypto.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_data_blocked_name": "data_blocked",
            "frame_data_blocked_object": [
                {
                    "name": "pos",
                    "type": "stream_pos"
                }
            ],
            "frame_data_blocked_module": null,
            "actions": [
                {
                    "line": 1512,
                    "action_name": "frame.data_blocked.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": [
                            {
                                "line": 1513,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1514,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 1515,
                                "file": "quic_frame.ivy",
                                "instruction": "             if _generating  {\n"
                            },
                            {
                                "line": 1516,
                                "file": "quic_frame.ivy",
                                "instruction": "# require ~need_sent_ack_eliciting_application_packet & ~need_sent_ack_eliciting_handshake_packet & ~need_sent_ack_eliciting_initial_packet;\n"
                            },
                            {
                                "line": 1517,
                                "file": "quic_frame.ivy",
                                "instruction": "};\n"
                            },
                            {
                                "line": 1518,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1519,
                                "file": "quic_frame.ivy",
                                "instruction": "\t    ...\n"
                            },
                            {
                                "line": 1520,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.data_blocked"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.data_blocked.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_name": "frame",
            "frame_object": [],
            "frame_module": null,
            "actions": [
                {
                    "line": 404,
                    "action_name": "frame.handle",
                    "implementation": [
                        {
                            "line": 399,
                            "file": "quic_frame.ivy",
                            "instruction": "        # is_not_sleeping := time_api.c_timer.is_sleep_fake_timeout;\n"
                        },
                        {
                            "line": 400,
                            "file": "quic_frame.ivy",
                            "instruction": "        # require (~is_not_sleeping -> ~_generating);\n"
                        },
                        {
                            "line": 401,
                            "file": "quic_frame.ivy",
                            "instruction": "        # require (_generating -> is_not_sleeping);\n"
                        },
                        {
                            "line": 402,
                            "file": "quic_frame.ivy",
                            "instruction": "        \n"
                        },
                        {
                            "line": 403,
                            "file": "quic_frame.ivy",
                            "instruction": "        require false; # this generic action should never be called\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "this"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [
                            {
                                "caller_func": "infer_tls_events",
                                "component": "quic_infer.ivy"
                            },
                            {
                                "caller_func": "infer_tls_events_0rtt",
                                "component": "quic_infer.ivy"
                            }
                        ],
                        "assertions": [
                            {
                                "line": 404,
                                "file": "quic_frame.ivy",
                                "assertion": "require false; # this generic action should never be called\n"
                            }
                        ]
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_handshake_done_name": "handshake_done",
            "frame_handshake_done_object": [],
            "frame_handshake_done_module": null,
            "actions": [
                {
                    "line": 1707,
                    "action_name": "frame.handshake_done.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": [
                            {
                                "line": 1708,
                                "file": "quic_frame.ivy",
                                "instruction": "            \n"
                            },
                            {
                                "line": 1709,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1710,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);  # [3]\n"
                            },
                            {
                                "line": 1711,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e ~= quic_packet_type.initial;\n"
                            },
                            {
                                "line": 1712,
                                "file": "quic_frame.ivy",
                                "instruction": "\t        require e ~= quic_packet_type.handshake;\n"
                            },
                            {
                                "line": 1713,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1714,
                                "file": "quic_frame.ivy",
                                "instruction": "            require tls_handshake_finished;\n"
                            },
                            {
                                "line": 1715,
                                "file": "quic_frame.ivy",
                                "instruction": "                ...\n"
                            },
                            {
                                "line": 1716,
                                "file": "quic_frame.ivy",
                                "instruction": "            if _generating {\n"
                            },
                            {
                                "line": 1717,
                                "file": "quic_frame.ivy",
                                "instruction": "                handshake_done_send := true;\n"
                            },
                            {
                                "line": 1718,
                                "file": "quic_frame.ivy",
                                "instruction": "            }\n"
                            },
                            {
                                "line": 1719,
                                "file": "quic_frame.ivy",
                                "instruction": "            else {\n"
                            },
                            {
                                "line": 1720,
                                "file": "quic_frame.ivy",
                                "instruction": "                handshake_done_recv := true;\n"
                            },
                            {
                                "line": 1721,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 1722,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.handshake_done"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.handshake_done.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_malicious_frame_name": "malicious_frame",
            "frame_malicious_frame_object": [
                {
                    "name": "data",
                    "type": "stream_data\n"
                }
            ],
            "frame_malicious_frame_module": null,
            "actions": [
                {
                    "line": 1948,
                    "action_name": "frame.malicious_frame.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": [
                            {
                                "line": 1950,
                                "file": "quic_frame.ivy",
                                "instruction": "            require tls_handshake_finished;\n"
                            },
                            {
                                "line": 1951,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 1952,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1953,
                                "file": "quic_frame.ivy",
                                "instruction": "            require (e = quic_packet_type.one_rtt) & established_1rtt_keys(scid); # | e = quic_packet_type.zero_rtt  | e = quic_packet_type.zero_rtt & established_0rtt_keys(scid) \n"
                            },
                            {
                                "line": 1954,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1955,
                                "file": "quic_frame.ivy",
                                "instruction": "            require ~conn_closed(scid);  # [8]\n"
                            },
                            {
                                "line": 1956,
                                "file": "quic_frame.ivy",
                                "instruction": "            require conn_seen(scid);  # [9]\n"
                            },
                            {
                                "line": 1957,
                                "file": "quic_frame.ivy",
                                "instruction": "\t        ...\n"
                            },
                            {
                                "line": 1958,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.malicious_frame"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.malicious_frame.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_max_data_name": "max_data",
            "frame_max_data_object": [
                {
                    "name": "pos",
                    "type": "stream_pos"
                }
            ],
            "frame_max_data_module": null,
            "actions": [
                {
                    "line": 1602,
                    "action_name": "frame.max_data.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [
                            {
                                "line": 383,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    if _generating {\n"
                            },
                            {
                                "line": 384,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require scid = the_cid;\n"
                            },
                            {
                                "line": 385,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require f.pos = 4000;\n"
                            },
                            {
                                "line": 386,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    }\n"
                            },
                            {
                                "line": 387,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    else {\n"
                            },
                            {
                                "line": 388,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require ~(max_data_set(scid) & max_data_val(scid) > f.pos);\n"
                            },
                            {
                                "line": 389,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        var tp := trans_params(scid);\n"
                            },
                            {
                                "line": 390,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        if initial_max_data.is_set(tp) {\n"
                            },
                            {
                                "line": 391,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "# TEMORARY: commented out until fixed\n"
                            },
                            {
                                "line": 392,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "#            require initial_max_data.value(tp).stream_pos_32 <= f.pos;\n"
                            },
                            {
                                "line": 393,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        }\n"
                            },
                            {
                                "line": 394,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    }\n"
                            }
                        ],
                        "after": [],
                        "around": [
                            {
                                "line": 1603,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1604,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 1605,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1606,
                                "file": "quic_frame.ivy",
                                "instruction": "             if _generating  {\n"
                            },
                            {
                                "line": 1607,
                                "file": "quic_frame.ivy",
                                "instruction": "# require ~need_sent_ack_eliciting_application_packet & ~need_sent_ack_eliciting_handshake_packet & ~need_sent_ack_eliciting_initial_packet;\n"
                            },
                            {
                                "line": 1608,
                                "file": "quic_frame.ivy",
                                "instruction": "};\n"
                            },
                            {
                                "line": 1609,
                                "file": "quic_frame.ivy",
                                "instruction": "            if ~max_data_set(scid) | f.pos > max_data_val(scid) {\n"
                            },
                            {
                                "line": 1610,
                                "file": "quic_frame.ivy",
                                "instruction": "                max_data_set(scid) := true;\n"
                            },
                            {
                                "line": 1611,
                                "file": "quic_frame.ivy",
                                "instruction": "                max_data_val(scid) := f.pos;  # [2]\n"
                            },
                            {
                                "line": 1612,
                                "file": "quic_frame.ivy",
                                "instruction": "            }\n"
                            },
                            {
                                "line": 1613,
                                "file": "quic_frame.ivy",
                                "instruction": "\t    ...\n"
                            },
                            {
                                "line": 1614,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.max_data"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.max_data.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_max_stream_data_name": "max_stream_data",
            "frame_max_stream_data_object": [
                {
                    "name": "id",
                    "type": "stream_id,"
                },
                {
                    "name": "pos",
                    "type": "stream_pos"
                }
            ],
            "frame_max_stream_data_module": null,
            "actions": [
                {
                    "line": 1443,
                    "action_name": "frame.max_stream_data.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [
                            {
                                "line": 362,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    if _generating {\n"
                            },
                            {
                                "line": 363,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require scid = the_cid;\n"
                            },
                            {
                                "line": 364,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require 4 <= f.id & f.id <= 16;\n"
                            },
                            {
                                "line": 365,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    }\n"
                            }
                        ],
                        "after": [],
                        "around": [
                            {
                                "line": 1444,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1445,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 1446,
                                "file": "quic_frame.ivy",
                                "instruction": "             if _generating  {\n"
                            },
                            {
                                "line": 1447,
                                "file": "quic_frame.ivy",
                                "instruction": "# require ~need_sent_ack_eliciting_application_packet & ~need_sent_ack_eliciting_handshake_packet & ~need_sent_ack_eliciting_initial_packet;\n"
                            },
                            {
                                "line": 1448,
                                "file": "quic_frame.ivy",
                                "instruction": "};\n"
                            },
                            {
                                "line": 1449,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1450,
                                "file": "quic_frame.ivy",
                                "instruction": "            require stream_seen(scid,f.id);\n"
                            },
                            {
                                "line": 1451,
                                "file": "quic_frame.ivy",
                                "instruction": "            if ~max_stream_data_set(scid,f.id) | f.pos > max_stream_data_val(scid,f.id) {\n"
                            },
                            {
                                "line": 1452,
                                "file": "quic_frame.ivy",
                                "instruction": "                max_stream_data_set(scid,f.id) := true;\n"
                            },
                            {
                                "line": 1453,
                                "file": "quic_frame.ivy",
                                "instruction": "                max_stream_data_val(scid,f.id) := f.pos;  # [2]\n"
                            },
                            {
                                "line": 1454,
                                "file": "quic_frame.ivy",
                                "instruction": "            }\n"
                            },
                            {
                                "line": 1455,
                                "file": "quic_frame.ivy",
                                "instruction": "\t    ...\n"
                            },
                            {
                                "line": 1456,
                                "file": "quic_frame.ivy",
                                "instruction": "            #receiving_ready := true;\n"
                            },
                            {
                                "line": 1457,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.max_stream_data"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.max_stream_data.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_max_streams_name": "max_streams",
            "frame_max_streams_object": [
                {
                    "name": "id",
                    "type": "stream_id"
                }
            ],
            "frame_max_streams_module": null,
            "actions": [
                {
                    "line": 1231,
                    "action_name": "frame.max_streams.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [
                            {
                                "line": 312,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    if _generating {\n"
                            },
                            {
                                "line": 313,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require scid = the_cid;\n"
                            },
                            {
                                "line": 314,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    }\n"
                            }
                        ],
                        "after": [],
                        "around": [
                            {
                                "line": 1233,
                                "file": "quic_frame.ivy",
                                "instruction": "            # require (_generating  -> is_not_sleeping);\n"
                            },
                            {
                                "line": 1234,
                                "file": "quic_frame.ivy",
                                "instruction": "            \n"
                            },
                            {
                                "line": 1235,
                                "file": "quic_frame.ivy",
                                "instruction": "            # require (~is_not_sleeping -> ~_generating);\n"
                            },
                            {
                                "line": 1236,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1237,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);  # [3]\n"
                            },
                            {
                                "line": 1238,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1239,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(scid) & connected_to(scid) = dcid;\n"
                            },
                            {
                                "line": 1240,
                                "file": "quic_frame.ivy",
                                "instruction": "             if _generating  {\n"
                            },
                            {
                                "line": 1241,
                                "file": "quic_frame.ivy",
                                "instruction": "# require ~need_sent_ack_eliciting_application_packet & ~need_sent_ack_eliciting_handshake_packet & ~need_sent_ack_eliciting_initial_packet;\n"
                            },
                            {
                                "line": 1242,
                                "file": "quic_frame.ivy",
                                "instruction": "};\n"
                            },
                            {
                                "line": 1243,
                                "file": "quic_frame.ivy",
                                "instruction": "            require ~conn_closed(scid);  # [2]\n"
                            },
                            {
                                "line": 1244,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 1245,
                                "file": "quic_frame.ivy",
                                "instruction": "            var kind := bidir;\n"
                            },
                            {
                                "line": 1246,
                                "file": "quic_frame.ivy",
                                "instruction": "            if ~ (max_stream_set(dcid,kind) & f.id < max_stream(dcid,kind)) { #[5]\n"
                            },
                            {
                                "line": 1247,
                                "file": "quic_frame.ivy",
                                "instruction": "                max_stream_set(dcid,kind) := true;\n"
                            },
                            {
                                "line": 1248,
                                "file": "quic_frame.ivy",
                                "instruction": "                max_stream(dcid,kind) := f.id; #  [1]\n"
                            },
                            {
                                "line": 1249,
                                "file": "quic_frame.ivy",
                                "instruction": "\t\t        #max_stream_id(dcid,kind) := cid_to_stream_id(f.id);\n"
                            },
                            {
                                "line": 1250,
                                "file": "quic_frame.ivy",
                                "instruction": "            }\n"
                            },
                            {
                                "line": 1251,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 1252,
                                "file": "quic_frame.ivy",
                                "instruction": "            #  if _generating {\n"
                            },
                            {
                                "line": 1253,
                                "file": "quic_frame.ivy",
                                "instruction": "            #      require some_max_streams;\n"
                            },
                            {
                                "line": 1254,
                                "file": "quic_frame.ivy",
                                "instruction": "            #      require f.id = ms;\n"
                            },
                            {
                                "line": 1255,
                                "file": "quic_frame.ivy",
                                "instruction": "            #  }\n"
                            },
                            {
                                "line": 1256,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 1257,
                                "file": "quic_frame.ivy",
                                "instruction": "\t        ...\n"
                            },
                            {
                                "line": 1258,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 1259,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.max_streams"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.max_streams.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_max_streams_bidi_name": "max_streams_bidi",
            "frame_max_streams_bidi_object": [
                {
                    "name": "id",
                    "type": "stream_id"
                }
            ],
            "frame_max_streams_bidi_module": null,
            "actions": [
                {
                    "line": 1267,
                    "action_name": "frame.max_streams_bidi.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": [
                            {
                                "line": 1269,
                                "file": "quic_frame.ivy",
                                "instruction": "            # require (_generating  -> is_not_sleeping);\n"
                            },
                            {
                                "line": 1270,
                                "file": "quic_frame.ivy",
                                "instruction": "            \n"
                            },
                            {
                                "line": 1271,
                                "file": "quic_frame.ivy",
                                "instruction": "            # require (~is_not_sleeping -> ~_generating);\n"
                            },
                            {
                                "line": 1272,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1273,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);  # [3]\n"
                            },
                            {
                                "line": 1274,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1275,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(scid) & connected_to(scid) = dcid;\n"
                            },
                            {
                                "line": 1276,
                                "file": "quic_frame.ivy",
                                "instruction": "             if _generating  {\n"
                            },
                            {
                                "line": 1277,
                                "file": "quic_frame.ivy",
                                "instruction": "# require ~need_sent_ack_eliciting_application_packet & ~need_sent_ack_eliciting_handshake_packet & ~need_sent_ack_eliciting_initial_packet;\n"
                            },
                            {
                                "line": 1278,
                                "file": "quic_frame.ivy",
                                "instruction": "};\n"
                            },
                            {
                                "line": 1279,
                                "file": "quic_frame.ivy",
                                "instruction": "            require ~conn_closed(scid);  # [2]\n"
                            },
                            {
                                "line": 1280,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 1281,
                                "file": "quic_frame.ivy",
                                "instruction": "            var kind := bidir;\n"
                            },
                            {
                                "line": 1282,
                                "file": "quic_frame.ivy",
                                "instruction": "            if ~ (max_stream_set(dcid,kind) & f.id < max_stream(dcid,kind)) { #[5]\n"
                            },
                            {
                                "line": 1283,
                                "file": "quic_frame.ivy",
                                "instruction": "                max_stream_set(dcid,kind) := true;\n"
                            },
                            {
                                "line": 1284,
                                "file": "quic_frame.ivy",
                                "instruction": "                max_stream(dcid,kind) := f.id; #  [1]\n"
                            },
                            {
                                "line": 1285,
                                "file": "quic_frame.ivy",
                                "instruction": "\t\t        #max_stream_id(dcid,kind) := cid_to_stream_id(f.id);\n"
                            },
                            {
                                "line": 1286,
                                "file": "quic_frame.ivy",
                                "instruction": "            }\n"
                            },
                            {
                                "line": 1287,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 1288,
                                "file": "quic_frame.ivy",
                                "instruction": "            #  if _generating {\n"
                            },
                            {
                                "line": 1289,
                                "file": "quic_frame.ivy",
                                "instruction": "            #      require some_max_streams;\n"
                            },
                            {
                                "line": 1290,
                                "file": "quic_frame.ivy",
                                "instruction": "            #      require f.id = ms;\n"
                            },
                            {
                                "line": 1291,
                                "file": "quic_frame.ivy",
                                "instruction": "            #  }\n"
                            },
                            {
                                "line": 1292,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 1293,
                                "file": "quic_frame.ivy",
                                "instruction": "\t        ...\n"
                            },
                            {
                                "line": 1294,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 1295,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.max_streams_bidi"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.max_streams_bidi.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_new_connection_id_name": "new_connection_id",
            "frame_new_connection_id_object": [
                {
                    "name": "seq_num",
                    "type": "cid_seq,"
                },
                {
                    "name": "retire_prior_to",
                    "type": "cid_seq,"
                },
                {
                    "name": "length",
                    "type": "cid_length,"
                },
                {
                    "name": "scid",
                    "type": "cid,"
                },
                {
                    "name": "token",
                    "type": "reset_token"
                }
            ],
            "frame_new_connection_id_module": null,
            "actions": [
                {
                    "line": 1759,
                    "action_name": "frame.new_connection_id.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [
                            {
                                "line": 318,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    if _generating {\n"
                            },
                            {
                                "line": 319,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require scid = the_cid;\n"
                            },
                            {
                                "line": 320,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    }\n"
                            }
                        ],
                        "after": [],
                        "around": [
                            {
                                "line": 1760,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1761,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 1762,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid); #Will change with implementing TODO\n"
                            },
                            {
                                "line": 1763,
                                "file": "quic_frame.ivy",
                                "instruction": "            #chris\n"
                            },
                            {
                                "line": 1764,
                                "file": "quic_frame.ivy",
                                "instruction": "            #require f.length >= 0x1 & f.length <= 0x14; #[1]\n"
                            },
                            {
                                "line": 1765,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 1766,
                                "file": "quic_frame.ivy",
                                "instruction": "            require ~issued_zero_length_cid; # [7]\n"
                            },
                            {
                                "line": 1767,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 1768,
                                "file": "quic_frame.ivy",
                                "instruction": "            if ~_generating { # For error test, carefull, should be specified in generating so\n"
                            },
                            {
                                "line": 1769,
                                "file": "quic_frame.ivy",
                                "instruction": "                require f.retire_prior_to <= f.seq_num; #[4]\n"
                            },
                            {
                                "line": 1770,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 1771,
                                "file": "quic_frame.ivy",
                                "instruction": "            require f.seq_num < max_rtp_num(scid) -> send_retire_cid(dcid); #[6] \n"
                            },
                            {
                                "line": 1772,
                                "file": "quic_frame.ivy",
                                "instruction": "            #chris\n"
                            },
                            {
                                "line": 1773,
                                "file": "quic_frame.ivy",
                                "instruction": "            ...\n"
                            },
                            {
                                "line": 1774,
                                "file": "quic_frame.ivy",
                                "instruction": "            \n"
                            },
                            {
                                "line": 1775,
                                "file": "quic_frame.ivy",
                                "instruction": "\t        cid_mapped(f.scid) := true;\n"
                            },
                            {
                                "line": 1776,
                                "file": "quic_frame.ivy",
                                "instruction": "                #cid_mapped(f.dcid) := true;\n"
                            },
                            {
                                "line": 1777,
                                "file": "quic_frame.ivy",
                                "instruction": "\t        cid_to_aid(f.scid) := scid;\n"
                            },
                            {
                                "line": 1778,
                                "file": "quic_frame.ivy",
                                "instruction": "                #cid_to_aid(f.dcid) := dcid;\n"
                            },
                            {
                                "line": 1779,
                                "file": "quic_frame.ivy",
                                "instruction": "            seqnum_to_cid(scid,f.seq_num) := f.scid;\n"
                            },
                            {
                                "line": 1780,
                                "file": "quic_frame.ivy",
                                "instruction": "            last_cid_seq(scid) := f.seq_num; # ncid quant vuln\n"
                            },
                            {
                                "line": 1781,
                                "file": "quic_frame.ivy",
                                "instruction": "            #seqnum_to_cid(dcid,f.seq_num) := f.dcid;\n"
                            },
                            {
                                "line": 1782,
                                "file": "quic_frame.ivy",
                                "instruction": "            #call map_cids(scid,dcid); # ncid quant vuln ?\n"
                            },
                            {
                                "line": 1783,
                                "file": "quic_frame.ivy",
                                "instruction": "            #call map_cids(dcid,scid);\n"
                            },
                            {
                                "line": 1784,
                                "file": "quic_frame.ivy",
                                "instruction": "            count_newcid_frame(f.seq_num,f.retire_prior_to,f.length,f.scid,f.token) := count_newcid_frame(f.seq_num,f.retire_prior_to,f.length,f.scid,f.token) + 1;\n"
                            },
                            {
                                "line": 1785,
                                "file": "quic_frame.ivy",
                                "instruction": "            if  count_newcid_frame(f.seq_num,f.retire_prior_to,f.length,f.scid,f.token) = 1 {\n"
                            },
                            {
                                "line": 1786,
                                "file": "quic_frame.ivy",
                                "instruction": "                num_conn(dcid) := num_conn(dcid) + 1;\n"
                            },
                            {
                                "line": 1787,
                                "file": "quic_frame.ivy",
                                "instruction": "                var tp := trans_params(dcid);\n"
                            },
                            {
                                "line": 1788,
                                "file": "quic_frame.ivy",
                                "instruction": "                if ~_generating & active_connection_id_limit.is_set(tp)  {\n"
                            },
                            {
                                "line": 1789,
                                "file": "quic_frame.ivy",
                                "instruction": "                    require acti_coid_check(dcid,num_conn(dcid));\n"
                            },
                            {
                                "line": 1790,
                                "file": "quic_frame.ivy",
                                "instruction": "                };\n"
                            },
                            {
                                "line": 1791,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 1792,
                                "file": "quic_frame.ivy",
                                "instruction": "            \n"
                            },
                            {
                                "line": 1793,
                                "file": "quic_frame.ivy",
                                "instruction": "            #chris\n"
                            },
                            {
                                "line": 1794,
                                "file": "quic_frame.ivy",
                                "instruction": "            if (f.retire_prior_to > max_rtp_num(scid)) {\n"
                            },
                            {
                                "line": 1795,
                                "file": "quic_frame.ivy",
                                "instruction": "               max_rtp_num(scid) := f.retire_prior_to; #[5] \n"
                            },
                            {
                                "line": 1796,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 1797,
                                "file": "quic_frame.ivy",
                                "instruction": "            #chris\n"
                            },
                            {
                                "line": 1798,
                                "file": "quic_frame.ivy",
                                "instruction": "            #Hamid\n"
                            },
                            {
                                "line": 1799,
                                "file": "quic_frame.ivy",
                                "instruction": "            if (f.seq_num > max_seq_num(scid)) {\n"
                            },
                            {
                                "line": 1800,
                                "file": "quic_frame.ivy",
                                "instruction": "                max_seq_num(scid) := f.seq_num;\n"
                            },
                            {
                                "line": 1801,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 1802,
                                "file": "quic_frame.ivy",
                                "instruction": "            #Hamid \n"
                            },
                            {
                                "line": 1803,
                                "file": "quic_frame.ivy",
                                "instruction": "\t        call enqueue_frame(scid,f,e,true,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.new_connection_id"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.new_connection_id.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_new_token_name": "new_token",
            "frame_new_token_object": [
                {
                    "name": "length",
                    "type": "stream_pos,"
                },
                {
                    "name": "data",
                    "type": "stream_data"
                }
            ],
            "frame_new_token_module": null,
            "actions": [
                {
                    "line": 1925,
                    "action_name": "frame.new_token.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [
                            {
                                "line": 291,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    if _generating {\n"
                            },
                            {
                                "line": 292,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require scid = the_cid;\n"
                            },
                            {
                                "line": 293,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        #call handle_sending_ack(f.largest_acked);\n"
                            },
                            {
                                "line": 294,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    } \n"
                            },
                            {
                                "line": 295,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    else {\n"
                            },
                            {
                                "line": 296,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        call tls_api.upper.save_token(f.data);\n"
                            },
                            {
                                "line": 297,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    }\n"
                            }
                        ],
                        "after": [],
                        "around": [
                            {
                                "line": 1926,
                                "file": "quic_frame.ivy",
                                "instruction": "            # TODO for now we save token in clinet & server\n"
                            },
                            {
                                "line": 1927,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1928,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 1929,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1930,
                                "file": "quic_frame.ivy",
                                "instruction": "            if ~_generating {\n"
                            },
                            {
                                "line": 1931,
                                "file": "quic_frame.ivy",
                                "instruction": "                require ~is_client(scid);\n"
                            },
                            {
                                "line": 1932,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 1933,
                                "file": "quic_frame.ivy",
                                "instruction": "            ...\n"
                            },
                            {
                                "line": 1934,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 1935,
                                "file": "quic_frame.ivy",
                                "instruction": "            call tls_api.upper.save_token(f.data);\n"
                            },
                            {
                                "line": 1936,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.new_token"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "tls_api.upper.save_token",
                            "component": "ivy_quic_client_behavior.ivy"
                        },
                        {
                            "caller_func": "frame.new_token.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_path_challenge_name": "path_challenge",
            "frame_path_challenge_object": [
                {
                    "name": "data",
                    "type": "stream_data"
                }
            ],
            "frame_path_challenge_module": null,
            "actions": [
                {
                    "line": 1871,
                    "action_name": "frame.path_challenge.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": [
                            {
                                "line": 1872,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 1873,
                                "file": "quic_frame.ivy",
                                "instruction": "            require handshake_done_recv | handshake_done_send;\n"
                            },
                            {
                                "line": 1874,
                                "file": "quic_frame.ivy",
                                "instruction": "            # if _generating {\n"
                            },
                            {
                                "line": 1875,
                                "file": "quic_frame.ivy",
                                "instruction": "            #     require handshake_done_send;\n"
                            },
                            {
                                "line": 1876,
                                "file": "quic_frame.ivy",
                                "instruction": "            # } else {\n"
                            },
                            {
                                "line": 1877,
                                "file": "quic_frame.ivy",
                                "instruction": "            #     require handshake_done_recv;\n"
                            },
                            {
                                "line": 1878,
                                "file": "quic_frame.ivy",
                                "instruction": "            # };\n"
                            },
                            {
                                "line": 1879,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1880,
                                "file": "quic_frame.ivy",
                                "instruction": "            require f.data.end = 8;\n"
                            },
                            {
                                "line": 1881,
                                "file": "quic_frame.ivy",
                                "instruction": "            require ~path_challenge_pending(dcid,f.data);\n"
                            },
                            {
                                "line": 1882,
                                "file": "quic_frame.ivy",
                                "instruction": "            ...\n"
                            },
                            {
                                "line": 1883,
                                "file": "quic_frame.ivy",
                                "instruction": "            path_challenge_pending(dcid,f.data) := true;\n"
                            },
                            {
                                "line": 1884,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,true,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.path_challenge"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.path_challenge.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_path_response_name": "path_response",
            "frame_path_response_object": [
                {
                    "name": "data",
                    "type": "stream_data"
                }
            ],
            "frame_path_response_module": null,
            "actions": [
                {
                    "line": 1898,
                    "action_name": "frame.path_response.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": [
                            {
                                "line": 1899,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1900,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 1901,
                                "file": "quic_frame.ivy",
                                "instruction": "            if _generating {\n"
                            },
                            {
                                "line": 1902,
                                "file": "quic_frame.ivy",
                                "instruction": "                require ~path_challenge_sent(dcid); # avoid auto response\n"
                            },
                            {
                                "line": 1903,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 1904,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1905,
                                "file": "quic_frame.ivy",
                                "instruction": "            require f.data.end = 8;\n"
                            },
                            {
                                "line": 1906,
                                "file": "quic_frame.ivy",
                                "instruction": "            require path_challenge_pending(scid,f.data);\n"
                            },
                            {
                                "line": 1907,
                                "file": "quic_frame.ivy",
                                "instruction": "            ...\n"
                            },
                            {
                                "line": 1908,
                                "file": "quic_frame.ivy",
                                "instruction": "            path_challenge_pending(scid,f.data) := false;\n"
                            },
                            {
                                "line": 1909,
                                "file": "quic_frame.ivy",
                                "instruction": "            path_validated := true; # TODO\n"
                            },
                            {
                                "line": 1910,
                                "file": "quic_frame.ivy",
                                "instruction": "            path_validated_pkt_num := seq_num;\n"
                            },
                            {
                                "line": 1911,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,true,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.path_response"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": true,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.path_response.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_ping_name": "ping",
            "frame_ping_object": [],
            "frame_ping_module": null,
            "actions": [
                {
                    "line": 1629,
                    "action_name": "frame.ping.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": [
                            {
                                "line": 1630,
                                "file": "quic_frame.ivy",
                                "instruction": "           \n"
                            },
                            {
                                "line": 1631,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt -> established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 1632,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.handshake -> established_handshake_keys(scid);\n"
                            },
                            {
                                "line": 1633,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1634,
                                "file": "quic_frame.ivy",
                                "instruction": "            if _generating {\n"
                            },
                            {
                                "line": 1635,
                                "file": "quic_frame.ivy",
                                "instruction": "                require ~(e = quic_packet_type.version_negociation) & ~(e = quic_packet_type.retry) & ~(e = quic_packet_type.zero_rtt);\n"
                            },
                            {
                                "line": 1636,
                                "file": "quic_frame.ivy",
                                "instruction": "                require need_sent_ack_eliciting_application_packet | need_sent_ack_eliciting_handshake_packet | need_sent_ack_eliciting_initial_packet;\n"
                            },
                            {
                                "line": 1637,
                                "file": "quic_frame.ivy",
                                "instruction": "                # require need_sent_ack_eliciting_application_packet -> e = quic_packet_type.one_rtt;\n"
                            },
                            {
                                "line": 1638,
                                "file": "quic_frame.ivy",
                                "instruction": "                # require need_sent_ack_eliciting_handshake_packet -> e = quic_packet_type.handshake;\n"
                            },
                            {
                                "line": 1639,
                                "file": "quic_frame.ivy",
                                "instruction": "                # require need_sent_ack_eliciting_initial_packet -> e = quic_packet_type.initial;\n"
                            },
                            {
                                "line": 1640,
                                "file": "quic_frame.ivy",
                                "instruction": "                # TODO investigate -> activate _generating event\n"
                            },
                            {
                                "line": 1641,
                                "file": "quic_frame.ivy",
                                "instruction": "                # require e = quic_packet_type.one_rtt;\n"
                            },
                            {
                                "line": 1642,
                                "file": "quic_frame.ivy",
                                "instruction": "                # require e = quic_packet_type.one_rtt -> need_sent_ack_eliciting_application_packet;\n"
                            },
                            {
                                "line": 1643,
                                "file": "quic_frame.ivy",
                                "instruction": "                # require e = quic_packet_type.handshake -> need_sent_ack_eliciting_handshake_packet;\n"
                            },
                            {
                                "line": 1644,
                                "file": "quic_frame.ivy",
                                "instruction": "                # require e = quic_packet_type.initial -> need_sent_ack_eliciting_initial_packet;\n"
                            },
                            {
                                "line": 1645,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 1646,
                                "file": "quic_frame.ivy",
                                "instruction": "            ...\n"
                            },
                            {
                                "line": 1647,
                                "file": "quic_frame.ivy",
                                "instruction": "            # if _generating {\n"
                            },
                            {
                                "line": 1648,
                                "file": "quic_frame.ivy",
                                "instruction": "            #     need_sent_ack_eliciting_application_packet := false;\n"
                            },
                            {
                                "line": 1649,
                                "file": "quic_frame.ivy",
                                "instruction": "            #     need_sent_ack_eliciting_handshake_packet := false;\n"
                            },
                            {
                                "line": 1650,
                                "file": "quic_frame.ivy",
                                "instruction": "            #     need_sent_ack_eliciting_initial_packet := false;\n"
                            },
                            {
                                "line": 1651,
                                "file": "quic_frame.ivy",
                                "instruction": "            # }\n"
                            },
                            {
                                "line": 1652,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.ping"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": true,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.ping.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_retire_connection_id_name": "retire_connection_id",
            "frame_retire_connection_id_object": [
                {
                    "name": "seq_num",
                    "type": "cid_seq"
                }
            ],
            "frame_retire_connection_id_module": null,
            "actions": [
                {
                    "line": 1827,
                    "action_name": "frame.retire_connection_id.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [
                            {
                                "line": 325,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    if _generating {\n"
                            },
                            {
                                "line": 326,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require scid = the_cid;\n"
                            },
                            {
                                "line": 327,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    }\n"
                            }
                        ],
                        "after": [],
                        "around": [
                            {
                                "line": 1828,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 1829,
                                "file": "quic_frame.ivy",
                                "instruction": "            # Will change with implementing TODO\n"
                            },
                            {
                                "line": 1830,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid); \n"
                            },
                            {
                                "line": 1831,
                                "file": "quic_frame.ivy",
                                "instruction": "            # TODO remember the highest sequence number that was sent\n"
                            },
                            {
                                "line": 1832,
                                "file": "quic_frame.ivy",
                                "instruction": "            #Hamid\n"
                            },
                            {
                                "line": 1833,
                                "file": "quic_frame.ivy",
                                "instruction": "            require f.seq_num <= max_seq_num(dcid); #[1]\n"
                            },
                            {
                                "line": 1834,
                                "file": "quic_frame.ivy",
                                "instruction": "            #Hamid \n"
                            },
                            {
                                "line": 1835,
                                "file": "quic_frame.ivy",
                                "instruction": "            # TODO specify that you cannot retire the connection id of the current packet\n"
                            },
                            {
                                "line": 1836,
                                "file": "quic_frame.ivy",
                                "instruction": "            #\n"
                            },
                            {
                                "line": 1837,
                                "file": "quic_frame.ivy",
                                "instruction": "\t        ... \n"
                            },
                            {
                                "line": 1838,
                                "file": "quic_frame.ivy",
                                "instruction": "\t        cid_mapped(seqnum_to_cid(dcid, f.seq_num)) := false; #[2]\n"
                            },
                            {
                                "line": 1839,
                                "file": "quic_frame.ivy",
                                "instruction": "            count_rcid_frame(f.seq_num) := count_rcid_frame(f.seq_num) + 1;\n"
                            },
                            {
                                "line": 1840,
                                "file": "quic_frame.ivy",
                                "instruction": "            if  count_rcid_frame(f.seq_num) = 1 {\n"
                            },
                            {
                                "line": 1841,
                                "file": "quic_frame.ivy",
                                "instruction": "                num_conn(dcid) := num_conn(dcid) - 1;\n"
                            },
                            {
                                "line": 1842,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 1843,
                                "file": "quic_frame.ivy",
                                "instruction": "            #Hamid\n"
                            },
                            {
                                "line": 1844,
                                "file": "quic_frame.ivy",
                                "instruction": "            # the connection id seqnum_to_cid is being retired, append it to an array and iterate over the array in packet\n"
                            },
                            {
                                "line": 1845,
                                "file": "quic_frame.ivy",
                                "instruction": "            #Hamid\n"
                            },
                            {
                                "line": 1846,
                                "file": "quic_frame.ivy",
                                "instruction": "\t        call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.retire_connection_id"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.retire_connection_id.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_rst_stream_name": "rst_stream",
            "frame_rst_stream_object": [
                {
                    "name": "id",
                    "type": "stream_id,"
                },
                {
                    "name": "err_code",
                    "type": "error_code,"
                },
                {
                    "name": "final_offset",
                    "type": "stream_pos"
                }
            ],
            "frame_rst_stream_module": null,
            "actions": [
                {
                    "line": 1116,
                    "action_name": "frame.rst_stream.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [
                            {
                                "line": 283,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    if _generating {\n"
                            },
                            {
                                "line": 284,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require scid = the_cid;\n"
                            },
                            {
                                "line": 285,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require f.id = 4;\n"
                            },
                            {
                                "line": 286,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    }\n"
                            }
                        ],
                        "after": [],
                        "around": [
                            {
                                "line": 1118,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1119,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);  # [6]\n"
                            },
                            {
                                "line": 1120,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1121,
                                "file": "quic_frame.ivy",
                                "instruction": "            require ~conn_closed(scid);  # [5]\n"
                            },
                            {
                                "line": 1122,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(scid) & connected_to(scid) = dcid;\n"
                            },
                            {
                                "line": 1123,
                                "file": "quic_frame.ivy",
                                "instruction": "            require stream_length(dcid,f.id) <= f.final_offset;  # [1]\n"
                            },
                            {
                                "line": 1124,
                                "file": "quic_frame.ivy",
                                "instruction": "             if _generating  {\n"
                            },
                            {
                                "line": 1125,
                                "file": "quic_frame.ivy",
                                "instruction": "# require ~need_sent_ack_eliciting_application_packet & ~need_sent_ack_eliciting_handshake_packet & ~need_sent_ack_eliciting_initial_packet;\n"
                            },
                            {
                                "line": 1126,
                                "file": "quic_frame.ivy",
                                "instruction": "};\n"
                            },
                            {
                                "line": 1127,
                                "file": "quic_frame.ivy",
                                "instruction": "            require (stream_reset(dcid,f.id) | stream_finished(dcid,f.id)) -> stream_length(dcid,f.id) = f.final_offset;\n"
                            },
                            {
                                "line": 1128,
                                "file": "quic_frame.ivy",
                                "instruction": "            stream_reset(dcid,f.id) := true;  # [2]\n"
                            },
                            {
                                "line": 1129,
                                "file": "quic_frame.ivy",
                                "instruction": "            stream_length(dcid,f.id) := f.final_offset;  #[3]\n"
                            },
                            {
                                "line": 1130,
                                "file": "quic_frame.ivy",
                                "instruction": "            #require stream_seen(dcid,f.id);  # [8]\n"
                            },
                            {
                                "line": 1131,
                                "file": "quic_frame.ivy",
                                "instruction": "            require stream_id_allowed(dcid,f.id,e);  # [4]\n"
                            },
                            {
                                "line": 1132,
                                "file": "quic_frame.ivy",
                                "instruction": "\t    ...\n"
                            },
                            {
                                "line": 1133,
                                "file": "quic_frame.ivy",
                                "instruction": "            if ~_generating {\n"
                            },
                            {
                                "line": 1134,
                                "file": "quic_frame.ivy",
                                "instruction": "                call handle_transport_error(f.err_code);\n"
                            },
                            {
                                "line": 1135,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 1136,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.rst_stream"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.rst_stream.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_stop_sending_name": "stop_sending",
            "frame_stop_sending_object": [
                {
                    "name": "id",
                    "type": "stream_id,"
                },
                {
                    "name": "err_code",
                    "type": "error_code"
                }
            ],
            "frame_stop_sending_module": null,
            "actions": [
                {
                    "line": 1168,
                    "action_name": "frame.stop_sending.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [
                            {
                                "line": 303,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    if _generating {\n"
                            },
                            {
                                "line": 304,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require scid = the_cid;\n"
                            },
                            {
                                "line": 305,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require f.id = 4;\n"
                            },
                            {
                                "line": 306,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    }\n"
                            }
                        ],
                        "after": [],
                        "around": [
                            {
                                "line": 1170,
                                "file": "quic_frame.ivy",
                                "instruction": "            # require (_generating  -> is_not_sleeping);\n"
                            },
                            {
                                "line": 1171,
                                "file": "quic_frame.ivy",
                                "instruction": "            \n"
                            },
                            {
                                "line": 1172,
                                "file": "quic_frame.ivy",
                                "instruction": "            # require (~is_not_sleeping -> ~_generating);\n"
                            },
                            {
                                "line": 1173,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1174,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);  # [6]\n"
                            },
                            {
                                "line": 1175,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1176,
                                "file": "quic_frame.ivy",
                                "instruction": "            if _generating  {\n"
                            },
                            {
                                "line": 1177,
                                "file": "quic_frame.ivy",
                                "instruction": "                # require ~need_sent_ack_eliciting_application_packet & ~need_sent_ack_eliciting_handshake_packet & ~need_sent_ack_eliciting_initial_packet;\n"
                            },
                            {
                                "line": 1178,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 1179,
                                "file": "quic_frame.ivy",
                                "instruction": "            require ~conn_closed(scid);  # [5]\n"
                            },
                            {
                                "line": 1180,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(scid) & connected_to(scid) = dcid;\n"
                            },
                            {
                                "line": 1181,
                                "file": "quic_frame.ivy",
                                "instruction": "            if ~_generating { # For tests\n"
                            },
                            {
                                "line": 1182,
                                "file": "quic_frame.ivy",
                                "instruction": "                require stream_seen(dcid,f.id);  # [8]\n"
                            },
                            {
                                "line": 1183,
                                "file": "quic_frame.ivy",
                                "instruction": "                require stream_id_allowed(dcid,f.id,e);  # [4]\n"
                            },
                            {
                                "line": 1184,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 1185,
                                "file": "quic_frame.ivy",
                                "instruction": "\t    ...\n"
                            },
                            {
                                "line": 1186,
                                "file": "quic_frame.ivy",
                                "instruction": "            if ~_generating {\n"
                            },
                            {
                                "line": 1187,
                                "file": "quic_frame.ivy",
                                "instruction": "                call handle_transport_error(f.err_code);\n"
                            },
                            {
                                "line": 1188,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 1189,
                                "file": "quic_frame.ivy",
                                "instruction": "            stream_seen(scid,f.id) := true;\n"
                            },
                            {
                                "line": 1190,
                                "file": "quic_frame.ivy",
                                "instruction": "            #receiving_ready := true;\n"
                            },
                            {
                                "line": 1191,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.stop_sending"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.stop_sending.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_stream_name": "stream",
            "frame_stream_object": [
                {
                    "name": "off",
                    "type": "bool,"
                },
                {
                    "name": "len",
                    "type": "bool,"
                },
                {
                    "name": "fin",
                    "type": "bool,"
                },
                {
                    "name": "id",
                    "type": "stream_id,"
                },
                {
                    "name": "offset",
                    "type": "stream_pos,"
                },
                {
                    "name": "length",
                    "type": "stream_pos,"
                },
                {
                    "name": "data",
                    "type": "stream_data"
                }
            ],
            "frame_stream_module": null,
            "actions": [
                {
                    "line": 926,
                    "action_name": "frame.stream.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [
                            {
                                "line": 243,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    if _generating {\n"
                            },
                            {
                                "line": 244,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require scid = the_cid;\n"
                            },
                            {
                                "line": 245,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        if ~zero_rtt_server_test | zero_rtt_sent {\n"
                            },
                            {
                                "line": 246,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "            require connected(the_cid) & dcid = connected_to(the_cid);\n"
                            },
                            {
                                "line": 247,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        };\n"
                            },
                            {
                                "line": 248,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require f.len & f.off; \n"
                            },
                            {
                                "line": 249,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require f.length > 0;\n"
                            },
                            {
                                "line": 250,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require f.offset = stream_length(dcid,f.id);\n"
                            },
                            {
                                "line": 251,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require f.length = (stream_app_data_end(dcid,f.id)) - f.offset;\n"
                            },
                            {
                                "line": 252,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    };\n"
                            },
                            {
                                "line": 253,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "\n"
                            }
                        ],
                        "after": [],
                        "around": [
                            {
                                "line": 928,
                                "file": "quic_frame.ivy",
                                "instruction": "            # if  e = quic_packet_type.one_rtt { #  & established_0rtt_keys(scid)\n"
                            },
                            {
                                "line": 929,
                                "file": "quic_frame.ivy",
                                "instruction": "            #     require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 930,
                                "file": "quic_frame.ivy",
                                "instruction": "            #     require e = quic_packet_type.one_rtt & established_1rtt_keys(scid); #  | e = quic_packet_type.zero_rtt & established_0rtt_keys(scid) \n"
                            },
                            {
                                "line": 931,
                                "file": "quic_frame.ivy",
                                "instruction": "            #     require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 932,
                                "file": "quic_frame.ivy",
                                "instruction": "            # } else {\n"
                            },
                            {
                                "line": 933,
                                "file": "quic_frame.ivy",
                                "instruction": "            #call show_enc_level(e);\n"
                            },
                            {
                                "line": 934,
                                "file": "quic_frame.ivy",
                                "instruction": "            #     require num_queued_frames_rtt(scid) > 0 -> e = queued_level_rtt(scid); # TODO\n"
                            },
                            {
                                "line": 935,
                                "file": "quic_frame.ivy",
                                "instruction": "            # };\n"
                            },
                            {
                                "line": 936,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 937,
                                "file": "quic_frame.ivy",
                                "instruction": "            if (~zero_rtt_allowed | zero_rtt_sent) & ~(e = quic_packet_type.zero_rtt) {\n"
                            },
                            {
                                "line": 938,
                                "file": "quic_frame.ivy",
                                "instruction": "                require tls_handshake_finished;\n"
                            },
                            {
                                "line": 939,
                                "file": "quic_frame.ivy",
                                "instruction": "                require (connected(dcid) & connected_to(dcid) = scid); # | (e = quic_packet_type.zero_rtt & established_0rtt_keys(scid)); #e = quic_packet_type.zero_rtt & \n"
                            },
                            {
                                "line": 940,
                                "file": "quic_frame.ivy",
                                "instruction": "                require (e = quic_packet_type.one_rtt & established_1rtt_keys(scid)); # | (e = quic_packet_type.zero_rtt & established_0rtt_keys(scid)); # | e = quic_packet_type.zero_rtt  | e = quic_packet_type.zero_rtt & established_0rtt_keys(scid)  \n"
                            },
                            {
                                "line": 941,
                                "file": "quic_frame.ivy",
                                "instruction": "            } else {\n"
                            },
                            {
                                "line": 942,
                                "file": "quic_frame.ivy",
                                "instruction": "                #require e = quic_packet_type.one_rtt | e = quic_packet_type.zero_rtt;\n"
                            },
                            {
                                "line": 943,
                                "file": "quic_frame.ivy",
                                "instruction": "                require (e = quic_packet_type.one_rtt & established_1rtt_keys(scid)) | (e = quic_packet_type.zero_rtt & ~established_1rtt_keys(scid));\n"
                            },
                            {
                                "line": 944,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 945,
                                "file": "quic_frame.ivy",
                                "instruction": "                #require dcid ~= the_cid;\n"
                            },
                            {
                                "line": 946,
                                "file": "quic_frame.ivy",
                                "instruction": "            #     # dcid := 2;\n"
                            },
                            {
                                "line": 947,
                                "file": "quic_frame.ivy",
                                "instruction": "            #     #require e = quic_packet_type.zero_rtt;\n"
                            },
                            {
                                "line": 948,
                                "file": "quic_frame.ivy",
                                "instruction": "            #     #require (connected(dcid) & connected_to(dcid) = scid) | (established_0rtt_keys(scid)); #e = quic_packet_type.zero_rtt & \n"
                            },
                            {
                                "line": 949,
                                "file": "quic_frame.ivy",
                                "instruction": "            #     #require (e = quic_packet_type.one_rtt & established_1rtt_keys(scid)) | (established_0rtt_keys(scid)); # | e = quic_packet_type.zero_rtt  | e = quic_packet_type.zero_rtt & established_0rtt_keys(scid)  \n"
                            },
                            {
                                "line": 950,
                                "file": "quic_frame.ivy",
                                "instruction": "            }\n"
                            },
                            {
                                "line": 951,
                                "file": "quic_frame.ivy",
                                "instruction": "            #require e = quic_packet_type.zero_rtt -> established_0rtt_keys(scid);  # [11]\n"
                            },
                            {
                                "line": 952,
                                "file": "quic_frame.ivy",
                                "instruction": "            if ~zero_rtt_allowed | zero_rtt_sent {\n"
                            },
                            {
                                "line": 953,
                                "file": "quic_frame.ivy",
                                "instruction": "                require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 954,
                                "file": "quic_frame.ivy",
                                "instruction": "            }\n"
                            },
                            {
                                "line": 955,
                                "file": "quic_frame.ivy",
                                "instruction": "            #require num_queued_frames_rtt(scid) > 0 -> e = queued_level_rtt(scid); # TODO\n"
                            },
                            {
                                "line": 956,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 957,
                                "file": "quic_frame.ivy",
                                "instruction": "            # [11] (e = quic_packet_type.zero_rtt & established_0rtt_keys(scid)\n"
                            },
                            {
                                "line": 958,
                                "file": "quic_frame.ivy",
                                "instruction": "            #require e = quic_packet_type.zero_rtt -> established_0rtt_keys(scid);  # [11]\n"
                            },
                            {
                                "line": 959,
                                "file": "quic_frame.ivy",
                                "instruction": "            #require e = quic_packet_type.one_rtt -> established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 960,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 961,
                                "file": "quic_frame.ivy",
                                "instruction": "            require ~conn_closed(scid);  # [8]\n"
                            },
                            {
                                "line": 962,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 963,
                                "file": "quic_frame.ivy",
                                "instruction": "            var offset := f.offset if f.off else 0;\n"
                            },
                            {
                                "line": 964,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 965,
                                "file": "quic_frame.ivy",
                                "instruction": "            require ((offset) + (f.length)) <= stream_app_data_end(dcid,f.id);\n"
                            },
                            {
                                "line": 966,
                                "file": "quic_frame.ivy",
                                "instruction": "    \n"
                            },
                            {
                                "line": 967,
                                "file": "quic_frame.ivy",
                                "instruction": "            #if is_stream_limit_test = false { #For stream limit test & pico vuln| ~_generating  not working\n"
                            },
                            {
                                "line": 968,
                                "file": "quic_frame.ivy",
                                "instruction": "            require f.data = stream_app_data(dcid,f.id).segment(offset,offset+f.length); # TODO\n"
                            },
                            {
                                "line": 969,
                                "file": "quic_frame.ivy",
                                "instruction": "            require f.fin <-> (stream_app_data_finished(dcid,f.id) & offset+f.length = stream_app_data_end(dcid,f.id));\n"
                            },
                            {
                                "line": 970,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 971,
                                "file": "quic_frame.ivy",
                                "instruction": "            var kind := get_stream_kind(f.id);\n"
                            },
                            {
                                "line": 972,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 973,
                                "file": "quic_frame.ivy",
                                "instruction": "            # Following assertion could fail because of packet\n"
                            },
                            {
                                "line": 974,
                                "file": "quic_frame.ivy",
                                "instruction": "            # re-ordering. QUESTION: what can we say?  require\n"
                            },
                            {
                                "line": 975,
                                "file": "quic_frame.ivy",
                                "instruction": "            # ~stream_reset(dcid,f.id); # [7]\n"
                            },
                            {
                                "line": 976,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 977,
                                "file": "quic_frame.ivy",
                                "instruction": "            if (~zero_rtt_allowed | zero_rtt_sent)  {  \n"
                            },
                            {
                                "line": 978,
                                "file": "quic_frame.ivy",
                                "instruction": "                require conn_seen(scid);  # [9]\n"
                            },
                            {
                                "line": 979,
                                "file": "quic_frame.ivy",
                                "instruction": "            }\n"
                            },
                            {
                                "line": 980,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 981,
                                "file": "quic_frame.ivy",
                                "instruction": "            if _generating  {\n"
                            },
                            {
                                "line": 982,
                                "file": "quic_frame.ivy",
                                "instruction": "                # require ~need_sent_ack_eliciting_application_packet & ~need_sent_ack_eliciting_handshake_packet & ~need_sent_ack_eliciting_initial_packet;\n"
                            },
                            {
                                "line": 983,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 984,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 985,
                                "file": "quic_frame.ivy",
                                "instruction": "            # & ~cid_mapped(f.scid)\n"
                            },
                            {
                                "line": 986,
                                "file": "quic_frame.ivy",
                                "instruction": "            #quinn bug: +-deadlock with new_connection_id\n"
                            },
                            {
                                "line": 987,
                                "file": "quic_frame.ivy",
                                "instruction": "            #require ((offset) + (f.length)) <= stream_max_data(dcid,f.id,e);  # [2]\n"
                            },
                            {
                                "line": 988,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 989,
                                "file": "quic_frame.ivy",
                                "instruction": "            \n"
                            },
                            {
                                "line": 990,
                                "file": "quic_frame.ivy",
                                "instruction": "            require stream_reset(dcid,f.id) ->\n"
                            },
                            {
                                "line": 991,
                                "file": "quic_frame.ivy",
                                "instruction": "                       ((offset) + (f.length)) <= stream_length(dcid,f.id);  # [13]\n"
                            },
                            {
                                "line": 992,
                                "file": "quic_frame.ivy",
                                "instruction": "\t        \n"
                            },
                            {
                                "line": 993,
                                "file": "quic_frame.ivy",
                                "instruction": "            #remove for stream limit test\n"
                            },
                            {
                                "line": 994,
                                "file": "quic_frame.ivy",
                                "instruction": "            if ~zero_rtt_allowed | zero_rtt_sent  { # | ~_generating\n"
                            },
                            {
                                "line": 995,
                                "file": "quic_frame.ivy",
                                "instruction": "                require stream_id_allowed(dcid,f.id,e);  # [6]\n"
                            },
                            {
                                "line": 996,
                                "file": "quic_frame.ivy",
                                "instruction": "            } \n"
                            },
                            {
                                "line": 997,
                                "file": "quic_frame.ivy",
                                "instruction": "            else if _generating {\n"
                            },
                            {
                                "line": 998,
                                "file": "quic_frame.ivy",
                                "instruction": "                require  f.id = 4; #  f.id = 8 |f.id = 4 |\n"
                            },
                            {
                                "line": 999,
                                "file": "quic_frame.ivy",
                                "instruction": "            }\n"
                            },
                            {
                                "line": 1000,
                                "file": "quic_frame.ivy",
                                "instruction": "\t        ...\n"
                            },
                            {
                                "line": 1001,
                                "file": "quic_frame.ivy",
                                "instruction": "            stream_seen(scid,f.id) := true;\n"
                            },
                            {
                                "line": 1002,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 1003,
                                "file": "quic_frame.ivy",
                                "instruction": "            var offset := f.offset if f.off else 0;\n"
                            },
                            {
                                "line": 1004,
                                "file": "quic_frame.ivy",
                                "instruction": "            var length := offset + f.length;\n"
                            },
                            {
                                "line": 1005,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 1006,
                                "file": "quic_frame.ivy",
                                "instruction": "            # require stream_finished(dcid,f.id) -> length <= stream_length(dcid,f.id);  # [5] deadlock client\n"
                            },
                            {
                                "line": 1007,
                                "file": "quic_frame.ivy",
                                "instruction": "            if stream_length(dcid,f.id) < length {\n"
                            },
                            {
                                "line": 1008,
                                "file": "quic_frame.ivy",
                                "instruction": "                conn_total_data(dcid) := conn_total_data(dcid) +\n"
                            },
                            {
                                "line": 1009,
                                "file": "quic_frame.ivy",
                                "instruction": "                                             (length - stream_length(dcid,f.id));  # [12]\n"
                            },
                            {
                                "line": 1010,
                                "file": "quic_frame.ivy",
                                "instruction": "                stream_length(dcid,f.id) := length\n"
                            },
                            {
                                "line": 1011,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 1012,
                                "file": "quic_frame.ivy",
                                "instruction": "            if f.fin {\n"
                            },
                            {
                                "line": 1013,
                                "file": "quic_frame.ivy",
                                "instruction": "                stream_finished(dcid,f.id) := true;\n"
                            },
                            {
                                "line": 1014,
                                "file": "quic_frame.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 1015,
                                "file": "quic_frame.ivy",
                                "instruction": "            if (~zero_rtt_allowed | zero_rtt_sent) & ~(e = quic_packet_type.zero_rtt) { #TODO\n"
                            },
                            {
                                "line": 1016,
                                "file": "quic_frame.ivy",
                                "instruction": "                call enqueue_frame(scid,f,e,false,seq_num);\n"
                            },
                            {
                                "line": 1017,
                                "file": "quic_frame.ivy",
                                "instruction": "            } else {\n"
                            },
                            {
                                "line": 1018,
                                "file": "quic_frame.ivy",
                                "instruction": "                first_zrtt_pkt := dcid;\n"
                            },
                            {
                                "line": 1019,
                                "file": "quic_frame.ivy",
                                "instruction": "                call enqueue_frame_rtt(scid,f,e,false);\n"
                            },
                            {
                                "line": 1020,
                                "file": "quic_frame.ivy",
                                "instruction": "            }\n"
                            },
                            {
                                "line": 1021,
                                "file": "quic_frame.ivy",
                                "instruction": "        }\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.stream"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": true,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.stream.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_stream_data_blocked_name": "stream_data_blocked",
            "frame_stream_data_blocked_object": [
                {
                    "name": "id",
                    "type": "stream_id,"
                },
                {
                    "name": "pos",
                    "type": "stream_pos"
                }
            ],
            "frame_stream_data_blocked_module": null,
            "actions": [
                {
                    "line": 1482,
                    "action_name": "frame.stream_data_blocked.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [
                            {
                                "line": 372,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    if _generating {\n"
                            },
                            {
                                "line": 373,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require scid = the_cid;\n"
                            },
                            {
                                "line": 374,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "        require f.id = 4;\n"
                            },
                            {
                                "line": 375,
                                "file": "ivy_quic_client_behavior.ivy",
                                "instruction": "    }\n"
                            }
                        ],
                        "after": [],
                        "around": [
                            {
                                "line": 1483,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1484,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 1485,
                                "file": "quic_frame.ivy",
                                "instruction": "             if _generating  {\n"
                            },
                            {
                                "line": 1486,
                                "file": "quic_frame.ivy",
                                "instruction": "# require ~need_sent_ack_eliciting_application_packet & ~need_sent_ack_eliciting_handshake_packet & ~need_sent_ack_eliciting_initial_packet;\n"
                            },
                            {
                                "line": 1487,
                                "file": "quic_frame.ivy",
                                "instruction": "};\n"
                            },
                            {
                                "line": 1488,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1489,
                                "file": "quic_frame.ivy",
                                "instruction": "\t    ...\n"
                            },
                            {
                                "line": 1490,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.stream_data_blocked"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.stream_data_blocked.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_streams_blocked_name": "streams_blocked",
            "frame_streams_blocked_object": [
                {
                    "name": "id",
                    "type": "cid"
                }
            ],
            "frame_streams_blocked_module": null,
            "actions": [
                {
                    "line": 1548,
                    "action_name": "frame.streams_blocked.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": [
                            {
                                "line": 1549,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1550,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 1551,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1552,
                                "file": "quic_frame.ivy",
                                "instruction": "             if _generating  {\n"
                            },
                            {
                                "line": 1553,
                                "file": "quic_frame.ivy",
                                "instruction": "# require ~need_sent_ack_eliciting_application_packet & ~need_sent_ack_eliciting_handshake_packet & ~need_sent_ack_eliciting_initial_packet;\n"
                            },
                            {
                                "line": 1554,
                                "file": "quic_frame.ivy",
                                "instruction": "};\n"
                            },
                            {
                                "line": 1555,
                                "file": "quic_frame.ivy",
                                "instruction": "            #  some_max_streams := true;\n"
                            },
                            {
                                "line": 1556,
                                "file": "quic_frame.ivy",
                                "instruction": "            #  ms := f.id; #TODO not finished, should distinguish uni and bidi\n"
                            },
                            {
                                "line": 1557,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 1558,
                                "file": "quic_frame.ivy",
                                "instruction": "\t    ...\n"
                            },
                            {
                                "line": 1559,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.streams_blocked"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.streams_blocked.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_streams_blocked_bidi_name": "streams_blocked_bidi",
            "frame_streams_blocked_bidi_object": [
                {
                    "name": "id",
                    "type": "cid"
                }
            ],
            "frame_streams_blocked_bidi_module": null,
            "actions": [
                {
                    "line": 1567,
                    "action_name": "frame.streams_blocked_bidi.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": [
                            {
                                "line": 1568,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1569,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 1570,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1571,
                                "file": "quic_frame.ivy",
                                "instruction": "             if _generating  {\n"
                            },
                            {
                                "line": 1572,
                                "file": "quic_frame.ivy",
                                "instruction": "# require ~need_sent_ack_eliciting_application_packet & ~need_sent_ack_eliciting_handshake_packet & ~need_sent_ack_eliciting_initial_packet;\n"
                            },
                            {
                                "line": 1573,
                                "file": "quic_frame.ivy",
                                "instruction": "};\n"
                            },
                            {
                                "line": 1574,
                                "file": "quic_frame.ivy",
                                "instruction": "            #  some_max_streams := true;\n"
                            },
                            {
                                "line": 1575,
                                "file": "quic_frame.ivy",
                                "instruction": "            #  ms := f.id; #TODO not finished, should distinguish uni and bidi\n"
                            },
                            {
                                "line": 1576,
                                "file": "quic_frame.ivy",
                                "instruction": "\n"
                            },
                            {
                                "line": 1577,
                                "file": "quic_frame.ivy",
                                "instruction": "\t    ...\n"
                            },
                            {
                                "line": 1578,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.streams_blocked_bidi"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.streams_blocked_bidi.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_unknown_frame_name": "unknown_frame",
            "frame_unknown_frame_object": [],
            "frame_unknown_frame_module": null,
            "actions": [
                {
                    "line": 1667,
                    "action_name": "frame.unknown_frame.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": [
                            {
                                "line": 1668,
                                "file": "quic_frame.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1669,
                                "file": "quic_frame.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1670,
                                "file": "quic_frame.ivy",
                                "instruction": "            #volontary at any time or not ?\n"
                            },
                            {
                                "line": 1671,
                                "file": "quic_frame.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);            \n"
                            },
                            {
                                "line": 1672,
                                "file": "quic_frame.ivy",
                                "instruction": "            #require e ~= quic_packet_type.initial & e ~= quic_packet_type.handshake;\n"
                            },
                            {
                                "line": 1673,
                                "file": "quic_frame.ivy",
                                "instruction": "            #require e ~= quic_packet_type.retry & e ~= quic_packet_type.version_negociation;\n"
                            },
                            {
                                "line": 1674,
                                "file": "quic_frame.ivy",
                                "instruction": "            require ~conn_closed(scid); \n"
                            },
                            {
                                "line": 1675,
                                "file": "quic_frame.ivy",
                                "instruction": "            ...\n"
                            },
                            {
                                "line": 1676,
                                "file": "quic_frame.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.unknown_frame"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.unknown_frame.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "actions": {
                "line": 700,
                "action_name": "is_generating",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "b",
                        "type": "bool"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 816,
                "action_name": "show_ack_eliciting_threshold_current_val",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "val",
                        "type": "stream_pos"
                    }
                ],
                "called_from": [
                    {
                        "caller_func": "show_ack_eliciting_threshold_current_val",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "show_ack_eliciting_threshold_current_val",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "show_ack_eliciting_threshold_val",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "show_ack_eliciting_threshold_val",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "show_ack_generated;",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "show_ack_generated;",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "on_ack_received",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "show_ack_eliciting_threshold_current_val",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "show_ack_eliciting_threshold_current_val",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "show_ack_eliciting_threshold_val",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "show_ack_eliciting_threshold_val",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "show_ack_generated;",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "show_ack_generated;",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "on_ack_received",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 817,
                "action_name": "show_ack_eliciting_threshold_val",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "val",
                        "type": "stream_pos"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 815,
                "action_name": "show_ack_generated",
                "action_return": null,
                "exported": false,
                "action_parameters": null,
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 2184,
                "action_name": "show_pkt_num",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "p",
                        "type": "pkt_num"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 2187,
                "action_name": "show_seqnum",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "p",
                        "type": "pkt_num"
                    }
                ],
                "called_from": [
                    {
                        "caller_func": "show_seqnum",
                        "component": "quic_infer.ivy"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 2186,
                "action_name": "show_seqnum_to_streampos",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "p",
                        "type": "stream_pos"
                    }
                ],
                "called_from": [
                    {
                        "caller_func": "show_seqnum_to_streampos",
                        "component": "quic_loss_recovery.ivy"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 2087,
                "action_name": "stream_id_allowed",
                "implementation": [
                    {
                        "line": 2087,
                        "file": "quic_frame.ivy",
                        "instruction": "    ok := false;\n"
                    },
                    {
                        "line": 2088,
                        "file": "quic_frame.ivy",
                        "instruction": "    var tp := trans_params(dcid);\n"
                    },
                    {
                        "line": 2089,
                        "file": "quic_frame.ivy",
                        "instruction": "    var kind := get_stream_kind(id);\n"
                    },
                    {
                        "line": 2090,
                        "file": "quic_frame.ivy",
                        "instruction": "    var idhi : stream_id := id / 4;\n"
                    },
                    {
                        "line": 2091,
                        "file": "quic_frame.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 2092,
                        "file": "quic_frame.ivy",
                        "instruction": "    # if (zero_rtt_allowed & ~zero_rtt_sent) | e = quic_packet_type.zero_rtt { # TODO\n"
                    },
                    {
                        "line": 2093,
                        "file": "quic_frame.ivy",
                        "instruction": "    #     ok := idhi <= 20;\n"
                    },
                    {
                        "line": 2094,
                        "file": "quic_frame.ivy",
                        "instruction": "    # }\n"
                    },
                    {
                        "line": 2095,
                        "file": "quic_frame.ivy",
                        "instruction": "    # else \n"
                    },
                    {
                        "line": 2096,
                        "file": "quic_frame.ivy",
                        "instruction": "    if ~(is_client(dcid) <-> get_stream_role(id) = role.client) {  # if stream remotely initiated\n"
                    },
                    {
                        "line": 2097,
                        "file": "quic_frame.ivy",
                        "instruction": "        if kind = unidir {\n"
                    },
                    {
                        "line": 2098,
                        "file": "quic_frame.ivy",
                        "instruction": "            if initial_max_stream_id_uni.is_set(tp) {\n"
                    },
                    {
                        "line": 2099,
                        "file": "quic_frame.ivy",
                        "instruction": "                ok := idhi < (initial_max_stream_id_uni.value(tp).stream_id_16)  # [3]\n"
                    },
                    {
                        "line": 2100,
                        "file": "quic_frame.ivy",
                        "instruction": "            }\n"
                    },
                    {
                        "line": 2101,
                        "file": "quic_frame.ivy",
                        "instruction": "        } else {\n"
                    },
                    {
                        "line": 2102,
                        "file": "quic_frame.ivy",
                        "instruction": "            if initial_max_stream_id_bidi.is_set(tp) {\n"
                    },
                    {
                        "line": 2103,
                        "file": "quic_frame.ivy",
                        "instruction": "                ok := idhi < (initial_max_stream_id_bidi.value(tp).stream_id_16);  # [4]\n"
                    },
                    {
                        "line": 2104,
                        "file": "quic_frame.ivy",
                        "instruction": "            }\n"
                    },
                    {
                        "line": 2105,
                        "file": "quic_frame.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 2106,
                        "file": "quic_frame.ivy",
                        "instruction": "        ok := ok | max_stream_set(dcid,kind) & idhi < max_stream(dcid,kind);\n"
                    },
                    {
                        "line": 2107,
                        "file": "quic_frame.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 2108,
                        "file": "quic_frame.ivy",
                        "instruction": "    else  {\n"
                    },
                    {
                        "line": 2109,
                        "file": "quic_frame.ivy",
                        "instruction": "        ok := stream_seen(dcid, id); # TODO: locally initiated streams must have been seen!\n"
                    },
                    {
                        "line": 2110,
                        "file": "quic_frame.ivy",
                        "instruction": "    }\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "ok",
                    "type": "bool"
                },
                "action_parameters": [
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "id",
                        "type": "stream_id"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "functions": [
                {
                    "name": "max_stream_data_val(C:cid,S:stream_id) : stream_pos\n",
                    "comment": "",
                    "line": 531,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "max_data_val(C:cid) : stream_pos\n",
                    "comment": "",
                    "line": 533,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "stream_length(C:cid,S:stream_id) : stream_pos\n",
                    "comment": "",
                    "line": 535,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "max_stream(C:cid,K:stream_kind) : stream_id \n",
                    "comment": "",
                    "line": 539,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "queued_frames(C:cid) : frame.arr\n",
                    "comment": "",
                    "line": 541,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "queued_frames_rtt(C:cid) : frame.arr\n",
                    "comment": "",
                    "line": 542,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "queued_level(C:cid) : quic_packet_type\n",
                    "comment": "",
                    "line": 543,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "queued_level_rtt(C:cid) : quic_packet_type\n",
                    "comment": "",
                    "line": 544,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "num_queued_frames(C:cid) : frame.idx\n",
                    "comment": "",
                    "line": 549,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "num_queued_frames_rtt(C:cid) : frame.idx\n",
                    "comment": "",
                    "line": 550,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "conn_total_data(C:cid) : stream_pos\n",
                    "comment": "",
                    "line": 553,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "queued_level_type(C:cid,T:quic_packet_type) : frame.arr\n",
                    "comment": "",
                    "line": 560,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "max_rtp_num(C:cid) : cid_seq\n",
                    "comment": "",
                    "line": 562,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "count_stream_frame(I:stream_id,O:stream_pos, \n",
                    "comment": "",
                    "line": 564,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "count_reset_frame(I:stream_id,E:error_code,O:stream_pos) : stream_pos\n",
                    "comment": "",
                    "line": 568,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "count_sdb_frame(I:stream_id,O:stream_pos) : stream_pos\n",
                    "comment": "",
                    "line": 571,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "first_ack_freq_received : bool\n",
                    "comment": "",
                    "line": 574,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "largest_unacked : pkt_num\n",
                    "comment": "",
                    "line": 576,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "largest_acked   : pkt_num\n",
                    "comment": "",
                    "line": 578,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "unreported_missing : pkt_num\n",
                    "comment": "",
                    "line": 580,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "last_ack_freq_seq(C:cid) : pkt_num\n",
                    "comment": "",
                    "line": 581,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "count_newcid_frame(I:cid_seq,O:cid_seq, L:cid_length,D:cid,T:reset_token) : stream_pos\n",
                    "comment": "",
                    "line": 583,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "count_rcid_frame(I:cid_seq) : stream_pos\n",
                    "comment": "",
                    "line": 585,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "last_cid_seq(C:cid):cid_seq\n",
                    "comment": "",
                    "line": 593,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "first_zrtt_pkt : cid\n",
                    "comment": "",
                    "line": 595,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "ack_eliciting_threshold_val(C:cid) : stream_pos\n",
                    "comment": "",
                    "line": 615,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "ack_eliciting_threshold_current_val(C:cid) : stream_pos\n",
                    "comment": "",
                    "line": 616,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "ack_out_of_order_val(C:cid) : stream_pos\n",
                    "comment": "",
                    "line": 617,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "ack_out_of_order_current_val(C:cid) : stream_pos\n",
                    "comment": "",
                    "line": 618,
                    "file": "quic_frame.ivy"
                }
            ],
            "relations": [
                {
                    "name": "stream_seen(C:cid,S:stream_id)\n",
                    "comment": "",
                    "line": 530,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "max_stream_data_set(C:cid,S:stream_id)\n",
                    "comment": "",
                    "line": 532,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "max_data_set(C:cid)\n",
                    "comment": "",
                    "line": 534,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "stream_finished(C:cid,S:stream_id)\n",
                    "comment": "",
                    "line": 536,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "stream_reset(C:cid,S:stream_id)\n",
                    "comment": "",
                    "line": 537,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "max_stream_set(C:cid,K:stream_kind)\n",
                    "comment": "",
                    "line": 538,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "queued_non_probing(C:cid)\n",
                    "comment": "",
                    "line": 545,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "queued_non_ack(C:cid)\n",
                    "comment": "",
                    "line": 546,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "queued_challenge(C:cid)\n",
                    "comment": "",
                    "line": 547,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "queued_close(C:cid)\n",
                    "comment": "",
                    "line": 548,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "path_challenge_pending(C:cid,D:stream_data)\n",
                    "comment": "",
                    "line": 551,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "path_challenge_sent(C:cid)\n",
                    "comment": "",
                    "line": 552,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "queued_ack_eliciting(C:cid)\n",
                    "comment": "",
                    "line": 555,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "queued_ack_eliciting_pkt(C:stream_pos) ",
                    "comment": " TODO",
                    "line": 556,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "send_retire_cid(C:cid)\n",
                    "comment": "",
                    "line": 561,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "stream_frame_restransmitted(S:stream_id)\n",
                    "comment": "",
                    "line": 566,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "reset_frame_restransmitted(S:stream_id)\n",
                    "comment": "",
                    "line": 569,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "sdb_frame_restransmitted(S:stream_id)\n",
                    "comment": "",
                    "line": 572,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "connection_closed \n",
                    "comment": "",
                    "line": 587,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "handshake_done_send ",
                    "comment": " TODO add src-endpoints",
                    "line": 589,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "handshake_done_recv ",
                    "comment": " TODO add src-endpoints",
                    "line": 591,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "zrtt_pkt_update \n",
                    "comment": "",
                    "line": 596,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "is_stream_limit_test\n",
                    "comment": "",
                    "line": 599,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "is_crypto_limit_test\n",
                    "comment": "",
                    "line": 600,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "stop_sending_in_bad_state\n",
                    "comment": "",
                    "line": 603,
                    "file": "quic_frame.ivy"
                },
                {
                    "name": "newly_acked(S:stream_pos) \n",
                    "comment": "",
                    "line": 605,
                    "file": "quic_frame.ivy"
                }
            ]
        }
    ],
    "quic_application.ivy": [
        {
            "actions": {
                "line": 53,
                "action_name": "app_send_event",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [
                        {
                            "line": 145,
                            "file": "quic_application.ivy",
                            "instruction": "    # call show_app_send_event(data);\n"
                        },
                        {
                            "line": 146,
                            "file": "quic_application.ivy",
                            "instruction": "    var send_end := pos + data.end;\n"
                        },
                        {
                            "line": 147,
                            "file": "quic_application.ivy",
                            "instruction": "    require ~(send_end > stream_app_data_end(dcid,s) & stream_app_data_finished(dcid,s));  # [4]\n"
                        },
                        {
                            "line": 148,
                            "file": "quic_application.ivy",
                            "instruction": "    var end := stream_app_data(dcid,s).end;\n"
                        },
                        {
                            "line": 149,
                            "file": "quic_application.ivy",
                            "instruction": "    if end < send_end {\n"
                        },
                        {
                            "line": 150,
                            "file": "quic_application.ivy",
                            "instruction": "        end := send_end\n"
                        },
                        {
                            "line": 151,
                            "file": "quic_application.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 152,
                            "file": "quic_application.ivy",
                            "instruction": "    stream_app_data(dcid,s) := stream_app_data(dcid,s).resize(end,0);  # [1]\n"
                        },
                        {
                            "line": 153,
                            "file": "quic_application.ivy",
                            "instruction": "    var idx := data.begin;\n"
                        },
                        {
                            "line": 154,
                            "file": "quic_application.ivy",
                            "instruction": "    while idx < data.end {\n"
                        },
                        {
                            "line": 155,
                            "file": "quic_application.ivy",
                            "instruction": "        var val := stream_app_data(dcid,s).value(pos + idx);\n"
                        },
                        {
                            "line": 156,
                            "file": "quic_application.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 157,
                            "file": "quic_application.ivy",
                            "instruction": "        # TODO: using zero as a \"null\" value is not correct here.\n"
                        },
                        {
                            "line": 158,
                            "file": "quic_application.ivy",
                            "instruction": "        # We need a data structure to capture the known intervals!\n"
                        },
                        {
                            "line": 159,
                            "file": "quic_application.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 160,
                            "file": "quic_application.ivy",
                            "instruction": "        require val ~= 0 ->  data.value(idx) = val;  # [2]\n"
                        },
                        {
                            "line": 161,
                            "file": "quic_application.ivy",
                            "instruction": "\t    stream_app_data(dcid,s) := stream_app_data(dcid,s).set(pos+idx,data.value(idx));\n"
                        },
                        {
                            "line": 162,
                            "file": "quic_application.ivy",
                            "instruction": "\t    idx := idx.next\n"
                        },
                        {
                            "line": 163,
                            "file": "quic_application.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 164,
                            "file": "quic_application.ivy",
                            "instruction": "    stream_app_data_end(dcid,s) := end;  # [1]\n"
                        },
                        {
                            "line": 165,
                            "file": "quic_application.ivy",
                            "instruction": "    if close {\n"
                        },
                        {
                            "line": 166,
                            "file": "quic_application.ivy",
                            "instruction": "        stream_app_data_finished(dcid,s) := true;  # [3]\n"
                        },
                        {
                            "line": 167,
                            "file": "quic_application.ivy",
                            "instruction": "    }\n"
                        }
                    ],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "s",
                        "type": "stream_id"
                    },
                    {
                        "name": "data",
                        "type": "stream_data"
                    },
                    {
                        "name": "pos",
                        "type": "stream_pos"
                    },
                    {
                        "name": "close",
                        "type": "bool"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "app_send_event",
                        "component": "quic_infer.ivy"
                    },
                    {
                        "caller_func": "app_send_event",
                        "component": "quic_infer.ivy"
                    },
                    {
                        "caller_func": "app_send_event",
                        "component": "ivy_quic_client_behavior.ivy"
                    },
                    {
                        "caller_func": "app_send_event",
                        "component": "ivy_quic_client_behavior.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [
                        {
                            "caller_func": "infer_tls_events",
                            "component": "quic_infer.ivy"
                        },
                        {
                            "caller_func": "infer_tls_events_0rtt",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions": [
                        {
                            "line": 148,
                            "file": "quic_application.ivy",
                            "assertion": "require ~(send_end > stream_app_data_end(dcid,s) & stream_app_data_finished(dcid,s));  # [4]\n"
                        },
                        {
                            "line": 161,
                            "file": "quic_application.ivy",
                            "assertion": "require val ~= 0 ->  data.value(idx) = val;  # [2]\n"
                        },
                        {
                            "line": 1951,
                            "file": "quic_frame.ivy",
                            "assertion": "require tls_handshake_finished;\n"
                        },
                        {
                            "line": 1953,
                            "file": "quic_frame.ivy",
                            "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 1954,
                            "file": "quic_frame.ivy",
                            "assertion": "require (e = quic_packet_type.one_rtt) & established_1rtt_keys(scid); # | e = quic_packet_type.zero_rtt  | e = quic_packet_type.zero_rtt & established_0rtt_keys(scid) \n"
                        },
                        {
                            "line": 1955,
                            "file": "quic_frame.ivy",
                            "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                        },
                        {
                            "line": 1956,
                            "file": "quic_frame.ivy",
                            "assertion": "require ~conn_closed(scid);  # [8]\n"
                        },
                        {
                            "line": 1957,
                            "file": "quic_frame.ivy",
                            "assertion": "require conn_seen(scid);  # [9]\n"
                        },
                        {
                            "line": 1051,
                            "file": "quic_frame.ivy",
                            "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                        },
                        {
                            "line": 1056,
                            "file": "quic_frame.ivy",
                            "assertion": "require ~conn_closed(scid);  # [1]\n"
                        },
                        {
                            "line": 1058,
                            "file": "quic_frame.ivy",
                            "assertion": "require e ~= quic_packet_type.zero_rtt;  # [4]\n"
                        },
                        {
                            "line": 1061,
                            "file": "quic_frame.ivy",
                            "assertion": "require ((f.offset) + (f.length)) <= crypto_data_end(scid,e);  # [2]\n"
                        },
                        {
                            "line": 1062,
                            "file": "quic_frame.ivy",
                            "assertion": "require f.data = crypto_data(scid,e).segment(f.offset,f.offset+f.length);  # [2]\n"
                        },
                        {
                            "line": 261,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require scid = the_cid;\n"
                        },
                        {
                            "line": 262,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require f.length > 0;\n"
                        },
                        {
                            "line": 263,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require f.offset = crypto_length(scid,e);\n"
                        },
                        {
                            "line": 264,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require f.length = (crypto_data_end(scid,e)) - f.offset;\n"
                        },
                        {
                            "line": 1119,
                            "file": "quic_frame.ivy",
                            "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 1120,
                            "file": "quic_frame.ivy",
                            "assertion": "require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);  # [6]\n"
                        },
                        {
                            "line": 1121,
                            "file": "quic_frame.ivy",
                            "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                        },
                        {
                            "line": 1122,
                            "file": "quic_frame.ivy",
                            "assertion": "require ~conn_closed(scid);  # [5]\n"
                        },
                        {
                            "line": 1123,
                            "file": "quic_frame.ivy",
                            "assertion": "require connected(scid) & connected_to(scid) = dcid;\n"
                        },
                        {
                            "line": 1124,
                            "file": "quic_frame.ivy",
                            "assertion": "require stream_length(dcid,f.id) <= f.final_offset;  # [1]\n"
                        },
                        {
                            "line": 1128,
                            "file": "quic_frame.ivy",
                            "assertion": "require (stream_reset(dcid,f.id) | stream_finished(dcid,f.id)) -> stream_length(dcid,f.id) = f.final_offset;\n"
                        },
                        {
                            "line": 1132,
                            "file": "quic_frame.ivy",
                            "assertion": "require stream_id_allowed(dcid,f.id,e);  # [4]\n"
                        },
                        {
                            "line": 285,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require scid = the_cid;\n"
                        },
                        {
                            "line": 286,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require f.id = 4;\n"
                        }
                    ]
                },
                "assertions_as_assumption": {
                    "called_from": [
                        {
                            "caller_func": "client_send_event",
                            "component": "ivy_quic_client_behavior.ivy"
                        }
                    ],
                    "assertions": [
                        {
                            "line": 148,
                            "file": "quic_application.ivy",
                            "assertion": "require ~(send_end > stream_app_data_end(dcid,s) & stream_app_data_finished(dcid,s));  # [4]\n"
                        },
                        {
                            "line": 161,
                            "file": "quic_application.ivy",
                            "assertion": "require val ~= 0 ->  data.value(idx) = val;  # [2]\n"
                        }
                    ]
                }
            }
        },
        {
            "actions": {
                "line": 32,
                "action_name": "app_server_open_event",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": [
                        {
                            "line": 100,
                            "file": "quic_application.ivy",
                            "instruction": "    require conn_requested(dst,src,dcid);  # [1] \n"
                        },
                        {
                            "line": 101,
                            "file": "quic_application.ivy",
                            "instruction": "    require ~connected(dcid) & ~connected(scid);  # [2]\n"
                        },
                        {
                            "line": 102,
                            "file": "quic_application.ivy",
                            "instruction": "    ...\n"
                        },
                        {
                            "line": 103,
                            "file": "quic_application.ivy",
                            "instruction": "    call map_cids(scid,dcid);\n"
                        },
                        {
                            "line": 104,
                            "file": "quic_application.ivy",
                            "instruction": "    call map_cids(dcid,scid);\n"
                        },
                        {
                            "line": 105,
                            "file": "quic_application.ivy",
                            "instruction": "    ack_credit(scid) := ack_credit(scid) + 1;\n"
                        }
                    ]
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "app_server_open_event",
                        "component": "quic_infer.ivy"
                    },
                    {
                        "caller_func": "app_server_open_event",
                        "component": "quic_infer.ivy"
                    },
                    {
                        "caller_func": "app_server_open_event",
                        "component": "quic_infer.ivy"
                    },
                    {
                        "caller_func": "app_server_open_event",
                        "component": "quic_infer.ivy"
                    },
                    {
                        "caller_func": "app_server_open_event",
                        "component": "quic_endpoint.ivy"
                    },
                    {
                        "caller_func": "app_server_open_event",
                        "component": "quic_endpoint.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [
                        {
                            "caller_func": "infer_tls_events",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 109,
                "action_name": "map_cids",
                "implementation": [
                    {
                        "line": 109,
                        "file": "quic_application.ivy",
                        "instruction": "    used_cid(dcid) := true;\n"
                    },
                    {
                        "line": 110,
                        "file": "quic_application.ivy",
                        "instruction": "    connected(dcid) := true;\n"
                    },
                    {
                        "line": 111,
                        "file": "quic_application.ivy",
                        "instruction": "    connected_to(dcid) := scid\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "map_cids",
                        "component": "quic_application.ivy"
                    },
                    {
                        "caller_func": "map_cids",
                        "component": "quic_application.ivy"
                    },
                    {
                        "caller_func": "map_cids",
                        "component": "quic_application.ivy"
                    },
                    {
                        "caller_func": "map_cids",
                        "component": "quic_application.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "functions": [
                {
                    "name": "stream_app_data(C:cid,S:stream_id) : stream_data\n",
                    "comment": "",
                    "line": 77,
                    "file": "quic_application.ivy"
                },
                {
                    "name": "stream_app_data_end(C:cid,S:stream_id) : stream_pos\n",
                    "comment": "",
                    "line": 78,
                    "file": "quic_application.ivy"
                },
                {
                    "name": "stream_app_pos(C:cid,S:stream_id) : stream_pos\n",
                    "comment": "",
                    "line": 79,
                    "file": "quic_application.ivy"
                },
                {
                    "name": "stream_app_data_finished(C:cid,S:stream_id) : bool\n",
                    "comment": "",
                    "line": 80,
                    "file": "quic_application.ivy"
                }
            ],
            "relations": [
                {
                    "name": "used_cid(C:cid)\n",
                    "comment": "",
                    "line": 119,
                    "file": "quic_application.ivy"
                }
            ]
        }
    ],
    "quic_infer.ivy": [
        {
            "actions": {
                "line": 205,
                "action_name": "app_server_open_event_0rtt",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    }
                ],
                "called_from": [
                    {
                        "caller_func": "app_server_open_event_0rtt",
                        "component": "quic_infer.ivy"
                    },
                    {
                        "caller_func": "app_server_open_event_0rtt",
                        "component": "quic_infer.ivy"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 204,
                "action_name": "app_server_open_event_1rtt",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    }
                ],
                "called_from": [
                    {
                        "caller_func": "app_server_open_event_1rtt",
                        "component": "quic_infer.ivy"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 206,
                "action_name": "app_server_open_event_retry",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    }
                ],
                "called_from": [
                    {
                        "caller_func": "app_server_open_event_retry",
                        "component": "quic_infer.ivy"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 207,
                "action_name": "app_server_open_event_vn",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    }
                ],
                "called_from": [
                    {
                        "caller_func": "app_server_open_event_vn",
                        "component": "quic_infer.ivy"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 208,
                "action_name": "infer_frame",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "f",
                        "type": "frame"
                    }
                ],
                "called_from": [
                    {
                        "caller_func": "infer_frame",
                        "component": "quic_infer.ivy"
                    },
                    {
                        "caller_func": "infer_frame",
                        "component": "quic_infer.ivy"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 29,
                "action_name": "infer_tls_events",
                "implementation": [
                    {
                        "line": 24,
                        "file": "quic_infer.ivy",
                        "instruction": "    #call infer_tls;\n"
                    },
                    {
                        "line": 25,
                        "file": "quic_infer.ivy",
                        "instruction": "    # Stream frames on id 0 indicate that a `tls_send_event` has occurred.\n"
                    },
                    {
                        "line": 26,
                        "file": "quic_infer.ivy",
                        "instruction": "    # TODO: ignore duplicate frames.\n"
                    },
                    {
                        "line": 27,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 28,
                        "file": "quic_infer.ivy",
                        "instruction": "    var scid := pkt.src_cid;\n"
                    },
                    {
                        "line": 29,
                        "file": "quic_infer.ivy",
                        "instruction": "    var dcid := pkt.dst_cid;\n"
                    },
                    {
                        "line": 30,
                        "file": "quic_infer.ivy",
                        "instruction": "    var sq   := pkt.seq_num;\n"
                    },
                    {
                        "line": 31,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 32,
                        "file": "quic_infer.ivy",
                        "instruction": "    call show_seqnum(sq);\n"
                    },
                    {
                        "line": 33,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 34,
                        "file": "quic_infer.ivy",
                        "instruction": "    # On short headers, the scid is not given, so we use the recorded value\n"
                    },
                    {
                        "line": 35,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 36,
                        "file": "quic_infer.ivy",
                        "instruction": "    if ~pkt.long {\n"
                    },
                    {
                        "line": 37,
                        "file": "quic_infer.ivy",
                        "instruction": "        scid := connected_to(dcid)\n"
                    },
                    {
                        "line": 38,
                        "file": "quic_infer.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 39,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 40,
                        "file": "quic_infer.ivy",
                        "instruction": "    # If this is an initial client request, we infer the nonce choice\n"
                    },
                    {
                        "line": 41,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 42,
                        "file": "quic_infer.ivy",
                        "instruction": "    if pkt.ptype = quic_packet_type.initial & ~conn_seen(dcid) & ~negocation_of_version(src) &  ~version_negociated {\n"
                    },
                    {
                        "line": 43,
                        "file": "quic_infer.ivy",
                        "instruction": "        nonce_cid(scid) := dcid;\n"
                    },
                    {
                        "line": 44,
                        "file": "quic_infer.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 45,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 46,
                        "file": "quic_infer.ivy",
                        "instruction": "    if pkt.ptype = quic_packet_type.initial & (retry_sent(scid) | version_negociated | negocation_of_version(src)) {\n"
                    },
                    {
                        "line": 47,
                        "file": "quic_infer.ivy",
                        "instruction": "        nonce_cid(scid) := dcid;\n"
                    },
                    {
                        "line": 48,
                        "file": "quic_infer.ivy",
                        "instruction": "        conn_seen(dcid) := false;\n"
                    },
                    {
                        "line": 49,
                        "file": "quic_infer.ivy",
                        "instruction": "        # nonce_cid(pkt.dst_cid) := pkt.src_cid;\n"
                    },
                    {
                        "line": 50,
                        "file": "quic_infer.ivy",
                        "instruction": "        # call show_cid(pkt.src_cid);\n"
                    },
                    {
                        "line": 51,
                        "file": "quic_infer.ivy",
                        "instruction": "        # call show_cid(pkt.dst_cid);\n"
                    },
                    {
                        "line": 52,
                        "file": "quic_infer.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 53,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 54,
                        "file": "quic_infer.ivy",
                        "instruction": "    var e := pkt.ptype;\n"
                    },
                    {
                        "line": 55,
                        "file": "quic_infer.ivy",
                        "instruction": "    \n"
                    },
                    {
                        "line": 56,
                        "file": "quic_infer.ivy",
                        "instruction": "    call set_encryption_level(src,scid,e);\n"
                    },
                    {
                        "line": 57,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 58,
                        "file": "quic_infer.ivy",
                        "instruction": "    # infer sender of packet has established keys for the packet\n"
                    },
                    {
                        "line": 59,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 60,
                        "file": "quic_infer.ivy",
                        "instruction": "    call tls_keys_established_event(scid,e);\n"
                    },
                    {
                        "line": 61,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 62,
                        "file": "quic_infer.ivy",
                        "instruction": "    # Infer an app_server_open_event.\n"
                    },
                    {
                        "line": 63,
                        "file": "quic_infer.ivy",
                        "instruction": "    if conn_requested(dst,src,dcid) & ~connected(dcid) & ~connected(scid) { # & ~negocation_of_version &  ~version_negociated \n"
                    },
                    {
                        "line": 64,
                        "file": "quic_infer.ivy",
                        "instruction": "        call app_server_open_event(src,dst,scid,dcid);\n"
                    },
                    {
                        "line": 65,
                        "file": "quic_infer.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 66,
                        "file": "quic_infer.ivy",
                        "instruction": "    # call show_generating(_generating);\n"
                    },
                    {
                        "line": 67,
                        "file": "quic_infer.ivy",
                        "instruction": "    var idx := pkt.payload.begin;\n"
                    },
                    {
                        "line": 68,
                        "file": "quic_infer.ivy",
                        "instruction": "    while idx < pkt.payload.end {\n"
                    },
                    {
                        "line": 69,
                        "file": "quic_infer.ivy",
                        "instruction": "        var f := pkt.payload.value(idx);\n"
                    },
                    {
                        "line": 70,
                        "file": "quic_infer.ivy",
                        "instruction": "        if some(cf:frame.crypto) f *> cf {\n"
                    },
                    {
                        "line": 71,
                        "file": "quic_infer.ivy",
                        "instruction": "            # call show_biatch_2(dst);\n"
                    },
                    {
                        "line": 72,
                        "file": "quic_infer.ivy",
                        "instruction": "            call tls_send_event(src,dst,scid,dcid,cf.data,cf.offset,e,src_tls_id(src));\n"
                    },
                    {
                        "line": 73,
                        "file": "quic_infer.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 74,
                        "file": "quic_infer.ivy",
                        "instruction": "        if some(sf:frame.stream) f *> sf {\n"
                    },
                    {
                        "line": 75,
                        "file": "quic_infer.ivy",
                        "instruction": "                # require sf.offset <= stream_app_data_end(dcid,sf.id);  # TODO: deal with gaps in stream\n"
                    },
                    {
                        "line": 76,
                        "file": "quic_infer.ivy",
                        "instruction": "                # var data := sf.data.segment(stream_app_data_end(dcid,sf.id) - sf.offset,sf.data.end);\n"
                    },
                    {
                        "line": 77,
                        "file": "quic_infer.ivy",
                        "instruction": "            call app_server_open_event_1rtt(src,dst,scid,dcid);    \n"
                    },
                    {
                        "line": 78,
                        "file": "quic_infer.ivy",
                        "instruction": "            call app_send_event(src,dst,dcid,sf.id,sf.data,sf.offset,sf.fin)\n"
                    },
                    {
                        "line": 79,
                        "file": "quic_infer.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 80,
                        "file": "quic_infer.ivy",
                        "instruction": "        #if some(pf:frame.padding) f *> pf {\n"
                    },
                    {
                        "line": 81,
                        "file": "quic_infer.ivy",
                        "instruction": "            # do nothing\n"
                    },
                    {
                        "line": 82,
                        "file": "quic_infer.ivy",
                        "instruction": "        #} else {\n"
                    },
                    {
                        "line": 83,
                        "file": "quic_infer.ivy",
                        "instruction": "        call infer_frame(scid,dcid,f);\n"
                    },
                    {
                        "line": 84,
                        "file": "quic_infer.ivy",
                        "instruction": "        #};\n"
                    },
                    {
                        "line": 85,
                        "file": "quic_infer.ivy",
                        "instruction": "        call f.handle(scid,dcid,e,sq);\n"
                    },
                    {
                        "line": 86,
                        "file": "quic_infer.ivy",
                        "instruction": "        idx := idx.next\n"
                    },
                    {
                        "line": 87,
                        "file": "quic_infer.ivy",
                        "instruction": "    }\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "infer_tls_events",
                        "component": "quic_endpoint.ivy"
                    },
                    {
                        "caller_func": "app_send_event",
                        "component": "quic_infer.ivy"
                    },
                    {
                        "caller_func": "app_server_open_event",
                        "component": "quic_infer.ivy"
                    },
                    {
                        "caller_func": "set_encryption_level",
                        "component": "quic_infer.ivy"
                    },
                    {
                        "caller_func": "show_seqnum",
                        "component": "quic_infer.ivy"
                    },
                    {
                        "caller_func": "src_tls_id",
                        "component": "quic_infer.ivy"
                    },
                    {
                        "caller_func": "tls_keys_established_event",
                        "component": "quic_infer.ivy"
                    },
                    {
                        "caller_func": "tls_send_event",
                        "component": "quic_infer.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 155,
                "action_name": "infer_tls_events_0rtt",
                "implementation": [
                    {
                        "line": 150,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 151,
                        "file": "quic_infer.ivy",
                        "instruction": "    # Stream frames on id 0 indicate that a `tls_send_event` has occurred.\n"
                    },
                    {
                        "line": 152,
                        "file": "quic_infer.ivy",
                        "instruction": "    # TODO: ignore duplicate frames.\n"
                    },
                    {
                        "line": 153,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 154,
                        "file": "quic_infer.ivy",
                        "instruction": "    var scid := pkt.src_cid;\n"
                    },
                    {
                        "line": 155,
                        "file": "quic_infer.ivy",
                        "instruction": "    var dcid := pkt.dst_cid;\n"
                    },
                    {
                        "line": 156,
                        "file": "quic_infer.ivy",
                        "instruction": "    var sq   := pkt.seq_num;\n"
                    },
                    {
                        "line": 157,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 158,
                        "file": "quic_infer.ivy",
                        "instruction": "    # If this is an initial client request, we infer the nonce choice\n"
                    },
                    {
                        "line": 159,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 160,
                        "file": "quic_infer.ivy",
                        "instruction": "    if pkt.ptype = quic_packet_type.zero_rtt {  #& ~conn_seen(dcid)\n"
                    },
                    {
                        "line": 161,
                        "file": "quic_infer.ivy",
                        "instruction": "        nonce_cid(scid) := dcid;\n"
                    },
                    {
                        "line": 162,
                        "file": "quic_infer.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 163,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 164,
                        "file": "quic_infer.ivy",
                        "instruction": "    var e := quic_packet_type.zero_rtt;\n"
                    },
                    {
                        "line": 165,
                        "file": "quic_infer.ivy",
                        "instruction": "    \n"
                    },
                    {
                        "line": 166,
                        "file": "quic_infer.ivy",
                        "instruction": "    call set_encryption_level(src,scid,e);\n"
                    },
                    {
                        "line": 167,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 168,
                        "file": "quic_infer.ivy",
                        "instruction": "    # infer sender of packet has established keys for the packet\n"
                    },
                    {
                        "line": 169,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 170,
                        "file": "quic_infer.ivy",
                        "instruction": "    call tls_keys_established_event(scid,e);\n"
                    },
                    {
                        "line": 171,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 172,
                        "file": "quic_infer.ivy",
                        "instruction": "    # Infer an app_server_open_event.\n"
                    },
                    {
                        "line": 173,
                        "file": "quic_infer.ivy",
                        "instruction": "    if conn_requested(dst,src,dcid) & ~connected(dcid) & ~connected(scid) {\n"
                    },
                    {
                        "line": 174,
                        "file": "quic_infer.ivy",
                        "instruction": "         call app_server_open_event_0rtt(src,dst,scid,dcid);\n"
                    },
                    {
                        "line": 175,
                        "file": "quic_infer.ivy",
                        "instruction": "         call app_server_open_event(src,dst,scid,dcid);\n"
                    },
                    {
                        "line": 176,
                        "file": "quic_infer.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 177,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 178,
                        "file": "quic_infer.ivy",
                        "instruction": "    var idx := pkt.payload.begin;\n"
                    },
                    {
                        "line": 179,
                        "file": "quic_infer.ivy",
                        "instruction": "    while idx < pkt.payload.end {\n"
                    },
                    {
                        "line": 180,
                        "file": "quic_infer.ivy",
                        "instruction": "        var f := pkt.payload.value(idx);\n"
                    },
                    {
                        "line": 181,
                        "file": "quic_infer.ivy",
                        "instruction": "        # if some(cf:frame.crypto) f *> cf {\n"
                    },
                    {
                        "line": 182,
                        "file": "quic_infer.ivy",
                        "instruction": "        #     call tls_send_event(src,dst,scid,dcid,cf.data,cf.offset,e)\n"
                    },
                    {
                        "line": 183,
                        "file": "quic_infer.ivy",
                        "instruction": "        # };\n"
                    },
                    {
                        "line": 184,
                        "file": "quic_infer.ivy",
                        "instruction": "        if some(sf:frame.stream) f *> sf {\n"
                    },
                    {
                        "line": 185,
                        "file": "quic_infer.ivy",
                        "instruction": "            # require sf.offset <= stream_app_data_end(dcid,sf.id);  # TODO: deal with gaps in stream\n"
                    },
                    {
                        "line": 186,
                        "file": "quic_infer.ivy",
                        "instruction": "            # var data := sf.data.segment(stream_app_data_end(dcid,sf.id) - sf.offset,sf.data.end);\n"
                    },
                    {
                        "line": 187,
                        "file": "quic_infer.ivy",
                        "instruction": "            call app_server_open_event_0rtt(src,dst,scid,dcid);\n"
                    },
                    {
                        "line": 188,
                        "file": "quic_infer.ivy",
                        "instruction": "            call app_send_event(src,dst,dcid,sf.id,sf.data,sf.offset,sf.fin)\n"
                    },
                    {
                        "line": 189,
                        "file": "quic_infer.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 190,
                        "file": "quic_infer.ivy",
                        "instruction": "        #if some(pf:frame.padding) f *> pf {\n"
                    },
                    {
                        "line": 191,
                        "file": "quic_infer.ivy",
                        "instruction": "            # do nothing\n"
                    },
                    {
                        "line": 192,
                        "file": "quic_infer.ivy",
                        "instruction": "        #} else {\n"
                    },
                    {
                        "line": 193,
                        "file": "quic_infer.ivy",
                        "instruction": "            call infer_frame(scid,dcid,f);\n"
                    },
                    {
                        "line": 194,
                        "file": "quic_infer.ivy",
                        "instruction": "        #};\n"
                    },
                    {
                        "line": 195,
                        "file": "quic_infer.ivy",
                        "instruction": "        call f.handle(scid,dcid,e,sq);\n"
                    },
                    {
                        "line": 196,
                        "file": "quic_infer.ivy",
                        "instruction": "        idx := idx.next\n"
                    },
                    {
                        "line": 197,
                        "file": "quic_infer.ivy",
                        "instruction": "    }\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet_0rtt"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "app_send_event",
                        "component": "quic_infer.ivy"
                    },
                    {
                        "caller_func": "app_server_open_event",
                        "component": "quic_infer.ivy"
                    },
                    {
                        "caller_func": "set_encryption_level",
                        "component": "quic_infer.ivy"
                    },
                    {
                        "caller_func": "tls_keys_established_event",
                        "component": "quic_infer.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 126,
                "action_name": "infer_tls_events_retry",
                "implementation": [
                    {
                        "line": 121,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 122,
                        "file": "quic_infer.ivy",
                        "instruction": "    # Stream frames on id 0 indicate that a `tls_send_event` has occurred.\n"
                    },
                    {
                        "line": 123,
                        "file": "quic_infer.ivy",
                        "instruction": "    # TODO: ignore duplicate frames.\n"
                    },
                    {
                        "line": 124,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 125,
                        "file": "quic_infer.ivy",
                        "instruction": "    var scid := pkt.src_cid;\n"
                    },
                    {
                        "line": 126,
                        "file": "quic_infer.ivy",
                        "instruction": "    var dcid := pkt.dst_cid;\n"
                    },
                    {
                        "line": 127,
                        "file": "quic_infer.ivy",
                        "instruction": "    \n"
                    },
                    {
                        "line": 128,
                        "file": "quic_infer.ivy",
                        "instruction": "    # If this is an initial client request, we infer the nonce choice\n"
                    },
                    {
                        "line": 129,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 130,
                        "file": "quic_infer.ivy",
                        "instruction": "    if pkt.ptype = quic_packet_type.retry {  #& ~conn_seen(dcid)\n"
                    },
                    {
                        "line": 131,
                        "file": "quic_infer.ivy",
                        "instruction": "        nonce_cid(scid) := dcid;\n"
                    },
                    {
                        "line": 132,
                        "file": "quic_infer.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 133,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 134,
                        "file": "quic_infer.ivy",
                        "instruction": "    # var e := quic_packet_type.initial;\n"
                    },
                    {
                        "line": 135,
                        "file": "quic_infer.ivy",
                        "instruction": "    \n"
                    },
                    {
                        "line": 136,
                        "file": "quic_infer.ivy",
                        "instruction": "    # call set_encryption_level(src,scid,e);\n"
                    },
                    {
                        "line": 137,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 138,
                        "file": "quic_infer.ivy",
                        "instruction": "    # infer sender of packet has established keys for the packet\n"
                    },
                    {
                        "line": 139,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 140,
                        "file": "quic_infer.ivy",
                        "instruction": "    # call tls_keys_established_event(scid,e);\n"
                    },
                    {
                        "line": 141,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 142,
                        "file": "quic_infer.ivy",
                        "instruction": "    # Infer an app_server_open_event.\n"
                    },
                    {
                        "line": 143,
                        "file": "quic_infer.ivy",
                        "instruction": "    if conn_requested(dst,src,dcid) & ~connected(dcid) & ~connected(scid) {\n"
                    },
                    {
                        "line": 144,
                        "file": "quic_infer.ivy",
                        "instruction": "         call app_server_open_event_retry(src,dst,scid,dcid);\n"
                    },
                    {
                        "line": 145,
                        "file": "quic_infer.ivy",
                        "instruction": "         call app_server_open_event(src,dst,scid,dcid);\n"
                    },
                    {
                        "line": 146,
                        "file": "quic_infer.ivy",
                        "instruction": "    };\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet_retry"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "app_server_open_event",
                        "component": "quic_infer.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 97,
                "action_name": "infer_tls_events_vn",
                "implementation": [
                    {
                        "line": 93,
                        "file": "quic_infer.ivy",
                        "instruction": "    # Stream frames on id 0 indicate that a `tls_send_event` has occurred.\n"
                    },
                    {
                        "line": 94,
                        "file": "quic_infer.ivy",
                        "instruction": "    # TODO: ignore duplicate frames.\n"
                    },
                    {
                        "line": 95,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 96,
                        "file": "quic_infer.ivy",
                        "instruction": "    var scid := pkt.src_cid;\n"
                    },
                    {
                        "line": 97,
                        "file": "quic_infer.ivy",
                        "instruction": "    var dcid := pkt.dst_cid;\n"
                    },
                    {
                        "line": 98,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 99,
                        "file": "quic_infer.ivy",
                        "instruction": "    # If this is an initial client request, we infer the nonce choice\n"
                    },
                    {
                        "line": 100,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 101,
                        "file": "quic_infer.ivy",
                        "instruction": "    if pkt.ptype = quic_packet_type.version_negociation  { #& ~conn_seen(dcid)\n"
                    },
                    {
                        "line": 102,
                        "file": "quic_infer.ivy",
                        "instruction": "        nonce_cid(scid) := dcid;\n"
                    },
                    {
                        "line": 103,
                        "file": "quic_infer.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 104,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 105,
                        "file": "quic_infer.ivy",
                        "instruction": "    # var e := quic_packet_type.initial;\n"
                    },
                    {
                        "line": 106,
                        "file": "quic_infer.ivy",
                        "instruction": "    \n"
                    },
                    {
                        "line": 107,
                        "file": "quic_infer.ivy",
                        "instruction": "    # call set_encryption_level(src,scid,e);\n"
                    },
                    {
                        "line": 108,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 109,
                        "file": "quic_infer.ivy",
                        "instruction": "    # infer sender of packet has established keys for the packet\n"
                    },
                    {
                        "line": 110,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 111,
                        "file": "quic_infer.ivy",
                        "instruction": "    # call tls_keys_established_event(scid,e);\n"
                    },
                    {
                        "line": 112,
                        "file": "quic_infer.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 113,
                        "file": "quic_infer.ivy",
                        "instruction": "    # Infer an app_server_open_event.\n"
                    },
                    {
                        "line": 114,
                        "file": "quic_infer.ivy",
                        "instruction": "    if conn_requested(dst,src,dcid) & ~connected(dcid) & ~connected(scid) {\n"
                    },
                    {
                        "line": 115,
                        "file": "quic_infer.ivy",
                        "instruction": "        call app_server_open_event_vn(src,dst,scid,dcid);\n"
                    },
                    {
                        "line": 116,
                        "file": "quic_infer.ivy",
                        "instruction": "        call app_server_open_event(src,dst,scid,dcid);\n"
                    },
                    {
                        "line": 117,
                        "file": "quic_infer.ivy",
                        "instruction": "    };\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet_vn"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "app_server_open_event",
                        "component": "quic_infer.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "functions": [],
            "relations": []
        }
    ],
    "quic_endpoint.ivy": [
        {
            "attacker_ep_name": "attacker_ep",
            "attacker_ep_object": null,
            "attacker_ep_module": {
                "module_parameters": [
                    {
                        "name": "address",
                        "type": "ip.addr"
                    },
                    {
                        "name": "port",
                        "type": "ip.port"
                    }
                ],
                "module_attributes": []
            },
            "actions": [
                {
                    "line": 948,
                    "action_name": "attacker.behavior",
                    "implementation": [
                        {
                            "line": 947,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            var dst := socket_endpoint(host,s);  # because net API doesn't tell us the dst\n"
                        },
                        {
                            "line": 948,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            var idx := pkts.begin;\n"
                        },
                        {
                            "line": 949,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            var past_data : stream_data := stream_data.empty;\n"
                        },
                        {
                            "line": 950,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            while idx < pkts.end {\n"
                        },
                        {
                            "line": 951,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var ppkt := pkts.value(idx);\n"
                        },
                        {
                            "line": 952,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var tls_id := src_tls_id(dst); # todo multiple\n"
                        },
                        {
                            "line": 953,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var header := ppkt.value(0);\n"
                        },
                        {
                            "line": 954,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var hdr_type : type_bits := bfe[0][6](ppkt.value(0));\n"
                        },
                        {
                            "line": 955,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var tt := bvand(hdr_type,0x30);\n"
                        },
                        {
                            "line": 956,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var is_long : bool := bvand(0x80,header) ~= 0;\n"
                        },
                        {
                            "line": 957,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                \n"
                        },
                        {
                            "line": 958,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var version := ppkt.segment(1,1+4);\n"
                        },
                        {
                            "line": 959,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var bversion := bytes_to_version(version);\n"
                        },
                        {
                            "line": 960,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                \n"
                        },
                        {
                            "line": 961,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var ptype : byte := bvand(0x30,header);\n"
                        },
                        {
                            "line": 962,
                            "file": "quic_endpoint.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 963,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                if (bversion = 0 & is_long) | version_not_found(src) { \n"
                        },
                        {
                            "line": 964,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    # for server test, for version_negociation\n"
                        },
                        {
                            "line": 965,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    # 1000 0000 == version_negociation\n"
                        },
                        {
                            "line": 966,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    past_data := past_data.extend(ppkt);\n"
                        },
                        {
                            "line": 967,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    call tls_client_version_response(src,dst,past_data);\n"
                        },
                        {
                            "line": 968,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                } \n"
                        },
                        {
                            "line": 969,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                else if tt = 0x30 & ~(bversion = 0)  {\n"
                        },
                        {
                            "line": 970,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    #for server test, Retry packet\n"
                        },
                        {
                            "line": 971,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    call tls_client_retry_response(src,dst,ppkt);\n"
                        },
                        {
                            "line": 972,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                } \n"
                        },
                        {
                            "line": 973,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                # else if is_pad { #is_pad | is_rand_pad\n"
                        },
                        {
                            "line": 974,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                #     call padding_packet_event(src,dst,ppkt); # For quic-go and quand  client\n"
                        },
                        {
                            "line": 975,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                # } \n"
                        },
                        {
                            "line": 976,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                else { \n"
                        },
                        {
                            "line": 977,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    var rnum := reference_pkt_num(ppkt,true);\n"
                        },
                        {
                            "line": 978,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    var res := prot.decrypt(tls_id,rnum,ppkt);\n"
                        },
                        {
                            "line": 979,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    if res.ok {\n"
                        },
                        {
                            "line": 980,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        var is_pad := is_padding_packet(res.payload); # For picoquic  client\n"
                        },
                        {
                            "line": 981,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        if is_pad { #is_pad | is_rand_pad\n"
                        },
                        {
                            "line": 982,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            call padding_packet_event(host,src,dst,ppkt);\n"
                        },
                        {
                            "line": 983,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        } else {\n"
                        },
                        {
                            "line": 984,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            var pkt := pkt_serdes.from_bytes(res.data);\n"
                        },
                        {
                            "line": 985,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            pkt.seq_num := prot.correct_pnum(rnum,pkt.seq_num,prot.get_pnum_len(res.data));\n"
                        },
                        {
                            "line": 986,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            call recv_packet(host,src,dst,pkt);\n"
                        },
                        {
                            "line": 987,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            call infer_tls_events(src,dst,pkt);   # infer any TLS events on server side\n"
                        },
                        {
                            "line": 988,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            call packet_event(src,dst,pkt);       # also an inferred event\n"
                        },
                        {
                            "line": 989,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        };\n"
                        },
                        {
                            "line": 990,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    } else {\n"
                        },
                        {
                            "line": 991,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        call undecryptable_packet_event(host,src,dst,ppkt);\n"
                        },
                        {
                            "line": 992,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    };\n"
                        },
                        {
                            "line": 993,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                };\n"
                        },
                        {
                            "line": 994,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                idx := idx.next;\n"
                        },
                        {
                            "line": 995,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 996,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            version_not_found(src) := false;\n"
                        },
                        {
                            "line": 997,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            call show_last_datagram_size(last_datagram_received_size);\n"
                        },
                        {
                            "line": 998,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            if ~first_datagram_received & host = endpoint_id.server { # for client tests\n"
                        },
                        {
                            "line": 999,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                require last_datagram_received_size + 8 > 1200; # 8 is for UDP datagram header\n"
                        },
                        {
                            "line": 1000,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                first_datagram_received := true;\n"
                        },
                        {
                            "line": 1001,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 1002,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            last_datagram_received_size := 0;\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "host",
                            "type": "endpoint_id"
                        },
                        {
                            "name": "s",
                            "type": "net.socket"
                        },
                        {
                            "name": "src",
                            "type": "ip.endpoint"
                        },
                        {
                            "name": "pkts",
                            "type": "prot.arr"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "attacker.behavior",
                            "component": "quic_shim.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [
                            {
                                "caller_func": "attacker.behavior",
                                "component": "quic_endpoint.ivy"
                            }
                        ],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 932,
                    "action_name": "attacker.init[after466]",
                    "implementation": [
                        {
                            "line": 932,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            enc_level := quic_packet_type.initial;\n"
                        },
                        {
                            "line": 933,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            ep.protocol := ip.udp;\n"
                        },
                        {
                            "line": 934,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            ep.addr := address;\n"
                        },
                        {
                            "line": 935,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            ep.port := port;\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": null,
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "client_ep_name": "client_ep",
            "client_ep_object": null,
            "client_ep_module": {
                "module_parameters": [
                    {
                        "name": "address",
                        "type": "ip.addr"
                    },
                    {
                        "name": "port",
                        "type": "ip.port"
                    }
                ],
                "module_attributes": []
            },
            "actions": [
                {
                    "line": 57,
                    "action_name": "client.behavior",
                    "implementation": [
                        {
                            "line": 56,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            var dst := socket_endpoint(host,s);  # because net API doesn't tell us the dst\n"
                        },
                        {
                            "line": 57,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            var idx := pkts.begin;\n"
                        },
                        {
                            "line": 58,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            var past_data : stream_data := stream_data.empty;\n"
                        },
                        {
                            "line": 59,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            while idx < pkts.end {\n"
                        },
                        {
                            "line": 60,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var ppkt := pkts.value(idx);\n"
                        },
                        {
                            "line": 61,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var tls_id := src_tls_id(dst); # todo multiple\n"
                        },
                        {
                            "line": 62,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var header := ppkt.value(0);\n"
                        },
                        {
                            "line": 63,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var hdr_type : type_bits := bfe[0][6](ppkt.value(0));\n"
                        },
                        {
                            "line": 64,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var tt := bvand(hdr_type,0x30);\n"
                        },
                        {
                            "line": 65,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var is_long : bool := bvand(0x80,header) ~= 0;\n"
                        },
                        {
                            "line": 66,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                \n"
                        },
                        {
                            "line": 67,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var version := ppkt.segment(1,1+4);\n"
                        },
                        {
                            "line": 68,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var bversion := bytes_to_version(version);\n"
                        },
                        {
                            "line": 69,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                \n"
                        },
                        {
                            "line": 70,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var ptype : byte := bvand(0x30,header);\n"
                        },
                        {
                            "line": 71,
                            "file": "quic_endpoint.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 72,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                if (bversion = 0 & is_long) | version_not_found(src) { \n"
                        },
                        {
                            "line": 73,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    # for server test, for version_negociation\n"
                        },
                        {
                            "line": 74,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    # 1000 0000 == version_negociation\n"
                        },
                        {
                            "line": 75,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    past_data := past_data.extend(ppkt);\n"
                        },
                        {
                            "line": 76,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    call tls_client_version_response(src,dst,past_data);\n"
                        },
                        {
                            "line": 77,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                } \n"
                        },
                        {
                            "line": 78,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                else if (tt = 0x30 & is_long) & ~(bversion = 0)  {\n"
                        },
                        {
                            "line": 79,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    #for server test, Retry packet\n"
                        },
                        {
                            "line": 80,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    call tls_client_retry_response(src,dst,ppkt);\n"
                        },
                        {
                            "line": 81,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                } \n"
                        },
                        {
                            "line": 82,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                # else if is_pad { #is_pad | is_rand_pad\n"
                        },
                        {
                            "line": 83,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                #     call padding_packet_event(src,dst,ppkt); # For quic-go and quand  client\n"
                        },
                        {
                            "line": 84,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                # } \n"
                        },
                        {
                            "line": 85,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                else { \n"
                        },
                        {
                            "line": 86,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    var rnum := reference_pkt_num(ppkt,true);\n"
                        },
                        {
                            "line": 87,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    call show_rnum(rnum);\n"
                        },
                        {
                            "line": 88,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    # if rnum = lost_pkt_num {\n"
                        },
                        {
                            "line": 89,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    #     call on_purpose_lost_packet_event(host,src,dst,last_zrtt_pkt);\n"
                        },
                        {
                            "line": 90,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    # } else {\n"
                        },
                        {
                            "line": 91,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        var res := prot.decrypt(tls_id,rnum,ppkt);\n"
                        },
                        {
                            "line": 92,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        var dcil : stream_pos := bfe[0][7](ppkt.value(5));\n"
                        },
                        {
                            "line": 93,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        var ikm := cid_to_bytes(0,1); # dcid\n"
                        },
                        {
                            "line": 94,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        if(~dcil = 0) {\n"
                        },
                        {
                            "line": 95,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            client_initial_dcil := dcil;\n"
                        },
                        {
                            "line": 96,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            ikm := ppkt.segment(6,6+dcil); # dcid\n"
                        },
                        {
                            "line": 97,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        };\n"
                        },
                        {
                            "line": 98,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        var dcid : cid := bytes_to_cid(ikm);\n"
                        },
                        {
                            "line": 99,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        total_data_received := total_data_received + ppkt.size;\n"
                        },
                        {
                            "line": 100,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        if total_data_received > 3 * total_data_sent {\n"
                        },
                        {
                            "line": 101,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            if ~address_validated {\n"
                        },
                        {
                            "line": 102,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                anti_amplification_limit_reached := true;\n"
                        },
                        {
                            "line": 103,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            }\n"
                        },
                        {
                            "line": 104,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        };\n"
                        },
                        {
                            "line": 105,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        call on_datagram_received(dst, dcid, ppkt);\n"
                        },
                        {
                            "line": 106,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        if res.ok {\n"
                        },
                        {
                            "line": 107,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            var is_pad := is_padding_packet(res.payload); # For picoquic  client\n"
                        },
                        {
                            "line": 108,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            if is_pad { #is_pad | is_rand_pad\n"
                        },
                        {
                            "line": 109,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                call padding_packet_event(host,src,dst,ppkt);\n"
                        },
                        {
                            "line": 110,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            } else {\n"
                        },
                        {
                            "line": 111,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                call clear_packet(src,dst,rnum,res.data);\n"
                        },
                        {
                            "line": 112,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                var pkt := pkt_serdes.from_bytes(res.data);\n"
                        },
                        {
                            "line": 113,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                pkt.seq_num := prot.correct_pnum(rnum,pkt.seq_num,prot.get_pnum_len(res.data));\n"
                        },
                        {
                            "line": 114,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                if pkt.seq_num = lost_pkt_num {\n"
                        },
                        {
                            "line": 115,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                    call on_purpose_lost_packet_event(host,src,dst,last_zrtt_pkt);\n"
                        },
                        {
                            "line": 116,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                } else {\n"
                        },
                        {
                            "line": 117,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                    call recv_packet(host,src,dst,pkt);\n"
                        },
                        {
                            "line": 118,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                    call infer_tls_events(src,dst,pkt);   # infer any TLS events on server side\n"
                        },
                        {
                            "line": 119,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                    call packet_event(src,dst,pkt);       # also an inferred event\n"
                        },
                        {
                            "line": 120,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                    call on_packet_received(src,dst,pkt,last_datagram_received_size);\n"
                        },
                        {
                            "line": 121,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                };\n"
                        },
                        {
                            "line": 122,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            };\n"
                        },
                        {
                            "line": 123,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        } else {\n"
                        },
                        {
                            "line": 124,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            call undecryptable_packet_event(host,src,dst,ppkt);\n"
                        },
                        {
                            "line": 125,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        };\n"
                        },
                        {
                            "line": 126,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    # };\n"
                        },
                        {
                            "line": 127,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                };\n"
                        },
                        {
                            "line": 128,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                idx := idx.next;\n"
                        },
                        {
                            "line": 129,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 130,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            version_not_found(src) := false;\n"
                        },
                        {
                            "line": 131,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            call show_last_datagram_size(last_datagram_received_size);\n"
                        },
                        {
                            "line": 132,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            if ~first_datagram_received & host = endpoint_id.server { # for client tests\n"
                        },
                        {
                            "line": 133,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                require last_datagram_received_size + 8 > 1200; # 8 is for UDP datagram header\n"
                        },
                        {
                            "line": 134,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                first_datagram_received := true;\n"
                        },
                        {
                            "line": 135,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 136,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            last_datagram_received_size := 0;\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "host",
                            "type": "endpoint_id"
                        },
                        {
                            "name": "s",
                            "type": "net.socket"
                        },
                        {
                            "name": "src",
                            "type": "ip.endpoint"
                        },
                        {
                            "name": "pkts",
                            "type": "prot.arr"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "client.behavior",
                            "component": "quic_shim.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [
                            {
                                "caller_func": "client.behavior",
                                "component": "quic_endpoint.ivy"
                            }
                        ],
                        "assertions": [
                            {
                                "line": 422,
                                "file": "quic_packet.ivy",
                                "assertion": "require ~need_sent_ack_eliciting_application_packet & ~need_sent_ack_eliciting_handshake_packet & ~need_sent_ack_eliciting_initial_packet;\n"
                            },
                            {
                                "line": 424,
                                "file": "quic_packet.ivy",
                                "assertion": "require pkt.ptype ~= quic_packet_type.zero_rtt & pkt.ptype ~= quic_packet_type.version_negociation & pkt.ptype ~= quic_packet_type.retry;\n"
                            },
                            {
                                "line": 462,
                                "file": "quic_packet.ivy",
                                "assertion": "require pkt.token.end ~= 0 -> (retry_sent(client_initial_rcid) | retry_recv(scid) | pkt.token = tls_api.upper.get_old_new_token);\n"
                            },
                            {
                                "line": 499,
                                "file": "quic_packet.ivy",
                                "assertion": "require connected(dcid) |\n"
                            },
                            {
                                "line": 512,
                                "file": "quic_packet.ivy",
                                "assertion": "require connected(dcid) -> connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 518,
                                "file": "quic_packet.ivy",
                                "assertion": "require dcid = client_initial_rcid;\n"
                            },
                            {
                                "line": 524,
                                "file": "quic_packet.ivy",
                                "assertion": "require pkt.ptype = queued_level(scid);\n"
                            },
                            {
                                "line": 536,
                                "file": "quic_packet.ivy",
                                "assertion": "require pkt.seq_num = last_pkt_num(scid,pkt.ptype) + 0x1; # OK\n"
                            },
                            {
                                "line": 550,
                                "file": "quic_packet.ivy",
                                "assertion": "require ~sent_pkt(scid,pkt.ptype,pkt.seq_num);  # [4]\n"
                            },
                            {
                                "line": 554,
                                "file": "quic_packet.ivy",
                                "assertion": "require num_queued_frames(scid) > 0; # [7]\n"
                            },
                            {
                                "line": 561,
                                "file": "quic_packet.ivy",
                                "assertion": "require pkt.payload = paylo;\n"
                            },
                            {
                                "line": 566,
                                "file": "quic_packet.ivy",
                                "assertion": "require pkt.payload = queued_frames(scid);\n"
                            },
                            {
                                "line": 573,
                                "file": "quic_packet.ivy",
                                "assertion": "require pkt.payload = queued_frames(scid);\n"
                            },
                            {
                                "line": 579,
                                "file": "quic_packet.ivy",
                                "assertion": "require conn_seen(scid) & pkt.long & is_client(scid) -> conn_requested(src,dst,scid);\n"
                            },
                            {
                                "line": 584,
                                "file": "quic_packet.ivy",
                                "assertion": "require  conn_seen(dcid) -> hi_non_probing_endpoint(dcid,dst);  # [10]\n"
                            },
                            {
                                "line": 590,
                                "file": "quic_packet.ivy",
                                "assertion": "require ~_generating & ~queued_non_ack(scid) -> ack_credit(scid) > 0;  # [5]\n"
                            },
                            {
                                "line": 610,
                                "file": "quic_packet.ivy",
                                "assertion": "require ~draining_pkt_sent(scid) & queued_close(scid);\n"
                            },
                            {
                                "line": 190,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require src = client_vn;\n"
                            },
                            {
                                "line": 195,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require src = client.ep | src = client_alt;\n"
                            },
                            {
                                "line": 197,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require src = client_alt;\n"
                            },
                            {
                                "line": 200,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require src = client.ep;\n"
                            },
                            {
                                "line": 203,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require dst = server.ep;\n"
                            },
                            {
                                "line": 206,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require pkt.token = retry_token(pkt.src_cid); # TODO new_token\n"
                            },
                            {
                                "line": 208,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require pkt.token.end = 0; \n"
                            },
                            {
                                "line": 215,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require pkt.long -> pkt.pversion = initial_version  #version 30\n"
                            },
                            {
                                "line": 217,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require pkt.long -> pkt.pversion = final_version\n"
                            },
                            {
                                "line": 1710,
                                "file": "quic_frame.ivy",
                                "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1711,
                                "file": "quic_frame.ivy",
                                "assertion": "require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);  # [3]\n"
                            },
                            {
                                "line": 1712,
                                "file": "quic_frame.ivy",
                                "assertion": "require e ~= quic_packet_type.initial;\n"
                            },
                            {
                                "line": 1713,
                                "file": "quic_frame.ivy",
                                "assertion": "require e ~= quic_packet_type.handshake;\n"
                            },
                            {
                                "line": 1714,
                                "file": "quic_frame.ivy",
                                "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1715,
                                "file": "quic_frame.ivy",
                                "assertion": "require tls_handshake_finished;\n"
                            }
                        ]
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 49,
                    "action_name": "client.set_ep",
                    "implementation": [
                        {
                            "line": 48,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            ep := e;\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "e",
                            "type": "ip.endpoint"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 53,
                    "action_name": "client.set_tls_id",
                    "implementation": [
                        {
                            "line": 52,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            tls_id := e;\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "e",
                            "type": "tls_api.id"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 139,
                    "action_name": "client.show_rnum",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "s",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "client_server_ep_name": "client_server_ep",
            "client_server_ep_object": null,
            "client_server_ep_module": {
                "module_parameters": [
                    {
                        "name": "address",
                        "type": "ip.addr"
                    },
                    {
                        "name": "port",
                        "type": "ip.port"
                    },
                    {
                        "name": "oport",
                        "type": "ip.port"
                    }
                ],
                "module_attributes": []
            },
            "actions": [
                {
                    "line": 445,
                    "action_name": "client_server.init[after464]",
                    "implementation": [
                        {
                            "line": 445,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            enc_level := quic_packet_type.initial;\n"
                        },
                        {
                            "line": 446,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            ep_in.protocol := ip.udp;\n"
                        },
                        {
                            "line": 447,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            ep_in.addr := address;\n"
                        },
                        {
                            "line": 448,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            ep_in.port := port;\n"
                        },
                        {
                            "line": 449,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            \n"
                        },
                        {
                            "line": 450,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            ep_out.protocol := ip.udp;\n"
                        },
                        {
                            "line": 451,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            ep_out.addr := address;\n"
                        },
                        {
                            "line": 452,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            ep_out.port := oport;\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": null,
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "actions": {
                "line": 1089,
                "action_name": "double_cid",
                "implementation": [
                    {
                        "line": 1088,
                        "file": "quic_endpoint.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 1089,
                        "file": "quic_endpoint.ivy",
                        "instruction": "    res.val = c.val * 2;\n"
                    },
                    {
                        "line": 1090,
                        "file": "quic_endpoint.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "res",
                    "type": "cid"
                },
                "action_parameters": [
                    {
                        "name": "c",
                        "type": "cid"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 12,
                "action_name": "endpoint_id_addr",
                "implementation": [
                    {
                        "line": 12,
                        "file": "quic_endpoint.ivy",
                        "instruction": "    ep.protocol := ip.udp;\n"
                    },
                    {
                        "line": 13,
                        "file": "quic_endpoint.ivy",
                        "instruction": "    ep.addr := server_addr if ep_id = endpoint_id.server | ep_id = endpoint_id.server_alt  \n"
                    },
                    {
                        "line": 14,
                        "file": "quic_endpoint.ivy",
                        "instruction": "                    else (mim_addr if ep_id = endpoint_id.mim\n"
                    },
                    {
                        "line": 15,
                        "file": "quic_endpoint.ivy",
                        "instruction": "                    else client_addr);   # the loop-back addr\n"
                    },
                    {
                        "line": 16,
                        "file": "quic_endpoint.ivy",
                        "instruction": "    ep.port := client_port if ep_id = endpoint_id.client\n"
                    },
                    {
                        "line": 17,
                        "file": "quic_endpoint.ivy",
                        "instruction": "               else (mim_port_in if ep_id = endpoint_id.mim # TODO \n"
                    },
                    {
                        "line": 18,
                        "file": "quic_endpoint.ivy",
                        "instruction": "               else (victim_port if ep_id = endpoint_id.victim # TODO \n"
                    },
                    {
                        "line": 19,
                        "file": "quic_endpoint.ivy",
                        "instruction": "               else (client_port_alt if ep_id = endpoint_id.client_alt\n"
                    },
                    {
                        "line": 20,
                        "file": "quic_endpoint.ivy",
                        "instruction": "               else (client_port_vn if ep_id = endpoint_id.client_vn\n"
                    },
                    {
                        "line": 21,
                        "file": "quic_endpoint.ivy",
                        "instruction": "               else (server_port_alt if ep_id = endpoint_id.server_alt\n"
                    },
                    {
                        "line": 22,
                        "file": "quic_endpoint.ivy",
                        "instruction": "               else server_port)))));\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "ep",
                    "type": "ip.endpoint"
                },
                "action_parameters": [
                    {
                        "name": "ep_id",
                        "type": "endpoint_id"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "second_client_ep_name": "second_client_ep",
            "second_client_ep_object": [],
            "second_client_ep_module": {
                "module_parameters": [],
                "module_attributes": []
            },
            "actions": [
                {
                    "line": 53,
                    "action_name": "second_client.set_tls_id",
                    "implementation": [
                        {
                            "line": 52,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            tls_id := e;\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "e",
                            "type": "tls_api.id"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "server_ep_name": "server_ep",
            "server_ep_object": null,
            "server_ep_module": {
                "module_parameters": [
                    {
                        "name": "address",
                        "type": "ip.addr"
                    },
                    {
                        "name": "port",
                        "type": "ip.port"
                    }
                ],
                "module_attributes": []
            },
            "actions": [
                {
                    "line": 240,
                    "action_name": "server.behavior",
                    "implementation": [
                        {
                            "line": 239,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            var dst := socket_endpoint(host,s);  # because net API doesn't tell us the dst\n"
                        },
                        {
                            "line": 240,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            var idx := pkts.begin;\n"
                        },
                        {
                            "line": 241,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            while idx < pkts.end {\n"
                        },
                        {
                            "line": 242,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var ppkt := pkts.value(idx);\n"
                        },
                        {
                            "line": 243,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var tls_id := src_tls_id(dst); # todo multiple\n"
                        },
                        {
                            "line": 244,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var header := ppkt.value(0);\n"
                        },
                        {
                            "line": 245,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var hdr_type : type_bits := bfe[0][6](ppkt.value(0));\n"
                        },
                        {
                            "line": 246,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var tt := bvand(hdr_type,0x30);\n"
                        },
                        {
                            "line": 247,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var is_long : bool := bvand(0x80,header) ~= 0;\n"
                        },
                        {
                            "line": 248,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var version := ppkt.segment(1,1+4);\n"
                        },
                        {
                            "line": 249,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var bversion := bytes_to_version(version);\n"
                        },
                        {
                            "line": 250,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var ptype : byte := bvand(0x30,header);\n"
                        },
                        {
                            "line": 251,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                if zrtt_pkt_set & ~zrtt_pkt_process {\n"
                        },
                        {
                            "line": 252,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    zrtt_pkt_process := true;\n"
                        },
                        {
                            "line": 253,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    var rnum := reference_pkt_num(last_zrtt_pkt,true);\n"
                        },
                        {
                            "line": 254,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    call show_rnum(rnum);\n"
                        },
                        {
                            "line": 255,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    # if rnum = lost_pkt_num {\n"
                        },
                        {
                            "line": 256,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    #     call on_purpose_lost_packet_event(host,src,dst,last_zrtt_pkt); # TODO bug never called\n"
                        },
                        {
                            "line": 257,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    # } else {\n"
                        },
                        {
                            "line": 258,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        var res := prot.decrypt(tls_id,rnum,last_zrtt_pkt);\n"
                        },
                        {
                            "line": 259,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        var dcil : stream_pos := bfe[0][7](ppkt.value(5));\n"
                        },
                        {
                            "line": 260,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        var ikm := cid_to_bytes(0,1); # dcid\n"
                        },
                        {
                            "line": 261,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        if(~dcil = 0) {\n"
                        },
                        {
                            "line": 262,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            client_initial_dcil := dcil;\n"
                        },
                        {
                            "line": 263,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            ikm := ppkt.segment(6,6+dcil); # dcid\n"
                        },
                        {
                            "line": 264,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        };\n"
                        },
                        {
                            "line": 265,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        var dcid : cid := bytes_to_cid(ikm);\n"
                        },
                        {
                            "line": 266,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        total_data_received := total_data_received + ppkt.size;\n"
                        },
                        {
                            "line": 267,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        if total_data_received > 3 * total_data_sent {\n"
                        },
                        {
                            "line": 268,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            if ~address_validated {\n"
                        },
                        {
                            "line": 269,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                anti_amplification_limit_reached := true;\n"
                        },
                        {
                            "line": 270,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            }\n"
                        },
                        {
                            "line": 271,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        };\n"
                        },
                        {
                            "line": 272,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        call on_datagram_received(dst, dcid, ppkt);\n"
                        },
                        {
                            "line": 273,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        # call set_loss_detection_timer(dst, dcid);\n"
                        },
                        {
                            "line": 274,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        # if loss_detection_timer < time_api.c_timer.now_micros {\n"
                        },
                        {
                            "line": 275,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        #     call on_loss_detection_timeout();\n"
                        },
                        {
                            "line": 276,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        # };\n"
                        },
                        {
                            "line": 277,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        if res.ok {\n"
                        },
                        {
                            "line": 278,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            if ~(bversion = 0) {\n"
                        },
                        {
                            "line": 279,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                #for client test, 0rtt packet\n"
                        },
                        {
                            "line": 280,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                call tls_client_0rtt_response(src,dst,res.data);\n"
                        },
                        {
                            "line": 281,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            };\n"
                        },
                        {
                            "line": 282,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        } else {\n"
                        },
                        {
                            "line": 283,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            call undecryptable_packet_event(host,src,dst,last_zrtt_pkt);\n"
                        },
                        {
                            "line": 284,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        };\n"
                        },
                        {
                            "line": 285,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    # }\n"
                        },
                        {
                            "line": 286,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                };\n"
                        },
                        {
                            "line": 287,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                if bvand(ppkt.value(0),0xf0) = 0xc0 {\n"
                        },
                        {
                            "line": 288,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    # for client test\n"
                        },
                        {
                            "line": 289,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    call tls_client_initial_response(src,dst,ppkt)\n"
                        },
                        {
                            "line": 290,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                };\n"
                        },
                        {
                            "line": 291,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var rnum := reference_pkt_num(ppkt,true);\n"
                        },
                        {
                            "line": 292,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                # call show_rnum(rnum);\n"
                        },
                        {
                            "line": 293,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                # if rnum = lost_pkt_num {\n"
                        },
                        {
                            "line": 294,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                #     call on_purpose_lost_packet_event(host,src,dst,last_zrtt_pkt);\n"
                        },
                        {
                            "line": 295,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                # } else {\n"
                        },
                        {
                            "line": 296,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    var res := prot.decrypt(tls_id,rnum,ppkt);\n"
                        },
                        {
                            "line": 297,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    var dcil : stream_pos := bfe[0][7](ppkt.value(5));\n"
                        },
                        {
                            "line": 298,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    var ikm := cid_to_bytes(0,1); # dcid\n"
                        },
                        {
                            "line": 299,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    if(~dcil = 0) {\n"
                        },
                        {
                            "line": 300,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        client_initial_dcil := dcil;\n"
                        },
                        {
                            "line": 301,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        ikm := ppkt.segment(6,6+dcil); # dcid\n"
                        },
                        {
                            "line": 302,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    };\n"
                        },
                        {
                            "line": 303,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    var dcid : cid := bytes_to_cid(ikm);\n"
                        },
                        {
                            "line": 304,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    total_data_received := total_data_received + ppkt.size;\n"
                        },
                        {
                            "line": 305,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    if total_data_received > 3 * total_data_sent {\n"
                        },
                        {
                            "line": 306,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        if ~address_validated {\n"
                        },
                        {
                            "line": 307,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            anti_amplification_limit_reached := true;\n"
                        },
                        {
                            "line": 308,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        }\n"
                        },
                        {
                            "line": 309,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    };\n"
                        },
                        {
                            "line": 310,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    call on_datagram_received(dst, dcid, ppkt);\n"
                        },
                        {
                            "line": 311,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    if res.ok {\n"
                        },
                        {
                            "line": 312,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        var is_pad := is_padding_packet(res.payload); # For picoquic  client\n"
                        },
                        {
                            "line": 313,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        if is_pad { #is_pad | is_rand_pad\n"
                        },
                        {
                            "line": 314,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            call padding_packet_event(host,src,dst,ppkt);\n"
                        },
                        {
                            "line": 315,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        } else if tt = 0x10  & ~(bversion = 0) {\n"
                        },
                        {
                            "line": 316,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            #for client test, 0rtt packet\n"
                        },
                        {
                            "line": 317,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            call tls_client_0rtt_response(src,dst,res.data);\n"
                        },
                        {
                            "line": 318,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        } else {\n"
                        },
                        {
                            "line": 319,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            call clear_packet(src,dst,rnum,res.data);\n"
                        },
                        {
                            "line": 320,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            var pkt := pkt_serdes.from_bytes(res.data);\n"
                        },
                        {
                            "line": 321,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            pkt.seq_num := prot.correct_pnum(rnum,pkt.seq_num,prot.get_pnum_len(res.data));\n"
                        },
                        {
                            "line": 322,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            # if pkt.seq_num = lost_pkt_num {\n"
                        },
                        {
                            "line": 323,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            #     call on_purpose_lost_packet_event(host,src,dst,last_zrtt_pkt);\n"
                        },
                        {
                            "line": 324,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            # } else {\n"
                        },
                        {
                            "line": 325,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                call recv_packet(host,src,dst,pkt);\n"
                        },
                        {
                            "line": 326,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                call infer_tls_events(src,dst,pkt);   # infer any TLS events on server side\n"
                        },
                        {
                            "line": 327,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                call packet_event(src,dst,pkt);       # also an inferred event\n"
                        },
                        {
                            "line": 328,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                call on_packet_received(src,dst,pkt,last_datagram_received_size);\n"
                        },
                        {
                            "line": 329,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                if nclients > 1 {\n"
                        },
                        {
                            "line": 330,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                    var cdx := the_cids.begin;\n"
                        },
                        {
                            "line": 331,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                    while cdx < the_cids.end {\n"
                        },
                        {
                            "line": 332,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                        var tcid := the_cids.value(cdx);\n"
                        },
                        {
                            "line": 333,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                        if bvand(ppkt.value(0),0xf0) = 0xc0 & ~connected(tcid) { \n"
                        },
                        {
                            "line": 334,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                            # for client test\n"
                        },
                        {
                            "line": 335,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                            call app_server_open_event(dst,src,tcid,pkt.src_cid);  # [1]\n"
                        },
                        {
                            "line": 336,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                        };\n"
                        },
                        {
                            "line": 337,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                        cdx := cdx.next;\n"
                        },
                        {
                            "line": 338,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                    }\n"
                        },
                        {
                            "line": 339,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                } else {\n"
                        },
                        {
                            "line": 340,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                    if bvand(ppkt.value(0),0xf0) = 0xc0 & ~connected(the_cid) { \n"
                        },
                        {
                            "line": 341,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                        # for client test\n"
                        },
                        {
                            "line": 342,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                        call app_server_open_event(dst,src,the_cid,pkt.src_cid);  # [1]\n"
                        },
                        {
                            "line": 343,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                    };\n"
                        },
                        {
                            "line": 344,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                                };\n"
                        },
                        {
                            "line": 345,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                            # };\n"
                        },
                        {
                            "line": 346,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        };\n"
                        },
                        {
                            "line": 347,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    } else {\n"
                        },
                        {
                            "line": 348,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                        call undecryptable_packet_event(host,src,dst,ppkt);\n"
                        },
                        {
                            "line": 349,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                    };\n"
                        },
                        {
                            "line": 350,
                            "file": "quic_endpoint.ivy",
                            "instruction": "               # };\n"
                        },
                        {
                            "line": 351,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                idx := idx.next;\n"
                        },
                        {
                            "line": 352,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 353,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            version_not_found(src) := false;\n"
                        },
                        {
                            "line": 354,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            call show_last_datagram_size(last_datagram_received_size);\n"
                        },
                        {
                            "line": 355,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            if ~first_datagram_received { # for client tests\n"
                        },
                        {
                            "line": 356,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                #require last_datagram_received_size + 8 > 1200; # 8 is for UDP datagram header TODO\n"
                        },
                        {
                            "line": 357,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                first_datagram_received := true;\n"
                        },
                        {
                            "line": 358,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 359,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            last_datagram_received_size := 0;\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "host",
                            "type": "endpoint_id"
                        },
                        {
                            "name": "s",
                            "type": "net.socket"
                        },
                        {
                            "name": "src",
                            "type": "ip.endpoint"
                        },
                        {
                            "name": "pkts",
                            "type": "prot.arr"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [
                            {
                                "caller_func": "server.behavior",
                                "component": "quic_endpoint.ivy"
                            },
                            {
                                "caller_func": "server.behavior",
                                "component": "quic_endpoint.ivy"
                            },
                            {
                                "caller_func": "server.behavior",
                                "component": "quic_endpoint.ivy"
                            },
                            {
                                "caller_func": "infer_tls_events_retry",
                                "component": "quic_infer.ivy"
                            },
                            {
                                "caller_func": "infer_tls_events_vn",
                                "component": "quic_infer.ivy"
                            },
                            {
                                "caller_func": "infer_tls_events_0rtt",
                                "component": "quic_infer.ivy"
                            },
                            {
                                "caller_func": "server.behavior",
                                "component": "quic_endpoint.ivy"
                            },
                            {
                                "caller_func": "server.behavior",
                                "component": "quic_endpoint.ivy"
                            },
                            {
                                "caller_func": "server.behavior",
                                "component": "quic_endpoint.ivy"
                            }
                        ],
                        "assertions": [
                            {
                                "line": 525,
                                "file": "quic_shim.ivy",
                                "assertion": "require dcil >= 8;\n"
                            },
                            {
                                "line": 1174,
                                "file": "quic_frame.ivy",
                                "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1175,
                                "file": "quic_frame.ivy",
                                "assertion": "require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);  # [6]\n"
                            },
                            {
                                "line": 1176,
                                "file": "quic_frame.ivy",
                                "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1180,
                                "file": "quic_frame.ivy",
                                "assertion": "require ~conn_closed(scid);  # [5]\n"
                            },
                            {
                                "line": 1181,
                                "file": "quic_frame.ivy",
                                "assertion": "require connected(scid) & connected_to(scid) = dcid;\n"
                            },
                            {
                                "line": 1183,
                                "file": "quic_frame.ivy",
                                "assertion": "require stream_seen(dcid,f.id);  # [8]\n"
                            },
                            {
                                "line": 1184,
                                "file": "quic_frame.ivy",
                                "assertion": "require stream_id_allowed(dcid,f.id,e);  # [4]\n"
                            },
                            {
                                "line": 305,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require scid = the_cid;\n"
                            },
                            {
                                "line": 306,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require f.id = 4;\n"
                            },
                            {
                                "line": 101,
                                "file": "quic_application.ivy",
                                "assertion": "require conn_requested(dst,src,dcid);  # [1] \n"
                            },
                            {
                                "line": 102,
                                "file": "quic_application.ivy",
                                "assertion": "require ~connected(dcid) & ~connected(scid);  # [2]\n"
                            },
                            {
                                "line": 1872,
                                "file": "quic_frame.ivy",
                                "assertion": "around handle {require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1873,
                                "file": "quic_frame.ivy",
                                "assertion": "require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 1874,
                                "file": "quic_frame.ivy",
                                "assertion": "require handshake_done_recv | handshake_done_send;\n"
                            },
                            {
                                "line": 1880,
                                "file": "quic_frame.ivy",
                                "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1881,
                                "file": "quic_frame.ivy",
                                "assertion": "require f.data.end = 8;\n"
                            },
                            {
                                "line": 1882,
                                "file": "quic_frame.ivy",
                                "assertion": "require ~path_challenge_pending(dcid,f.data);\n"
                            },
                            {
                                "line": 1400,
                                "file": "quic_frame.ivy",
                                "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1402,
                                "file": "quic_frame.ivy",
                                "assertion": "require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 1407,
                                "file": "quic_frame.ivy",
                                "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1408,
                                "file": "quic_frame.ivy",
                                "assertion": "require connected(scid) & connected_to(scid) = dcid;\n"
                            },
                            {
                                "line": 1409,
                                "file": "quic_frame.ivy",
                                "assertion": "require f.reason_phrase_length = f.reason_phrase.end;\n"
                            },
                            {
                                "line": 352,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require scid = the_cid;\n"
                            },
                            {
                                "line": 354,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require is_no_error;\n"
                            },
                            {
                                "line": 1604,
                                "file": "quic_frame.ivy",
                                "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1605,
                                "file": "quic_frame.ivy",
                                "assertion": "require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 1606,
                                "file": "quic_frame.ivy",
                                "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 385,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require scid = the_cid;\n"
                            },
                            {
                                "line": 386,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require f.pos = 4000;\n"
                            },
                            {
                                "line": 389,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require ~(max_data_set(scid) & max_data_val(scid) > f.pos);\n"
                            },
                            {
                                "line": 1000,
                                "file": "quic_endpoint.ivy",
                                "assertion": "require last_datagram_received_size + 8 > 1200; # 8 is for UDP datagram header\n"
                            },
                            {
                                "line": 1339,
                                "file": "quic_frame.ivy",
                                "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1340,
                                "file": "quic_frame.ivy",
                                "assertion": "require e = quic_packet_type.one_rtt -> established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 1341,
                                "file": "quic_frame.ivy",
                                "assertion": "require e = quic_packet_type.handshake -> established_handshake_keys(scid);\n"
                            },
                            {
                                "line": 1342,
                                "file": "quic_frame.ivy",
                                "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 1346,
                                "file": "quic_frame.ivy",
                                "assertion": "require connected(scid) & connected_to(scid) = dcid;\n"
                            },
                            {
                                "line": 1347,
                                "file": "quic_frame.ivy",
                                "assertion": "require f.reason_phrase_length = f.reason_phrase.end;\n"
                            },
                            {
                                "line": 1349,
                                "file": "quic_frame.ivy",
                                "assertion": "require e = quic_packet_type.one_rtt;\n"
                            },
                            {
                                "line": 1350,
                                "file": "quic_frame.ivy",
                                "assertion": "require ~conn_closed(scid);\n"
                            },
                            {
                                "line": 339,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require conn_total_data(the_cid) > 1000; # tricks\n"
                            },
                            {
                                "line": 340,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require scid = the_cid;\n"
                            },
                            {
                                "line": 341,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require f.err_code = 0;\n"
                            },
                            {
                                "line": 343,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require is_no_error;\n"
                            },
                            {
                                "line": 1514,
                                "file": "quic_frame.ivy",
                                "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 1515,
                                "file": "quic_frame.ivy",
                                "assertion": "require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 1519,
                                "file": "quic_frame.ivy",
                                "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 791,
                                "file": "quic_shim.ivy",
                                "assertion": "require dcil >= 8;\n"
                            }
                        ]
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 236,
                    "action_name": "server.set_tls_id",
                    "implementation": [
                        {
                            "line": 235,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            tls_id := e;\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "e",
                            "type": "tls_api.id"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 363,
                    "action_name": "server.show_rnum",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "s",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "victim_agent_ep_name": "victim_agent_ep",
            "victim_agent_ep_object": [],
            "victim_agent_ep_module": {
                "module_parameters": [],
                "module_attributes": []
            },
            "actions": [
                {
                    "line": 1065,
                    "action_name": "victim_agent.behavior",
                    "implementation": [
                        {
                            "line": 1064,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            var dst := socket_endpoint(host,s);  # because net API doesn't tell us the dst\n"
                        },
                        {
                            "line": 1065,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            var idx := pkts.begin;\n"
                        },
                        {
                            "line": 1066,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            while idx < pkts.end {\n"
                        },
                        {
                            "line": 1067,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var ppkt := pkts.value(idx);\n"
                        },
                        {
                            "line": 1068,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var tls_id := src_tls_id(dst); # todo multiple\n"
                        },
                        {
                            "line": 1069,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var header := ppkt.value(0);\n"
                        },
                        {
                            "line": 1070,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var hdr_type : type_bits := bfe[0][6](ppkt.value(0));\n"
                        },
                        {
                            "line": 1071,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var tt := bvand(hdr_type,0x30);\n"
                        },
                        {
                            "line": 1072,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var is_long : bool := bvand(0x80,header) ~= 0;\n"
                        },
                        {
                            "line": 1073,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                \n"
                        },
                        {
                            "line": 1074,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var version := ppkt.segment(1,1+4);\n"
                        },
                        {
                            "line": 1075,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var bversion := bytes_to_version(version);\n"
                        },
                        {
                            "line": 1076,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                \n"
                        },
                        {
                            "line": 1077,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                var ptype : byte := bvand(0x30,header);\n"
                        },
                        {
                            "line": 1078,
                            "file": "quic_endpoint.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1079,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                call recv_packet_victim(host,src,dst,ppkt);\n"
                        },
                        {
                            "line": 1080,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                ppkt_recvd := ppkt_recvd.append(ppkt);\n"
                        },
                        {
                            "line": 1081,
                            "file": "quic_endpoint.ivy",
                            "instruction": "                idx := idx.next;\n"
                        },
                        {
                            "line": 1082,
                            "file": "quic_endpoint.ivy",
                            "instruction": "            };\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "host",
                            "type": "endpoint_id"
                        },
                        {
                            "name": "s",
                            "type": "net.socket"
                        },
                        {
                            "name": "src",
                            "type": "ip.endpoint"
                        },
                        {
                            "name": "pkts",
                            "type": "prot.arr"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "functions": [
                {
                    "name": "ppkt_to_be_forwarded_to_server(C:stream_pos) : forged_pkts\n",
                    "comment": "",
                    "line": 499,
                    "file": "quic_endpoint.ivy"
                },
                {
                    "name": "ppkt_to_be_forwarded_to_client(C:stream_pos) : forged_pkts\n",
                    "comment": "",
                    "line": 504,
                    "file": "quic_endpoint.ivy"
                },
                {
                    "name": "max_retransmit(E:quic_packet_type,S:ip.endpoint) : stream_pos\n",
                    "comment": "",
                    "line": 523,
                    "file": "quic_endpoint.ivy"
                }
            ],
            "relations": []
        }
    ],
    "quic_shim.ivy": [
        {
            "actions": {
                "line": 1014,
                "action_name": "bytes_to_cid",
                "implementation": [
                    {
                        "line": 1013,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 1014,
                        "file": "quic_shim.ivy",
                        "instruction": "    val.val = 0;\n"
                    },
                    {
                        "line": 1015,
                        "file": "quic_shim.ivy",
                        "instruction": "    for (unsigned i = 0; i < bytes.size(); i++)\n"
                    },
                    {
                        "line": 1016,
                        "file": "quic_shim.ivy",
                        "instruction": "        val.val = (val.val << 8) + bytes[i];\n"
                    },
                    {
                        "line": 1017,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "val",
                    "type": "cid"
                },
                "action_parameters": [
                    {
                        "name": "bytes",
                        "type": "stream_data"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 1030,
                "action_name": "bytes_to_itoken",
                "implementation": [
                    {
                        "line": 1029,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 1030,
                        "file": "quic_shim.ivy",
                        "instruction": "    val.val = 0;\n"
                    },
                    {
                        "line": 1031,
                        "file": "quic_shim.ivy",
                        "instruction": "    for (unsigned i = 0; i < bytes.size(); i++)\n"
                    },
                    {
                        "line": 1032,
                        "file": "quic_shim.ivy",
                        "instruction": "        val.val = (val.val << 8) + bytes[i];\n"
                    },
                    {
                        "line": 1033,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "val",
                    "type": "itoken"
                },
                "action_parameters": [
                    {
                        "name": "bytes",
                        "type": "stream_data"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "bytes_to_itoken",
                        "component": "quic_packet_retry.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 1022,
                "action_name": "bytes_to_version",
                "implementation": [
                    {
                        "line": 1021,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 1022,
                        "file": "quic_shim.ivy",
                        "instruction": "    val = 0;\n"
                    },
                    {
                        "line": 1023,
                        "file": "quic_shim.ivy",
                        "instruction": "    for (unsigned i = 0; i < bytes.size(); i++)\n"
                    },
                    {
                        "line": 1024,
                        "file": "quic_shim.ivy",
                        "instruction": "        val = (val << 8) + bytes[i];\n"
                    },
                    {
                        "line": 1025,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "val",
                    "type": "version"
                },
                "action_parameters": [
                    {
                        "name": "bytes",
                        "type": "stream_data"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 913,
                "action_name": "cid_to_bytes",
                "implementation": [
                    {
                        "line": 912,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 913,
                        "file": "quic_shim.ivy",
                        "instruction": "    res.resize(len);\n"
                    },
                    {
                        "line": 914,
                        "file": "quic_shim.ivy",
                        "instruction": "    for (unsigned i = 0; i < len; i++) {\n"
                    },
                    {
                        "line": 915,
                        "file": "quic_shim.ivy",
                        "instruction": "        res[len-i-1] = 0xff & (c.val >> (i * 8));\n"
                    },
                    {
                        "line": 916,
                        "file": "quic_shim.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 917,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "res",
                    "type": "stream_data"
                },
                "action_parameters": [
                    {
                        "name": "c",
                        "type": "cid"
                    },
                    {
                        "name": "len",
                        "type": "cid_length"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 922,
                "action_name": "cid_to_us",
                "implementation": [
                    {
                        "line": 921,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 922,
                        "file": "quic_shim.ivy",
                        "instruction": "    res = c.val;\n"
                    },
                    {
                        "line": 923,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "res",
                    "type": "tls_api.id"
                },
                "action_parameters": [
                    {
                        "name": "c",
                        "type": "cid"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 950,
                "action_name": "dcid_size_cl",
                "implementation": [
                    {
                        "line": 949,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 950,
                        "file": "quic_shim.ivy",
                        "instruction": "    res = 0;\n"
                    },
                    {
                        "line": 951,
                        "file": "quic_shim.ivy",
                        "instruction": "    if(const char* env_p2 = std::getenv(\"TEST_TYPE\")) { \n"
                    },
                    {
                        "line": 952,
                        "file": "quic_shim.ivy",
                        "instruction": "      if(strcmp(env_p2, \"client\") == 0 || cond) {\n"
                    },
                    {
                        "line": 953,
                        "file": "quic_shim.ivy",
                        "instruction": "         if(const char* env_p3 = std::getenv(\"TEST_DCIL\")) {\n"
                    },
                    {
                        "line": 954,
                        "file": "quic_shim.ivy",
                        "instruction": "            std::cerr << \"TEST_DCIL \" << env_p3 << \"\\n\";\n"
                    },
                    {
                        "line": 955,
                        "file": "quic_shim.ivy",
                        "instruction": "\t        res = atoi(env_p3);\n"
                    },
                    {
                        "line": 956,
                        "file": "quic_shim.ivy",
                        "instruction": "         } \n"
                    },
                    {
                        "line": 957,
                        "file": "quic_shim.ivy",
                        "instruction": "         else \n"
                    },
                    {
                        "line": 958,
                        "file": "quic_shim.ivy",
                        "instruction": "\t        res = 8;\n"
                    },
                    {
                        "line": 959,
                        "file": "quic_shim.ivy",
                        "instruction": "      } else \n"
                    },
                    {
                        "line": 960,
                        "file": "quic_shim.ivy",
                        "instruction": "\t  res = 8;\n"
                    },
                    {
                        "line": 961,
                        "file": "quic_shim.ivy",
                        "instruction": "    } else \n"
                    },
                    {
                        "line": 962,
                        "file": "quic_shim.ivy",
                        "instruction": "      res = 8;\n"
                    },
                    {
                        "line": 963,
                        "file": "quic_shim.ivy",
                        "instruction": "    std::cerr <<  \"dcid_size_cl size: \" <<  res << \"\\n\";\n"
                    },
                    {
                        "line": 964,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "res",
                    "type": "cid_length"
                },
                "action_parameters": [
                    {
                        "name": "cond",
                        "type": "bool"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 987,
                "action_name": "dcid_size_pos",
                "implementation": [
                    {
                        "line": 986,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 987,
                        "file": "quic_shim.ivy",
                        "instruction": "    res = 0;\n"
                    },
                    {
                        "line": 988,
                        "file": "quic_shim.ivy",
                        "instruction": "    if(const char* env_p2 = std::getenv(\"TEST_TYPE\")) { \n"
                    },
                    {
                        "line": 989,
                        "file": "quic_shim.ivy",
                        "instruction": "      if(strcmp(env_p2, \"server\") == 0 || cond) {\n"
                    },
                    {
                        "line": 990,
                        "file": "quic_shim.ivy",
                        "instruction": "         if(const char* env_p3 = std::getenv(\"TEST_DCIL\")) {\n"
                    },
                    {
                        "line": 991,
                        "file": "quic_shim.ivy",
                        "instruction": "            std::cerr << \"TEST_DCIL \" << env_p3 << \"\\n\";\n"
                    },
                    {
                        "line": 992,
                        "file": "quic_shim.ivy",
                        "instruction": "\t        res = atoi(env_p3);\n"
                    },
                    {
                        "line": 993,
                        "file": "quic_shim.ivy",
                        "instruction": "         } else \n"
                    },
                    {
                        "line": 994,
                        "file": "quic_shim.ivy",
                        "instruction": "\t   res = 8;\n"
                    },
                    {
                        "line": 995,
                        "file": "quic_shim.ivy",
                        "instruction": "      } else \n"
                    },
                    {
                        "line": 996,
                        "file": "quic_shim.ivy",
                        "instruction": "\t  res = 8;\n"
                    },
                    {
                        "line": 997,
                        "file": "quic_shim.ivy",
                        "instruction": "    } else \n"
                    },
                    {
                        "line": 998,
                        "file": "quic_shim.ivy",
                        "instruction": "      res = 8;\n"
                    },
                    {
                        "line": 999,
                        "file": "quic_shim.ivy",
                        "instruction": "    std::cerr <<  \"dcid_size_pos size: \" <<  res << \"\\n\";\n"
                    },
                    {
                        "line": 1000,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "res",
                    "type": "stream_pos"
                },
                "action_parameters": [
                    {
                        "name": "cond",
                        "type": "bool"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "dcid_size_pos",
                        "component": "quic_packet_retry.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 1064,
                "action_name": "export_length_cid",
                "implementation": [
                    {
                        "line": 1063,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 1064,
                        "file": "quic_shim.ivy",
                        "instruction": "    scid_h = scil;\n"
                    },
                    {
                        "line": 1065,
                        "file": "quic_shim.ivy",
                        "instruction": "    dcid_h = dcil;\n"
                    },
                    {
                        "line": 1066,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "dcil",
                        "type": "stream_pos"
                    },
                    {
                        "name": "scil",
                        "type": "stream_pos"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 1043,
                "action_name": "export_length_cid_extension",
                "implementation": [
                    {
                        "line": 1042,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 1043,
                        "file": "quic_shim.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 1044,
                        "file": "quic_shim.ivy",
                        "instruction": "    std::cerr <<  \"export_length_cid_extension\"  << \"\\n\";\n"
                    },
                    {
                        "line": 1045,
                        "file": "quic_shim.ivy",
                        "instruction": "\tchar str_d[20];\n"
                    },
                    {
                        "line": 1046,
                        "file": "quic_shim.ivy",
                        "instruction": "\tsprintf(str_d,\"%llu\",dcil);\n"
                    },
                    {
                        "line": 1047,
                        "file": "quic_shim.ivy",
                        "instruction": "\tif(setenv(\"TEST_DCIL\",str_d,true) != 0) \n"
                    },
                    {
                        "line": 1048,
                        "file": "quic_shim.ivy",
                        "instruction": "\t\tfprintf(stderr, \"setenv failed\\n\");\n"
                    },
                    {
                        "line": 1049,
                        "file": "quic_shim.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 1050,
                        "file": "quic_shim.ivy",
                        "instruction": "\tchar str[20];\n"
                    },
                    {
                        "line": 1051,
                        "file": "quic_shim.ivy",
                        "instruction": "\tsprintf(str,\"%llu\",scil);\n"
                    },
                    {
                        "line": 1052,
                        "file": "quic_shim.ivy",
                        "instruction": "\tif(setenv(\"TEST_SCIL\",str,true) != 0) \n"
                    },
                    {
                        "line": 1053,
                        "file": "quic_shim.ivy",
                        "instruction": "\t\tfprintf(stderr, \"setenv failed\\n\");\n"
                    },
                    {
                        "line": 1054,
                        "file": "quic_shim.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 1055,
                        "file": "quic_shim.ivy",
                        "instruction": "    char str_p[20];\n"
                    },
                    {
                        "line": 1056,
                        "file": "quic_shim.ivy",
                        "instruction": "\tsprintf(str_p,\"%llu\",scil);\n"
                    },
                    {
                        "line": 1057,
                        "file": "quic_shim.ivy",
                        "instruction": "\tif(setenv(\"TEST_PCIL\",str_p,true) != 0) \n"
                    },
                    {
                        "line": 1058,
                        "file": "quic_shim.ivy",
                        "instruction": "\t\tfprintf(stderr, \"setenv failed\\n\");\n"
                    },
                    {
                        "line": 1059,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "dcil",
                        "type": "stream_pos"
                    },
                    {
                        "name": "scil",
                        "type": "stream_pos"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 1071,
                "action_name": "export_length_cid_mim",
                "implementation": [
                    {
                        "line": 1070,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 1071,
                        "file": "quic_shim.ivy",
                        "instruction": "    scid_mim = scil;\n"
                    },
                    {
                        "line": 1072,
                        "file": "quic_shim.ivy",
                        "instruction": "    dcid_mim = dcil;\n"
                    },
                    {
                        "line": 1073,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "dcil",
                        "type": "stream_pos"
                    },
                    {
                        "name": "scil",
                        "type": "stream_pos"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 874,
                "action_name": "is_padding_packet",
                "implementation": [
                    {
                        "line": 873,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 874,
                        "file": "quic_shim.ivy",
                        "instruction": "    is_padding = true;\n"
                    },
                    {
                        "line": 875,
                        "file": "quic_shim.ivy",
                        "instruction": "    for (unsigned i = 0; i < spkt.size(); i++)\n"
                    },
                    {
                        "line": 876,
                        "file": "quic_shim.ivy",
                        "instruction": "\tis_padding = is_padding && (spkt[i] == 0);\n"
                    },
                    {
                        "line": 877,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "is_padding",
                    "type": "bool"
                },
                "action_parameters": [
                    {
                        "name": "spkt",
                        "type": "stream_data"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "net_name": "net",
            "net_object": [],
            "net_module": {
                "module_parameters": [],
                "module_attributes": []
            },
            "actions": [
                {
                    "line": 235,
                    "action_name": "net.recv",
                    "implementation": [
                        {
                            "line": 235,
                            "file": "quic_shim.ivy",
                            "instruction": "    call show_socket(s);\n"
                        },
                        {
                            "line": 236,
                            "file": "quic_shim.ivy",
                            "instruction": "    if host = endpoint_id.server {        # for client test (tested implem = client <-> ivy implem = server)\n"
                        },
                        {
                            "line": 237,
                            "file": "quic_shim.ivy",
                            "instruction": "        call server.behavior(host,s,src,pkts);\n"
                        },
                        {
                            "line": 238,
                            "file": "quic_shim.ivy",
                            "instruction": "    } else if host = endpoint_id.client | host = endpoint_id.client_alt  { # for server test (tested implem = server <-> ivy implem = client)\n"
                        },
                        {
                            "line": 239,
                            "file": "quic_shim.ivy",
                            "instruction": "        call client.behavior(host,s,src,pkts);\n"
                        },
                        {
                            "line": 240,
                            "file": "quic_shim.ivy",
                            "instruction": "    } else if host = endpoint_id.mim {\n"
                        },
                        {
                            "line": 241,
                            "file": "quic_shim.ivy",
                            "instruction": "        call mim_agent.behavior(host,s,src,pkts);\n"
                        },
                        {
                            "line": 242,
                            "file": "quic_shim.ivy",
                            "instruction": "    } else if host = endpoint_id.victim {\n"
                        },
                        {
                            "line": 243,
                            "file": "quic_shim.ivy",
                            "instruction": "        call victim_agent.behavior(host,s,src,pkts);\n"
                        },
                        {
                            "line": 244,
                            "file": "quic_shim.ivy",
                            "instruction": "    } else if host = endpoint_id.attacker {\n"
                        },
                        {
                            "line": 245,
                            "file": "quic_shim.ivy",
                            "instruction": "        call attacker.behavior(host,s,src,pkts);\n"
                        },
                        {
                            "line": 246,
                            "file": "quic_shim.ivy",
                            "instruction": "    } else {\n"
                        },
                        {
                            "line": 247,
                            "file": "quic_shim.ivy",
                            "instruction": "        # ERROR\n"
                        },
                        {
                            "line": 248,
                            "file": "quic_shim.ivy",
                            "instruction": "        call undefined_host_error(host,s,src);\n"
                        },
                        {
                            "line": 249,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "host",
                            "type": "endpoint_id"
                        },
                        {
                            "name": "s",
                            "type": "net.socket"
                        },
                        {
                            "name": "src",
                            "type": "ip.endpoint"
                        },
                        {
                            "name": "pkts",
                            "type": "prot.arr"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "actions": {
                "line": 265,
                "action_name": "on_purpose_lost_packet_event",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "host",
                        "type": "endpoint_id"
                    },
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "stream_data"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 821,
                "action_name": "packet_encryption_level",
                "implementation": [
                    {
                        "line": 818,
                        "file": "quic_shim.ivy",
                        "instruction": "    # if zero_rtt_allowed {\n"
                    },
                    {
                        "line": 819,
                        "file": "quic_shim.ivy",
                        "instruction": "        #var scid := packet_scid(h);\n"
                    },
                    {
                        "line": 820,
                        "file": "quic_shim.ivy",
                        "instruction": "        e := quic_packet_type.zero_rtt if ~h.hdr_long # & ~established_1rtt_keys(scid)\n"
                    },
                    {
                        "line": 821,
                        "file": "quic_shim.ivy",
                        "instruction": "            else (quic_packet_type.initial if h.hdr_type = 0x7f \n"
                    },
                    {
                        "line": 822,
                        "file": "quic_shim.ivy",
                        "instruction": "                  else quic_packet_type.handshake);\n"
                    },
                    {
                        "line": 823,
                        "file": "quic_shim.ivy",
                        "instruction": "    # } else {\n"
                    },
                    {
                        "line": 824,
                        "file": "quic_shim.ivy",
                        "instruction": "        # e := quic_packet_type.one_rtt if ~h.hdr_long\n"
                    },
                    {
                        "line": 825,
                        "file": "quic_shim.ivy",
                        "instruction": "        #     else (quic_packet_type.initial if h.hdr_type = 0x7f \n"
                    },
                    {
                        "line": 826,
                        "file": "quic_shim.ivy",
                        "instruction": "        #           else quic_packet_type.handshake);\n"
                    },
                    {
                        "line": 827,
                        "file": "quic_shim.ivy",
                        "instruction": "    # }\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "e",
                    "type": "quic_packet_type"
                },
                "action_parameters": [
                    {
                        "name": "h",
                        "type": "prot.header_info"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 834,
                "action_name": "packet_encryption_level_up",
                "implementation": [
                    {
                        "line": 831,
                        "file": "quic_shim.ivy",
                        "instruction": "    # if zero_rtt_allowed {\n"
                    },
                    {
                        "line": 832,
                        "file": "quic_shim.ivy",
                        "instruction": "        #var scid := packet_scid(h);\n"
                    },
                    {
                        "line": 833,
                        "file": "quic_shim.ivy",
                        "instruction": "        e := quic_packet_type.zero_rtt if ~h.hdr_long #& ~established_1rtt_keys(scid)\n"
                    },
                    {
                        "line": 834,
                        "file": "quic_shim.ivy",
                        "instruction": "            else (quic_packet_type.initial if bvand(h.hdr_type,0x30) = 0x00\n"
                    },
                    {
                        "line": 835,
                        "file": "quic_shim.ivy",
                        "instruction": "                  else quic_packet_type.handshake);\n"
                    },
                    {
                        "line": 836,
                        "file": "quic_shim.ivy",
                        "instruction": "    # } else {\n"
                    },
                    {
                        "line": 837,
                        "file": "quic_shim.ivy",
                        "instruction": "        # e := quic_packet_type.one_rtt if ~h.hdr_long\n"
                    },
                    {
                        "line": 838,
                        "file": "quic_shim.ivy",
                        "instruction": "        #     else (quic_packet_type.initial if bvand(h.hdr_type,0x30) = 0x00\n"
                    },
                    {
                        "line": 839,
                        "file": "quic_shim.ivy",
                        "instruction": "        #           else quic_packet_type.handshake);\n"
                    },
                    {
                        "line": 840,
                        "file": "quic_shim.ivy",
                        "instruction": "    # }\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "e",
                    "type": "quic_packet_type"
                },
                "action_parameters": [
                    {
                        "name": "h",
                        "type": "prot.header_info"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 848,
                "action_name": "packet_scid",
                "implementation": [
                    {
                        "line": 847,
                        "file": "quic_shim.ivy",
                        "instruction": "    if h.hdr_long {\n"
                    },
                    {
                        "line": 848,
                        "file": "quic_shim.ivy",
                        "instruction": "        scid := h.scid;\n"
                    },
                    {
                        "line": 849,
                        "file": "quic_shim.ivy",
                        "instruction": "    } else {\n"
                    },
                    {
                        "line": 850,
                        "file": "quic_shim.ivy",
                        "instruction": "        if used_cid(h.dcid) {\n"
                    },
                    {
                        "line": 851,
                        "file": "quic_shim.ivy",
                        "instruction": "            scid := connected_to(h.dcid);\n"
                    },
                    {
                        "line": 852,
                        "file": "quic_shim.ivy",
                        "instruction": "        } else {\n"
                    },
                    {
                        "line": 853,
                        "file": "quic_shim.ivy",
                        "instruction": "            scid := 0;\n"
                    },
                    {
                        "line": 854,
                        "file": "quic_shim.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 855,
                        "file": "quic_shim.ivy",
                        "instruction": "    }\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "scid",
                    "type": "cid"
                },
                "action_parameters": [
                    {
                        "name": "h",
                        "type": "prot.header_info"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 261,
                "action_name": "padding_packet_event",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "host",
                        "type": "endpoint_id"
                    },
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "stream_data"
                    }
                ],
                "called_from": [
                    {
                        "caller_func": "padding_packet_event",
                        "component": "quic_endpoint.ivy"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 808,
                "action_name": "recv_0rtt_pkt",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "spkt",
                        "type": "quic_packet_0rtt"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 256,
                "action_name": "recv_packet",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "host",
                        "type": "endpoint_id"
                    },
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet"
                    }
                ],
                "called_from": [
                    {
                        "caller_func": "recv_packet",
                        "component": "quic_endpoint.ivy"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 257,
                "action_name": "recv_packet_mim",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "host",
                        "type": "endpoint_id"
                    },
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "stream_data"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 260,
                "action_name": "recv_packet_victim",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "host",
                        "type": "endpoint_id"
                    },
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "stream_data"
                    }
                ],
                "called_from": [
                    {
                        "caller_func": "recv_packet_victim",
                        "component": "quic_endpoint.ivy"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 807,
                "action_name": "recv_retry_pkt",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "spkt",
                        "type": "quic_packet_retry"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 728,
                "action_name": "recv_vn_pkt",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "spkt",
                        "type": "quic_packet_vn"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 865,
                "action_name": "reference_pkt_num",
                "implementation": [
                    {
                        "line": 864,
                        "file": "quic_shim.ivy",
                        "instruction": "    var h := prot.get_header_info(spkt,decrypt);\n"
                    },
                    {
                        "line": 865,
                        "file": "quic_shim.ivy",
                        "instruction": "    var e := packet_encryption_level(h);\n"
                    },
                    {
                        "line": 866,
                        "file": "quic_shim.ivy",
                        "instruction": "    var scid := packet_scid(h);\n"
                    },
                    {
                        "line": 867,
                        "file": "quic_shim.ivy",
                        "instruction": "    last_packet_type(scid)   := packet_encryption_level_up(h);\n"
                    },
                    {
                        "line": 868,
                        "file": "quic_shim.ivy",
                        "instruction": "    last_packet_length(scid) := h.payload_length;\n"
                    },
                    {
                        "line": 869,
                        "file": "quic_shim.ivy",
                        "instruction": "    pnum := last_pkt_num(scid,e);\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "pnum",
                    "type": "pkt_num"
                },
                "action_parameters": [
                    {
                        "name": "spkt",
                        "type": "stream_data"
                    },
                    {
                        "name": "decrypt",
                        "type": "bool"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 969,
                "action_name": "scid_size_pos",
                "implementation": [
                    {
                        "line": 968,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 969,
                        "file": "quic_shim.ivy",
                        "instruction": "    res = 0;\n"
                    },
                    {
                        "line": 970,
                        "file": "quic_shim.ivy",
                        "instruction": "    if(const char* env_p2 = std::getenv(\"TEST_TYPE\")) { \n"
                    },
                    {
                        "line": 971,
                        "file": "quic_shim.ivy",
                        "instruction": "      if(strcmp(env_p2, \"server\") == 0 || cond) {\n"
                    },
                    {
                        "line": 972,
                        "file": "quic_shim.ivy",
                        "instruction": "         if(const char* env_p3 = std::getenv(\"TEST_SCIL\")) {\n"
                    },
                    {
                        "line": 973,
                        "file": "quic_shim.ivy",
                        "instruction": "            std::cerr << \"TEST_SCIL \" << env_p3 << \"\\n\";\n"
                    },
                    {
                        "line": 974,
                        "file": "quic_shim.ivy",
                        "instruction": "\t        res = atoi(env_p3);\n"
                    },
                    {
                        "line": 975,
                        "file": "quic_shim.ivy",
                        "instruction": "         } else \n"
                    },
                    {
                        "line": 976,
                        "file": "quic_shim.ivy",
                        "instruction": "\t   res = 8;\n"
                    },
                    {
                        "line": 977,
                        "file": "quic_shim.ivy",
                        "instruction": "      } else \n"
                    },
                    {
                        "line": 978,
                        "file": "quic_shim.ivy",
                        "instruction": "\t  res = 8;\n"
                    },
                    {
                        "line": 979,
                        "file": "quic_shim.ivy",
                        "instruction": "    } else \n"
                    },
                    {
                        "line": 980,
                        "file": "quic_shim.ivy",
                        "instruction": "      res = 8;\n"
                    },
                    {
                        "line": 981,
                        "file": "quic_shim.ivy",
                        "instruction": "    std::cerr <<  \"scid_size_pos size: \" <<  res << \"\\n\";\n"
                    },
                    {
                        "line": 982,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "res",
                    "type": "stream_pos"
                },
                "action_parameters": [
                    {
                        "name": "cond",
                        "type": "bool"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "scid_size_pos",
                        "component": "quic_packet_retry.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 934,
                "action_name": "seqnum_to_streampos",
                "implementation": [
                    {
                        "line": 933,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 934,
                        "file": "quic_shim.ivy",
                        "instruction": "    res = c;\n"
                    },
                    {
                        "line": 935,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "res",
                    "type": "stream_pos"
                },
                "action_parameters": [
                    {
                        "name": "c",
                        "type": "pkt_num"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "seqnum_to_streampos",
                        "component": "quic_loss_recovery.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 319,
                "action_name": "show_biatch",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    }
                ],
                "called_from": [
                    {
                        "caller_func": "show_biatch",
                        "component": "quic_shim.ivy"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 269,
                "action_name": "show_last_datagram_size",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "size",
                        "type": "stream_pos"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 635,
                "action_name": "show_set_initial_keys",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "ik",
                        "type": "stream_data"
                    },
                    {
                        "name": "id",
                        "type": "tls_api.id"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 271,
                "action_name": "show_socket",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "n",
                        "type": "net.socket"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 940,
                "action_name": "streampos_to_seqnum",
                "implementation": [
                    {
                        "line": 939,
                        "file": "quic_shim.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 940,
                        "file": "quic_shim.ivy",
                        "instruction": "    res = c;\n"
                    },
                    {
                        "line": 941,
                        "file": "quic_shim.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "res",
                    "type": "pkt_num"
                },
                "action_parameters": [
                    {
                        "name": "c",
                        "type": "stream_pos"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "streampos_to_seqnum",
                        "component": "quic_loss_recovery.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "tls_api_name": "tls_api",
            "tls_api_object": [],
            "tls_api_module": {
                "module_parameters": [],
                "module_attributes": []
            },
            "actions": [
                {
                    "line": 297,
                    "action_name": "tls_api.lower.send",
                    "implementation": [
                        {
                            "line": 295,
                            "file": "quic_shim.ivy",
                            "instruction": "    #if dst_is_generated_tls(tls_id_to_src(tls_id)) { # For MiM agent, we dont wont for now TLS events\n"
                        },
                        {
                            "line": 296,
                            "file": "quic_shim.ivy",
                            "instruction": "        var early_data_end := stream_data.empty; # TODO global -> quic-go crash if not global\n"
                        },
                        {
                            "line": 297,
                            "file": "quic_shim.ivy",
                            "instruction": "        call show_biatch(tls_id_to_dst(tls_id));\n"
                        },
                        {
                            "line": 298,
                            "file": "quic_shim.ivy",
                            "instruction": "        early_data_end := early_data_end.append(0xff);\n"
                        },
                        {
                            "line": 299,
                            "file": "quic_shim.ivy",
                            "instruction": "        early_data_end := early_data_end.append(0xff);\n"
                        },
                        {
                            "line": 300,
                            "file": "quic_shim.ivy",
                            "instruction": "        early_data_end := early_data_end.append(0xff);\n"
                        },
                        {
                            "line": 301,
                            "file": "quic_shim.ivy",
                            "instruction": "        early_data_end := early_data_end.append(0xff);\n"
                        },
                        {
                            "line": 302,
                            "file": "quic_shim.ivy",
                            "instruction": "        # var e := quic_packet_type.initial if lev = 0\n"
                        },
                        {
                            "line": 303,
                            "file": "quic_shim.ivy",
                            "instruction": "        #          else (quic_packet_type.handshake if lev = 2 else quic_packet_type.one_rtt);\n"
                        },
                        {
                            "line": 304,
                            "file": "quic_shim.ivy",
                            "instruction": "        # if zero_rtt_allowed {\n"
                        },
                        {
                            "line": 305,
                            "file": "quic_shim.ivy",
                            "instruction": "        var e := quic_packet_type.initial if lev = 0\n"
                        },
                        {
                            "line": 306,
                            "file": "quic_shim.ivy",
                            "instruction": "                else (quic_packet_type.handshake if lev = 2 else quic_packet_type.zero_rtt);\n"
                        },
                        {
                            "line": 307,
                            "file": "quic_shim.ivy",
                            "instruction": "        if(bytes.value(0) = 0x4 & bytes.segment(bytes.end-4,bytes.end) = early_data_end) {\n"
                        },
                        {
                            "line": 308,
                            "file": "quic_shim.ivy",
                            "instruction": "            e := quic_packet_type.one_rtt; # TODO \n"
                        },
                        {
                            "line": 309,
                            "file": "quic_shim.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 310,
                            "file": "quic_shim.ivy",
                            "instruction": "        # };\n"
                        },
                        {
                            "line": 311,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 312,
                            "file": "quic_shim.ivy",
                            "instruction": "        var scid := tls_id_to_cid(tls_id);\n"
                        },
                        {
                            "line": 313,
                            "file": "quic_shim.ivy",
                            "instruction": "        call tls_send_event(tls_id_to_src(tls_id), tls_id_to_dst(tls_id), scid,\n"
                        },
                        {
                            "line": 314,
                            "file": "quic_shim.ivy",
                            "instruction": "                            0, bytes,crypto_data_end(scid,e),e, tls_id);\n"
                        },
                        {
                            "line": 315,
                            "file": "quic_shim.ivy",
                            "instruction": "    #}\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "tls_id",
                            "type": "tls_api.id"
                        },
                        {
                            "name": "bytes",
                            "type": "stream_data"
                        },
                        {
                            "name": "lev",
                            "type": "tls_api.lower.level"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [
                            {
                                "caller_func": "tls_api.lower.send",
                                "component": "quic_shim.ivy"
                            }
                        ],
                        "assertions": [
                            {
                                "line": 279,
                                "file": "quic_security.ivy",
                                "assertion": "require crypto_data_present(scid,e,cpos) -> crypto_data(scid,e).value(cpos) = byte;\n"
                            },
                            {
                                "line": 721,
                                "file": "quic_frame.ivy",
                                "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 723,
                                "file": "quic_frame.ivy",
                                "assertion": "require ~(e = quic_packet_type.initial) & ~(e = quic_packet_type.handshake); #& ~(e = quic_packet_type.handshake)\n"
                            },
                            {
                                "line": 724,
                                "file": "quic_frame.ivy",
                                "assertion": "require ~conn_closed(scid);\n"
                            },
                            {
                                "line": 739,
                                "file": "quic_frame.ivy",
                                "assertion": "require e = quic_packet_type.handshake -> established_handshake_keys(scid);  # [4]\n"
                            },
                            {
                                "line": 740,
                                "file": "quic_frame.ivy",
                                "assertion": "require e = quic_packet_type.one_rtt -> established_1rtt_keys(scid);  # [4]\n"
                            },
                            {
                                "line": 743,
                                "file": "quic_frame.ivy",
                                "assertion": "require ~(e = quic_packet_type.version_negociation) & ~(e = quic_packet_type.retry) & ~(e = quic_packet_type.zero_rtt);\n"
                            },
                            {
                                "line": 745,
                                "file": "quic_frame.ivy",
                                "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 761,
                                "file": "quic_frame.ivy",
                                "assertion": "require f.ack_ranges.end > 0;\n"
                            },
                            {
                                "line": 765,
                                "file": "quic_frame.ivy",
                                "assertion": "require idx > 0 -> ack_range.gap < last - 1;\n"
                            },
                            {
                                "line": 767,
                                "file": "quic_frame.ivy",
                                "assertion": "require ack_range.ranges <= upper;\n"
                            },
                            {
                                "line": 771,
                                "file": "quic_frame.ivy",
                                "assertion": "require sent_pkt(dcid,e,jdx);  # [1]\n"
                            },
                            {
                                "line": 793,
                                "file": "quic_frame.ivy",
                                "assertion": "require some_new_ack;\n"
                            },
                            {
                                "line": 794,
                                "file": "quic_frame.ivy",
                                "assertion": "require f.largest_acked = max_acked(dcid,e);\n"
                            },
                            {
                                "line": 275,
                                "file": "ivy_quic_client_behavior.ivy",
                                "assertion": "require scid = the_cid;\n"
                            }
                        ]
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 338,
                    "action_name": "tls_api.upper.keys_established",
                    "implementation": [
                        {
                            "line": 335,
                            "file": "quic_shim.ivy",
                            "instruction": "    # var e := quic_packet_type.handshake if lev = 2 else quic_packet_type.one_rtt;\n"
                        },
                        {
                            "line": 336,
                            "file": "quic_shim.ivy",
                            "instruction": "    # if zero_rtt_allowed {\n"
                        },
                        {
                            "line": 337,
                            "file": "quic_shim.ivy",
                            "instruction": "    var e := quic_packet_type.handshake if lev = 2 else quic_packet_type.zero_rtt;\n"
                        },
                        {
                            "line": 338,
                            "file": "quic_shim.ivy",
                            "instruction": "    # };\n"
                        },
                        {
                            "line": 339,
                            "file": "quic_shim.ivy",
                            "instruction": "    call tls_keys_established_event(tls_id_to_cid(tls_id),e); #tls_id = server.tls_id  for client ?\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "tls_id",
                            "type": "tls_api.id"
                        },
                        {
                            "name": "lev",
                            "type": "tls_api.upper.level"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "actions": {
                "line": 264,
                "action_name": "undecryptable_packet_event",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "host",
                        "type": "endpoint_id"
                    },
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "stream_data"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 267,
                "action_name": "undefined_host_error",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "host",
                        "type": "endpoint_id"
                    },
                    {
                        "name": "s",
                        "type": "net.socket"
                    },
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 809,
                "action_name": "version_not_found_event",
                "action_return": null,
                "exported": false,
                "action_parameters": null,
                "called_from": [],
                "events": true
            }
        },
        {
            "functions": [
                {
                    "name": "client_initial_rcid : cid\n",
                    "comment": "",
                    "line": 78,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "client_initial_scid : cid\n",
                    "comment": "",
                    "line": 79,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "client_initial_scil : stream_pos\n",
                    "comment": "",
                    "line": 80,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "client_initial_dcid : cid\n",
                    "comment": "",
                    "line": 81,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "client_initial_dcil : stream_pos\n",
                    "comment": "",
                    "line": 82,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "client_initial_version : version\n",
                    "comment": "",
                    "line": 83,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "nclients : stream_pos\n",
                    "comment": "",
                    "line": 105,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "the_cids : cids\n",
                    "comment": "",
                    "line": 107,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "server_cids : cids\n",
                    "comment": "",
                    "line": 108,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "last_datagram_received_size : stream_pos\n",
                    "comment": "",
                    "line": 125,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "initial_version : version ",
                    "comment": " init in each entities/test",
                    "line": 129,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "last_packet_type(C:cid) : quic_packet_type\n",
                    "comment": "",
                    "line": 165,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "last_packet_length(C:cid) : stream_pos\n",
                    "comment": "",
                    "line": 166,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "total_data_received: stream_pos\n",
                    "comment": "",
                    "line": 168,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "total_data_sent : stream_pos\n",
                    "comment": "",
                    "line": 169,
                    "file": "quic_shim.ivy"
                }
            ],
            "relations": [
                {
                    "name": "initial_keys_set(C:cid)\n",
                    "comment": "",
                    "line": 75,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "tp_client_set ",
                    "comment": " (C:cid) TODO strange segfault for level 2 not set with quant ",
                    "line": 76,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "client_non_zero_scil\n",
                    "comment": "",
                    "line": 85,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "zero_rtt_allowed\n",
                    "comment": "",
                    "line": 87,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "zero_rtt_sent\n",
                    "comment": "",
                    "line": 88,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "send_connection_close ",
                    "comment": " TODO, send co_close at end of test or not",
                    "line": 89,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "zero_rtt_client_test\n",
                    "comment": "",
                    "line": 101,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "zero_rtt_server_test ",
                    "comment": " TODO should be parameters",
                    "line": 102,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "allowed_migration \n",
                    "comment": "",
                    "line": 121,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "allowed_multiple_migration\n",
                    "comment": "",
                    "line": 122,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "first_datagram_received\n",
                    "comment": "",
                    "line": 124,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "version_negociated\n",
                    "comment": "",
                    "line": 128,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "negocation_of_version(E:ip.endpoint)\n",
                    "comment": "",
                    "line": 130,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "negocation_of_version_initiated(E:ip.endpoint)\n",
                    "comment": "",
                    "line": 131,
                    "file": "quic_shim.ivy"
                },
                {
                    "name": "version_not_found(E:ip.endpoint)\n",
                    "comment": "",
                    "line": 182,
                    "file": "quic_shim.ivy"
                }
            ]
        }
    ],
    "ivy_quic_client_behavior.ivy": [
        {
            "actions": {
                "line": 488,
                "action_name": "clear_packet",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "rnum",
                        "type": "pkt_num"
                    },
                    {
                        "name": "pkt",
                        "type": "stream_data"
                    }
                ],
                "called_from": [
                    {
                        "caller_func": "clear_packet",
                        "component": "quic_endpoint.ivy"
                    },
                    {
                        "caller_func": "clear_packet",
                        "component": "quic_endpoint.ivy"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 405,
                "action_name": "client_send_event",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": [
                        {
                            "line": 413,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    # is_not_sleeping := time_api.c_timer.is_sleep_fake_timeout;\n"
                        },
                        {
                            "line": 414,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    # require _generating -> is_not_sleeping;\n"
                        },
                        {
                            "line": 415,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    # if _generating {\n"
                        },
                        {
                            "line": 416,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        \n"
                        },
                        {
                            "line": 417,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    # };\n"
                        },
                        {
                            "line": 418,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    require s = current_stream;\n"
                        },
                        {
                            "line": 419,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    var tp := trans_params(the_cid);\n"
                        },
                        {
                            "line": 420,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 421,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    if version_negociated {\n"
                        },
                        {
                            "line": 422,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        require src = client_vn;\n"
                        },
                        {
                            "line": 423,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    } else {\n"
                        },
                        {
                            "line": 424,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        if ~disable_active_migration.is_set(tp) {\n"
                        },
                        {
                            "line": 425,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "            if ~migration_done | allowed_multiple_migration  { #only one migration\n"
                        },
                        {
                            "line": 426,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "                require src = client.ep | src = client_alt;\n"
                        },
                        {
                            "line": 427,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "            } else {\n"
                        },
                        {
                            "line": 428,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "                require src = client_alt;\n"
                        },
                        {
                            "line": 429,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "            }\n"
                        },
                        {
                            "line": 430,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        } else {\n"
                        },
                        {
                            "line": 431,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "            require src = client.ep;\n"
                        },
                        {
                            "line": 432,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        }\n"
                        },
                        {
                            "line": 433,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 434,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 435,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    require dst = server.ep;\n"
                        },
                        {
                            "line": 436,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    if ~zero_rtt_server_test | zero_rtt_sent {\n"
                        },
                        {
                            "line": 437,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        require connected(the_cid) & dcid = connected_to(the_cid);\n"
                        },
                        {
                            "line": 438,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    } else {\n"
                        },
                        {
                            "line": 439,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        require  dcid ~= the_cid;\n"
                        },
                        {
                            "line": 440,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 441,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    require stream_length(dcid,s) = stream_app_data_end(dcid,s);\n"
                        },
                        {
                            "line": 442,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    require stream_length(dcid,s) < end & end <= http_request.end;\n"
                        },
                        {
                            "line": 443,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    require current_stream < 60;\n"
                        },
                        {
                            "line": 444,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    ...\n"
                        },
                        {
                            "line": 445,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    while end < http_request.end & http_request.value(end) ~= 10 {\n"
                        },
                        {
                            "line": 446,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        end := end.next\n"
                        },
                        {
                            "line": 447,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 448,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    if end < http_request.end {\n"
                        },
                        {
                            "line": 449,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        end := end.next\n"
                        },
                        {
                            "line": 450,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 451,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    var data := http_request.segment(stream_length(dcid,s),end);\n"
                        },
                        {
                            "line": 452,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "#    call app_send_event(src,dst,dcid,s,data,end = http_request.end);\n"
                        },
                        {
                            "line": 453,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    call app_send_event(src,dst,dcid,s,data,stream_length(dcid,s),true);\n"
                        },
                        {
                            "line": 454,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    current_stream := current_stream + 4;\n"
                        }
                    ]
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "s",
                        "type": "stream_id"
                    },
                    {
                        "name": "end",
                        "type": "stream_pos"
                    }
                ],
                "exported": true,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [
                        {
                            "caller_func": "Environment",
                            "component": "Environment"
                        }
                    ],
                    "assertions": [
                        {
                            "line": 419,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require s = current_stream;\n"
                        },
                        {
                            "line": 423,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require src = client_vn;\n"
                        },
                        {
                            "line": 427,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require src = client.ep | src = client_alt;\n"
                        },
                        {
                            "line": 429,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require src = client_alt;\n"
                        },
                        {
                            "line": 432,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require src = client.ep;\n"
                        },
                        {
                            "line": 436,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require dst = server.ep;\n"
                        },
                        {
                            "line": 438,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require connected(the_cid) & dcid = connected_to(the_cid);\n"
                        },
                        {
                            "line": 440,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require  dcid ~= the_cid;\n"
                        },
                        {
                            "line": 442,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require stream_length(dcid,s) = stream_app_data_end(dcid,s);\n"
                        },
                        {
                            "line": 443,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require stream_length(dcid,s) < end & end <= http_request.end;\n"
                        },
                        {
                            "line": 444,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require current_stream < 60;\n"
                        },
                        {
                            "line": 1900,
                            "file": "quic_frame.ivy",
                            "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 1901,
                            "file": "quic_frame.ivy",
                            "assertion": "require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                        },
                        {
                            "line": 1903,
                            "file": "quic_frame.ivy",
                            "assertion": "require ~path_challenge_sent(dcid); # avoid auto response\n"
                        },
                        {
                            "line": 1905,
                            "file": "quic_frame.ivy",
                            "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                        },
                        {
                            "line": 1906,
                            "file": "quic_frame.ivy",
                            "assertion": "require f.data.end = 8;\n"
                        },
                        {
                            "line": 1907,
                            "file": "quic_frame.ivy",
                            "assertion": "require path_challenge_pending(scid,f.data);\n"
                        }
                    ]
                }
            }
        },
        {
            "actions": {
                "line": 97,
                "action_name": "dst_is_generated_tls",
                "implementation": [
                    {
                        "line": 96,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    res := dst = client.ep | dst = client_alt | dst = client_vn\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "res",
                    "type": "bool"
                },
                "action_parameters": [
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 37,
                "action_name": "endpoint_to_pid",
                "implementation": [
                    {
                        "line": 36,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    if src = client.ep {\n"
                    },
                    {
                        "line": 37,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "        pid := endpoint_id.client;\n"
                    },
                    {
                        "line": 38,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    } else if src = client_alt {\n"
                    },
                    {
                        "line": 39,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "        pid:= endpoint_id.client_alt;\n"
                    },
                    {
                        "line": 40,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    } else if src = client_vn {\n"
                    },
                    {
                        "line": 41,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "        pid:= endpoint_id.client_vn;\n"
                    },
                    {
                        "line": 42,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    } \n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "pid",
                    "type": "endpoint_id"
                },
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 63,
                "action_name": "endpoint_to_socket",
                "implementation": [
                    {
                        "line": 62,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    if src = client.ep {\n"
                    },
                    {
                        "line": 63,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "        socket := sock;\n"
                    },
                    {
                        "line": 64,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    } else if src = client_alt {\n"
                    },
                    {
                        "line": 65,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "        socket := sock_alt;\n"
                    },
                    {
                        "line": 66,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    } else if src = client_vn {\n"
                    },
                    {
                        "line": 67,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "        socket := sock_vn;\n"
                    },
                    {
                        "line": 68,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    } \n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "socket",
                    "type": "net.socket"
                },
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 484,
                "action_name": "show_tls_send_event",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "data",
                        "type": "stream_data"
                    },
                    {
                        "name": "pos",
                        "type": "stream_pos"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "tls_id",
                        "type": "tls_api.id"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 49,
                "action_name": "socket_endpoint",
                "implementation": [
                    {
                        "line": 48,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    src := client.ep if host = endpoint_id.client else (client_vn if version_negociated else client_alt)\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "src",
                    "type": "ip.endpoint"
                },
                "action_parameters": [
                    {
                        "name": "host",
                        "type": "endpoint_id"
                    },
                    {
                        "name": "s",
                        "type": "net.socket"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 53,
                "action_name": "socket_endpoint_mim",
                "implementation": [
                    {
                        "line": 52,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    dst := client.ep if (is_mim_standalone | src = mim_server_target.ep) else server.ep;\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "dst",
                    "type": "ip.endpoint"
                },
                "action_parameters": [
                    {
                        "name": "host",
                        "type": "endpoint_id"
                    },
                    {
                        "name": "s",
                        "type": "net.socket"
                    },
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 108,
                "action_name": "src_tls_id",
                "implementation": [
                    {
                        "line": 107,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    tls_id := client.tls_id if src = client.ep \n"
                    },
                    {
                        "line": 108,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    else second_client.tls_id; #TODO can cause error server vn eg\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "tls_id",
                    "type": "tls_api.id"
                },
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "src_tls_id",
                        "component": "quic_infer.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 86,
                "action_name": "tls_id_to_cid",
                "implementation": [
                    {
                        "line": 85,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    scid := the_cid;\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "scid",
                    "type": "cid"
                },
                "action_parameters": [
                    {
                        "name": "tls_id",
                        "type": "tls_api.id"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 80,
                "action_name": "tls_id_to_dst",
                "implementation": [
                    {
                        "line": 79,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    dst := server.ep if tls_id = client.tls_id else client.ep;\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "dst",
                    "type": "ip.endpoint"
                },
                "action_parameters": [
                    {
                        "name": "tls_id",
                        "type": "tls_api.id"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 73,
                "action_name": "tls_id_to_src",
                "implementation": [
                    {
                        "line": 72,
                        "file": "ivy_quic_client_behavior.ivy",
                        "instruction": "    src := client.ep if tls_id = client.tls_id & ~version_negociated else (client_vn if tls_id = client.tls_id & version_negociated else server.ep);\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "src",
                    "type": "ip.endpoint"
                },
                "action_parameters": [
                    {
                        "name": "tls_id",
                        "type": "tls_api.id"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "functions": [],
            "relations": []
        }
    ],
    "quic_ack_frequency_extension.ivy": [
        {
            "frame_ack_frequency_name": "ack_frequency",
            "frame_ack_frequency_object": [],
            "frame_ack_frequency_module": null,
            "actions": [
                {
                    "line": 37,
                    "action_name": "frame.ack_frequency.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": [
                            {
                                "line": 38,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 39,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 40,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            require (num_queued_frames(scid) > 0) -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 41,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            require e ~= quic_packet_type.zero_rtt;\n"
                            },
                            {
                                "line": 42,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            var tp  := trans_params(dcid);\n"
                            },
                            {
                                "line": 43,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            var tp2 := trans_params(scid);\n"
                            },
                            {
                                "line": 44,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            require  min_ack_delay.is_set(tp) | max_ack_delay.is_set(tp2);\n"
                            },
                            {
                                "line": 45,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            var ignore_order := (f.reordering_threshold = 0);\n"
                            },
                            {
                                "line": 46,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            var min : microseconds := min_ack_delay.value(trans_params(dcid)).exponent_8;\n"
                            },
                            {
                                "line": 47,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            require f.ack_eliciting_threshold >= 0;\n"
                            },
                            {
                                "line": 48,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            require f.request_max_ack_delay >= min; \n"
                            },
                            {
                                "line": 49,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            #require f.reordering_threshold = 1 | f.reordering_threshold = 0;\n"
                            },
                            {
                                "line": 50,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            require f.reordering_threshold >= 0;\n"
                            },
                            {
                                "line": 51,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            if first_ack_freq_received {\n"
                            },
                            {
                                "line": 52,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                require f.seq_num = 0;\n"
                            },
                            {
                                "line": 53,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                first_ack_freq_received := false;\n"
                            },
                            {
                                "line": 54,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                last_ack_freq_seq(dcid) := f.seq_num;\n"
                            },
                            {
                                "line": 55,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            } else {\n"
                            },
                            {
                                "line": 56,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                if _generating {\n"
                            },
                            {
                                "line": 57,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                    require f.seq_num > last_ack_freq_seq(dcid);\n"
                            },
                            {
                                "line": 58,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                } \n"
                            },
                            {
                                "line": 59,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            };\n"
                            },
                            {
                                "line": 60,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            ...\n"
                            },
                            {
                                "line": 61,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            if _generating {\n"
                            },
                            {
                                "line": 62,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                last_ack_freq_seq(dcid) := f.seq_num;\n"
                            },
                            {
                                "line": 63,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                ack_eliciting_threshold_val(dcid) := f.ack_eliciting_threshold;\n"
                            },
                            {
                                "line": 64,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                ack_out_of_order_val(dcid) := f.reordering_threshold;\n"
                            },
                            {
                                "line": 65,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                # On receiving a valid value in this field, the endpoint MUST \n"
                            },
                            {
                                "line": 66,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                # update its max_ack_delay to the value provided by the peer.\n"
                            },
                            {
                                "line": 67,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                max_ack_delay_tp :=  f.request_max_ack_delay\n"
                            },
                            {
                                "line": 68,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            } else {\n"
                            },
                            {
                                "line": 69,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                if f.seq_num <= last_ack_freq_seq(dcid) {\n"
                            },
                            {
                                "line": 70,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                    # duplicate\n"
                            },
                            {
                                "line": 71,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                } else {\n"
                            },
                            {
                                "line": 72,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                    last_ack_freq_seq(dcid) := f.seq_num;\n"
                            },
                            {
                                "line": 73,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                    ack_eliciting_threshold_val(dcid) := f.ack_eliciting_threshold;\n"
                            },
                            {
                                "line": 74,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                    ack_out_of_order_val(dcid) := f.reordering_threshold;\n"
                            },
                            {
                                "line": 75,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                    # On receiving a valid value in this field, the endpoint MUST \n"
                            },
                            {
                                "line": 76,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                    # update its max_ack_delay to the value provided by the peer.\n"
                            },
                            {
                                "line": 77,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                    max_ack_delay_tp :=  f.request_max_ack_delay\n"
                            },
                            {
                                "line": 78,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "                }\n"
                            },
                            {
                                "line": 79,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            }\n"
                            },
                            {
                                "line": 80,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            force_ack_frequency := true;\n"
                            },
                            {
                                "line": 81,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.ack_frequency"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.ack_frequency.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "frame_immediate_ack_name": "immediate_ack",
            "frame_immediate_ack_object": [],
            "frame_immediate_ack_module": null,
            "actions": [
                {
                    "line": 111,
                    "action_name": "frame.immediate_ack.handle",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": [
                            {
                                "line": 112,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            require connected(dcid) & connected_to(dcid) = scid;\n"
                            },
                            {
                                "line": 113,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                            },
                            {
                                "line": 114,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                            },
                            {
                                "line": 115,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            var tp := trans_params(dcid);\n"
                            },
                            {
                                "line": 116,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            require  min_ack_delay.is_set(tp);\n"
                            },
                            {
                                "line": 117,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            ...\n"
                            },
                            {
                                "line": 118,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            force_immediate_ack := false;\n"
                            },
                            {
                                "line": 119,
                                "file": "quic_ack_frequency_extension.ivy",
                                "instruction": "            call enqueue_frame(scid,f,e,false,seq_num);\n"
                            }
                        ]
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "f",
                            "type": "frame.immediate_ack"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "e",
                            "type": "quic_packet_type"
                        },
                        {
                            "name": "seq_num",
                            "type": "pkt_num"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "frame.immediate_ack.handle",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "functions": [],
            "relations": []
        }
    ],
    "quic_packet.ivy": [
        {
            "actions": {
                "line": 1541,
                "action_name": "handle_client_transport_parameters",
                "implementation": [
                    {
                        "line": 1539,
                        "file": "quic_packet.ivy",
                        "instruction": "#    call client_transport_parameters_event(src,dst,scid,tps);\n"
                    },
                    {
                        "line": 1540,
                        "file": "quic_packet.ivy",
                        "instruction": "    var idx := tps.transport_parameters.begin;\n"
                    },
                    {
                        "line": 1541,
                        "file": "quic_packet.ivy",
                        "instruction": "    while idx < tps.transport_parameters.end {\n"
                    },
                    {
                        "line": 1542,
                        "file": "quic_packet.ivy",
                        "instruction": "        trans_params(scid) := tps.transport_parameters.value(idx).set(trans_params(scid));\n"
                    },
                    {
                        "line": 1543,
                        "file": "quic_packet.ivy",
                        "instruction": "        idx := idx.next\n"
                    },
                    {
                        "line": 1544,
                        "file": "quic_packet.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 1545,
                        "file": "quic_packet.ivy",
                        "instruction": "    #require initial_max_stream_data_bidi_local.is_set(trans_params(scid));  # [1]\n"
                    },
                    {
                        "line": 1546,
                        "file": "quic_packet.ivy",
                        "instruction": "    #require initial_max_data.is_set(trans_params(scid));  # [2]\n"
                    },
                    {
                        "line": 1547,
                        "file": "quic_packet.ivy",
                        "instruction": "    #require max_idle_timeout.is_set(trans_params(scid));  # [3] TODO\n"
                    },
                    {
                        "line": 1548,
                        "file": "quic_packet.ivy",
                        "instruction": "    #require initial_max_stream_data_bidi_remote.is_set(trans_params(scid));  # [1]\n"
                    },
                    {
                        "line": 1549,
                        "file": "quic_packet.ivy",
                        "instruction": "    #require initial_max_stream_data_uni.is_set(trans_params(scid));  # [1]\n"
                    },
                    {
                        "line": 1550,
                        "file": "quic_packet.ivy",
                        "instruction": "    if ~ _generating  { \n"
                    },
                    {
                        "line": 1551,
                        "file": "quic_packet.ivy",
                        "instruction": "        # for tests where we check that the implementation behave well if not present \n"
                    },
                    {
                        "line": 1552,
                        "file": "quic_packet.ivy",
                        "instruction": "        if client_non_zero_scil & ~(scid = 1) & (client_initial_version = 0x00000001 | client_initial_version = 0x00000001){ # TODO \n"
                    },
                    {
                        "line": 1553,
                        "file": "quic_packet.ivy",
                        "instruction": "            require initial_source_connection_id.is_set(trans_params(scid));  # [5]\n"
                    },
                    {
                        "line": 1554,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 1555,
                        "file": "quic_packet.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 1556,
                        "file": "quic_packet.ivy",
                        "instruction": "    if is_client_hello {\n"
                    },
                    {
                        "line": 1557,
                        "file": "quic_packet.ivy",
                        "instruction": "        require ~stateless_reset_token.is_set(trans_params(scid));  # [4]\n"
                    },
                    {
                        "line": 1558,
                        "file": "quic_packet.ivy",
                        "instruction": "    } else {\n"
                    },
                    {
                        "line": 1559,
                        "file": "quic_packet.ivy",
                        "instruction": "        if ~ _generating & ~(scid = 1) {  # TODO\n"
                    },
                    {
                        "line": 1560,
                        "file": "quic_packet.ivy",
                        "instruction": "            require original_destination_connection_id.is_set(trans_params(scid));  # [6]\n"
                    },
                    {
                        "line": 1561,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 1562,
                        "file": "quic_packet.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 1563,
                        "file": "quic_packet.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 1564,
                        "file": "quic_packet.ivy",
                        "instruction": "    if ~is_client_hello & (retry_recv(client_initial_rcid) | retry_sent(client_initial_rcid)) & ~zero_length_token {\n"
                    },
                    {
                        "line": 1565,
                        "file": "quic_packet.ivy",
                        "instruction": "        require retry_source_connection_id.is_set(trans_params(scid));\n"
                    },
                    {
                        "line": 1566,
                        "file": "quic_packet.ivy",
                        "instruction": "        require retry_source_connection_id.value(trans_params(scid)).rcid = client_initial_rcid; # todo generalize\n"
                    },
                    {
                        "line": 1567,
                        "file": "quic_packet.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 1568,
                        "file": "quic_packet.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 1569,
                        "file": "quic_packet.ivy",
                        "instruction": "    if max_ack_delay.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 1570,
                        "file": "quic_packet.ivy",
                        "instruction": "        max_ack_delay_tp := milliseconds_to_microseconds(max_ack_delay.value(trans_params(scid)).exponent_8);\n"
                    },
                    {
                        "line": 1571,
                        "file": "quic_packet.ivy",
                        "instruction": "        call show_max_ack_delay(max_ack_delay_tp);\n"
                    },
                    {
                        "line": 1572,
                        "file": "quic_packet.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 1573,
                        "file": "quic_packet.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 1574,
                        "file": "quic_packet.ivy",
                        "instruction": "    if ack_delay_exponent.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 1575,
                        "file": "quic_packet.ivy",
                        "instruction": "        require ack_delay_exponent.value(trans_params(scid)).exponent_8 <= 20;\n"
                    },
                    {
                        "line": 1576,
                        "file": "quic_packet.ivy",
                        "instruction": "        ack_delay_exponent_tp := ack_delay_exponent.value(trans_params(scid)).exponent_8;\n"
                    },
                    {
                        "line": 1577,
                        "file": "quic_packet.ivy",
                        "instruction": "        call show_ack_delay_exponent(ack_delay_exponent_tp);\n"
                    },
                    {
                        "line": 1578,
                        "file": "quic_packet.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 1579,
                        "file": "quic_packet.ivy",
                        "instruction": "    \n"
                    },
                    {
                        "line": 1580,
                        "file": "quic_packet.ivy",
                        "instruction": "    # [7]\n"
                    },
                    {
                        "line": 1581,
                        "file": "quic_packet.ivy",
                        "instruction": "    if min_ack_delay.is_set(trans_params(scid)) & max_ack_delay.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 1582,
                        "file": "quic_packet.ivy",
                        "instruction": "        var min_ack_milli := min_ack_delay.value(trans_params(scid)).exponent_8; #  * 1000;\n"
                    },
                    {
                        "line": 1583,
                        "file": "quic_packet.ivy",
                        "instruction": "        require  min_ack_milli < milliseconds_to_microseconds(max_ack_delay.value(trans_params(scid)).exponent_8);  # [1]\n"
                    },
                    {
                        "line": 1584,
                        "file": "quic_packet.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 1585,
                        "file": "quic_packet.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 1586,
                        "file": "quic_packet.ivy",
                        "instruction": "    # Chris\n"
                    },
                    {
                        "line": 1587,
                        "file": "quic_packet.ivy",
                        "instruction": "    # If a max_idle_timeout is specified by either endpoint in its transport parameters (Section 18.2), the connection is silently closed \n"
                    },
                    {
                        "line": 1588,
                        "file": "quic_packet.ivy",
                        "instruction": "    # and its state is discarded when it remains idle for longer than the minimum of the max_idle_timeout value advertised by both endpoints.\n"
                    },
                    {
                        "line": 1589,
                        "file": "quic_packet.ivy",
                        "instruction": "    # -> An endpoint that sends packets close to the effective timeout risks having them be discarded at the peer, since the idle timeout \n"
                    },
                    {
                        "line": 1590,
                        "file": "quic_packet.ivy",
                        "instruction": "    # period might have expired at the peer before these packets arrive.\n"
                    },
                    {
                        "line": 1591,
                        "file": "quic_packet.ivy",
                        "instruction": "    if max_idle_timeout.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 1592,
                        "file": "quic_packet.ivy",
                        "instruction": "        if is_client_hello {\n"
                    },
                    {
                        "line": 1593,
                        "file": "quic_packet.ivy",
                        "instruction": "            max_idle_timeout_client := milliseconds_to_microseconds(max_idle_timeout.value(trans_params(scid)).seconds_16)\n"
                    },
                    {
                        "line": 1594,
                        "file": "quic_packet.ivy",
                        "instruction": "        } else {\n"
                    },
                    {
                        "line": 1595,
                        "file": "quic_packet.ivy",
                        "instruction": "            max_idle_timeout_server := milliseconds_to_microseconds(max_idle_timeout.value(trans_params(scid)).seconds_16)\n"
                    },
                    {
                        "line": 1596,
                        "file": "quic_packet.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 1597,
                        "file": "quic_packet.ivy",
                        "instruction": "        if max_idle_timeout_client = 0 {\n"
                    },
                    {
                        "line": 1598,
                        "file": "quic_packet.ivy",
                        "instruction": "            max_idle_timeout_used := max_idle_timeout_server;\n"
                    },
                    {
                        "line": 1599,
                        "file": "quic_packet.ivy",
                        "instruction": "        } else if max_idle_timeout_server = 0 {\n"
                    },
                    {
                        "line": 1600,
                        "file": "quic_packet.ivy",
                        "instruction": "            max_idle_timeout_used := max_idle_timeout_client;\n"
                    },
                    {
                        "line": 1601,
                        "file": "quic_packet.ivy",
                        "instruction": "        } else if max_idle_timeout_server < max_idle_timeout_client {\n"
                    },
                    {
                        "line": 1602,
                        "file": "quic_packet.ivy",
                        "instruction": "            max_idle_timeout_used := max_idle_timeout_server;\n"
                    },
                    {
                        "line": 1603,
                        "file": "quic_packet.ivy",
                        "instruction": "        } else {\n"
                    },
                    {
                        "line": 1604,
                        "file": "quic_packet.ivy",
                        "instruction": "            max_idle_timeout_used := max_idle_timeout_client;\n"
                    },
                    {
                        "line": 1605,
                        "file": "quic_packet.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 1606,
                        "file": "quic_packet.ivy",
                        "instruction": "        call max_idle_timeout_update(max_idle_timeout_used);\n"
                    },
                    {
                        "line": 1607,
                        "file": "quic_packet.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 1608,
                        "file": "quic_packet.ivy",
                        "instruction": "    # var initial_max_stream_data_uni_server_0rtt : stream_pos_32;\n"
                    },
                    {
                        "line": 1609,
                        "file": "quic_packet.ivy",
                        "instruction": "    # var initial_max_stream_data_bidi_remote_server_0rtt : stream_pos_32;\n"
                    },
                    {
                        "line": 1610,
                        "file": "quic_packet.ivy",
                        "instruction": "    # var initial_max_data_server_0rtt : stream_pos_32;\n"
                    },
                    {
                        "line": 1611,
                        "file": "quic_packet.ivy",
                        "instruction": "    # var initial_max_stream_data_bidi_local_server_0rtt : stream_pos_32;\n"
                    },
                    {
                        "line": 1612,
                        "file": "quic_packet.ivy",
                        "instruction": "    # var initial_max_stream_id_bidi_server_0rtt : stream_pos_32;\n"
                    },
                    {
                        "line": 1613,
                        "file": "quic_packet.ivy",
                        "instruction": "    # var active_connection_id_limit_server_0rtt : stream_pos_32;\n"
                    },
                    {
                        "line": 1614,
                        "file": "quic_packet.ivy",
                        "instruction": "    # [6-0rtt]\n"
                    },
                    {
                        "line": 1615,
                        "file": "quic_packet.ivy",
                        "instruction": "    \n"
                    },
                    {
                        "line": 1616,
                        "file": "quic_packet.ivy",
                        "instruction": "    if zero_rtt_server_test & ~is_client_hello {\n"
                    },
                    {
                        "line": 1617,
                        "file": "quic_packet.ivy",
                        "instruction": "        if initial_max_stream_data_uni.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 1618,
                        "file": "quic_packet.ivy",
                        "instruction": "            require initial_max_stream_data_uni.value(trans_params(scid)).stream_pos_32 >= initial_max_stream_data_uni_server_0rtt; # todo generalize\n"
                    },
                    {
                        "line": 1619,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 1620,
                        "file": "quic_packet.ivy",
                        "instruction": "        if initial_max_stream_data_bidi_remote.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 1621,
                        "file": "quic_packet.ivy",
                        "instruction": "            require initial_max_stream_data_bidi_remote.value(trans_params(scid)).stream_pos_32 >= initial_max_stream_data_bidi_remote_server_0rtt; # todo generalize\n"
                    },
                    {
                        "line": 1622,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 1623,
                        "file": "quic_packet.ivy",
                        "instruction": "        if initial_max_data.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 1624,
                        "file": "quic_packet.ivy",
                        "instruction": "            require initial_max_data.value(trans_params(scid)).stream_pos_32 >= initial_max_data_server_0rtt; # todo generalize\n"
                    },
                    {
                        "line": 1625,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 1626,
                        "file": "quic_packet.ivy",
                        "instruction": "        if initial_max_stream_data_bidi_local.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 1627,
                        "file": "quic_packet.ivy",
                        "instruction": "            require initial_max_stream_data_bidi_local.value(trans_params(scid)).stream_pos_32 >= initial_max_stream_data_bidi_local_server_0rtt; # todo generalize\n"
                    },
                    {
                        "line": 1628,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 1629,
                        "file": "quic_packet.ivy",
                        "instruction": "        if initial_max_stream_id_bidi.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 1630,
                        "file": "quic_packet.ivy",
                        "instruction": "            require initial_max_stream_id_bidi.value(trans_params(scid)).stream_id_16 >= initial_max_stream_id_bidi_server_0rtt; # todo generalize\n"
                    },
                    {
                        "line": 1631,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 1632,
                        "file": "quic_packet.ivy",
                        "instruction": "        if active_connection_id_limit.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 1633,
                        "file": "quic_packet.ivy",
                        "instruction": "            require active_connection_id_limit.value(trans_params(scid)).stream_pos_32 >= active_connection_id_limit_server_0rtt; # todo generalize\n"
                    },
                    {
                        "line": 1634,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 1635,
                        "file": "quic_packet.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 1636,
                        "file": "quic_packet.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 1637,
                        "file": "quic_packet.ivy",
                        "instruction": "    # save server TPs\n"
                    },
                    {
                        "line": 1638,
                        "file": "quic_packet.ivy",
                        "instruction": "    if ~is_client_hello {\n"
                    },
                    {
                        "line": 1639,
                        "file": "quic_packet.ivy",
                        "instruction": "        if initial_max_stream_data_uni.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 1640,
                        "file": "quic_packet.ivy",
                        "instruction": "            call tls_api.upper.save_initial_max_stream_data_uni(initial_max_stream_data_uni.value(trans_params(scid)).stream_pos_32);\n"
                    },
                    {
                        "line": 1641,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 1642,
                        "file": "quic_packet.ivy",
                        "instruction": "        if initial_max_stream_data_bidi_remote.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 1643,
                        "file": "quic_packet.ivy",
                        "instruction": "            call tls_api.upper.save_initial_max_stream_data_bidi_remote(initial_max_stream_data_bidi_remote.value(trans_params(scid)).stream_pos_32);\n"
                    },
                    {
                        "line": 1644,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 1645,
                        "file": "quic_packet.ivy",
                        "instruction": "        if initial_max_data.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 1646,
                        "file": "quic_packet.ivy",
                        "instruction": "            call tls_api.upper.save_initial_max_data(initial_max_data.value(trans_params(scid)).stream_pos_32);\n"
                    },
                    {
                        "line": 1647,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 1648,
                        "file": "quic_packet.ivy",
                        "instruction": "        if initial_max_stream_data_bidi_local.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 1649,
                        "file": "quic_packet.ivy",
                        "instruction": "            call tls_api.upper.save_initial_max_stream_data_bidi_local(initial_max_stream_data_bidi_local.value(trans_params(scid)).stream_pos_32);\n"
                    },
                    {
                        "line": 1650,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 1651,
                        "file": "quic_packet.ivy",
                        "instruction": "        if initial_max_stream_id_bidi.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 1652,
                        "file": "quic_packet.ivy",
                        "instruction": "            call tls_api.upper.save_initial_max_stream_id_bidi(initial_max_stream_id_bidi.value(trans_params(scid)).stream_id_16);\n"
                    },
                    {
                        "line": 1653,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 1654,
                        "file": "quic_packet.ivy",
                        "instruction": "        if active_connection_id_limit.is_set(trans_params(scid)) {\n"
                    },
                    {
                        "line": 1655,
                        "file": "quic_packet.ivy",
                        "instruction": "            call tls_api.upper.save_active_connection_id_limit(active_connection_id_limit.value(trans_params(scid)).stream_pos_32);\n"
                    },
                    {
                        "line": 1656,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 1657,
                        "file": "quic_packet.ivy",
                        "instruction": "    }\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "tps",
                        "type": "quic_transport_parameters"
                    },
                    {
                        "name": "is_client_hello",
                        "type": "bool"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "handle_client_transport_parameters",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "milliseconds_to_microseconds",
                        "component": "quic_packet.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [
                        {
                            "caller_func": "handle_tls_extensions",
                            "component": "quic_packet.ivy"
                        }
                    ],
                    "assertions": [
                        {
                            "line": 1554,
                            "file": "quic_packet.ivy",
                            "assertion": "require initial_source_connection_id.is_set(trans_params(scid));  # [5]\n"
                        },
                        {
                            "line": 1558,
                            "file": "quic_packet.ivy",
                            "assertion": "require ~stateless_reset_token.is_set(trans_params(scid));  # [4]\n"
                        },
                        {
                            "line": 1561,
                            "file": "quic_packet.ivy",
                            "assertion": "require original_destination_connection_id.is_set(trans_params(scid));  # [6]\n"
                        },
                        {
                            "line": 1566,
                            "file": "quic_packet.ivy",
                            "assertion": "require retry_source_connection_id.is_set(trans_params(scid));\n"
                        },
                        {
                            "line": 1567,
                            "file": "quic_packet.ivy",
                            "assertion": "require retry_source_connection_id.value(trans_params(scid)).rcid = client_initial_rcid; # todo generalize\n"
                        },
                        {
                            "line": 1576,
                            "file": "quic_packet.ivy",
                            "assertion": "require ack_delay_exponent.value(trans_params(scid)).exponent_8 <= 20;\n"
                        },
                        {
                            "line": 1584,
                            "file": "quic_packet.ivy",
                            "assertion": "require  min_ack_milli < milliseconds_to_microseconds(max_ack_delay.value(trans_params(scid)).exponent_8);  # [1]\n"
                        },
                        {
                            "line": 1619,
                            "file": "quic_packet.ivy",
                            "assertion": "require initial_max_stream_data_uni.value(trans_params(scid)).stream_pos_32 >= initial_max_stream_data_uni_server_0rtt; # todo generalize\n"
                        },
                        {
                            "line": 1622,
                            "file": "quic_packet.ivy",
                            "assertion": "require initial_max_stream_data_bidi_remote.value(trans_params(scid)).stream_pos_32 >= initial_max_stream_data_bidi_remote_server_0rtt; # todo generalize\n"
                        },
                        {
                            "line": 1625,
                            "file": "quic_packet.ivy",
                            "assertion": "require initial_max_data.value(trans_params(scid)).stream_pos_32 >= initial_max_data_server_0rtt; # todo generalize\n"
                        },
                        {
                            "line": 1628,
                            "file": "quic_packet.ivy",
                            "assertion": "require initial_max_stream_data_bidi_local.value(trans_params(scid)).stream_pos_32 >= initial_max_stream_data_bidi_local_server_0rtt; # todo generalize\n"
                        },
                        {
                            "line": 1631,
                            "file": "quic_packet.ivy",
                            "assertion": "require initial_max_stream_id_bidi.value(trans_params(scid)).stream_id_16 >= initial_max_stream_id_bidi_server_0rtt; # todo generalize\n"
                        },
                        {
                            "line": 1634,
                            "file": "quic_packet.ivy",
                            "assertion": "require active_connection_id_limit.value(trans_params(scid)).stream_pos_32 >= active_connection_id_limit_server_0rtt; # todo generalize\n"
                        },
                        {
                            "line": 1445,
                            "file": "quic_frame.ivy",
                            "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 1446,
                            "file": "quic_frame.ivy",
                            "assertion": "require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                        },
                        {
                            "line": 1450,
                            "file": "quic_frame.ivy",
                            "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                        },
                        {
                            "line": 1451,
                            "file": "quic_frame.ivy",
                            "assertion": "require stream_seen(scid,f.id);\n"
                        },
                        {
                            "line": 364,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require scid = the_cid;\n"
                        },
                        {
                            "line": 365,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require 4 <= f.id & f.id <= 16;\n"
                        },
                        {
                            "line": 1900,
                            "file": "quic_frame.ivy",
                            "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 1901,
                            "file": "quic_frame.ivy",
                            "assertion": "require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                        },
                        {
                            "line": 1903,
                            "file": "quic_frame.ivy",
                            "assertion": "require ~path_challenge_sent(dcid); # avoid auto response\n"
                        },
                        {
                            "line": 1905,
                            "file": "quic_frame.ivy",
                            "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                        },
                        {
                            "line": 1906,
                            "file": "quic_frame.ivy",
                            "assertion": "require f.data.end = 8;\n"
                        },
                        {
                            "line": 1907,
                            "file": "quic_frame.ivy",
                            "assertion": "require path_challenge_pending(scid,f.data);\n"
                        },
                        {
                            "line": 1550,
                            "file": "quic_frame.ivy",
                            "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 1551,
                            "file": "quic_frame.ivy",
                            "assertion": "require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                        },
                        {
                            "line": 1552,
                            "file": "quic_frame.ivy",
                            "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                        }
                    ]
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 1495,
                "action_name": "handle_tls_extensions",
                "implementation": [
                    {
                        "line": 1491,
                        "file": "quic_packet.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 1492,
                        "file": "quic_packet.ivy",
                        "instruction": "    # We process the extensions in a message in order.\n"
                    },
                    {
                        "line": 1493,
                        "file": "quic_packet.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 1494,
                        "file": "quic_packet.ivy",
                        "instruction": "    var idx := exts.begin;\n"
                    },
                    {
                        "line": 1495,
                        "file": "quic_packet.ivy",
                        "instruction": "    while idx < exts.end {\n"
                    },
                    {
                        "line": 1496,
                        "file": "quic_packet.ivy",
                        "instruction": "        var ext := exts.value(idx);\n"
                    },
                    {
                        "line": 1497,
                        "file": "quic_packet.ivy",
                        "instruction": "            \n"
                    },
                    {
                        "line": 1498,
                        "file": "quic_packet.ivy",
                        "instruction": "        # For every `quic_transport_parameters` extension...\n"
                    },
                    {
                        "line": 1499,
                        "file": "quic_packet.ivy",
                        "instruction": "        if some (tps:quic_transport_parameters) ext *> tps {\n"
                    },
                    {
                        "line": 1500,
                        "file": "quic_packet.ivy",
                        "instruction": "            call handle_client_transport_parameters(src,dst,scid,tps,is_client_hello);\n"
                    },
                    {
                        "line": 1501,
                        "file": "quic_packet.ivy",
                        "instruction": "            trans_params_set(scid) := true;\n"
                    },
                    {
                        "line": 1502,
                        "file": "quic_packet.ivy",
                        "instruction": "        };\n"
                    },
                    {
                        "line": 1503,
                        "file": "quic_packet.ivy",
                        "instruction": "        idx := idx.next\n"
                    },
                    {
                        "line": 1504,
                        "file": "quic_packet.ivy",
                        "instruction": "    };\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "exts",
                        "type": "vector[tls.extension]"
                    },
                    {
                        "name": "is_client_hello",
                        "type": "bool"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "handle_tls_extensions",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "handle_tls_extensions",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "handle_tls_extensions",
                        "component": "quic_packet.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 1467,
                "action_name": "handle_tls_handshake",
                "implementation": [
                    {
                        "line": 1467,
                        "file": "quic_packet.ivy",
                        "instruction": "    if some(ch:tls.client_hello) hs *> ch {\n"
                    },
                    {
                        "line": 1468,
                        "file": "quic_packet.ivy",
                        "instruction": "        is_client(scid) := true;\n"
                    },
                    {
                        "line": 1469,
                        "file": "quic_packet.ivy",
                        "instruction": "        call handle_tls_extensions(src,dst,scid,ch.extensions,true);\n"
                    },
                    {
                        "line": 1470,
                        "file": "quic_packet.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 1471,
                        "file": "quic_packet.ivy",
                        "instruction": "    else if some(sh:tls.server_hello) hs *> sh {\n"
                    },
                    {
                        "line": 1472,
                        "file": "quic_packet.ivy",
                        "instruction": "#        call map_cids(src,scid,dcid);    # [1]\n"
                    },
                    {
                        "line": 1473,
                        "file": "quic_packet.ivy",
                        "instruction": "#        call map_cids(dst,dcid,scid);\n"
                    },
                    {
                        "line": 1474,
                        "file": "quic_packet.ivy",
                        "instruction": "        call handle_tls_extensions(src,dst,scid,sh.extensions,false);\n"
                    },
                    {
                        "line": 1475,
                        "file": "quic_packet.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 1476,
                        "file": "quic_packet.ivy",
                        "instruction": "    else if some(ee:tls.encrypted_extensions) hs *> ee {\n"
                    },
                    {
                        "line": 1477,
                        "file": "quic_packet.ivy",
                        "instruction": "        call handle_tls_extensions(src,dst,scid,ee.extensions,false);\n"
                    },
                    {
                        "line": 1478,
                        "file": "quic_packet.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 1479,
                        "file": "quic_packet.ivy",
                        "instruction": "    if some(fh:tls.finished) hs *> fh {\n"
                    },
                    {
                        "line": 1480,
                        "file": "quic_packet.ivy",
                        "instruction": "        tls_handshake_finished := true;\n"
                    },
                    {
                        "line": 1481,
                        "file": "quic_packet.ivy",
                        "instruction": "    }\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "hs",
                        "type": "tls.handshake"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 1662,
                "action_name": "max_idle_timeout_update",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "e",
                        "type": "microseconds"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 136,
                "action_name": "packet_event",
                "implementation": [
                    {
                        "line": 136,
                        "file": "quic_packet.ivy",
                        "instruction": "\n"
                    }
                ],
                "monitor": {
                    "before": [
                        {
                            "line": 186,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    if _generating {\n"
                        },
                        {
                            "line": 187,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        var tp := trans_params(the_cid);\n"
                        },
                        {
                            "line": 188,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        if version_negociated {\n"
                        },
                        {
                            "line": 189,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "            require src = client_vn;\n"
                        },
                        {
                            "line": 190,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        } else {\n"
                        },
                        {
                            "line": 191,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "            if ~disable_active_migration.is_set(tp) {\n"
                        },
                        {
                            "line": 192,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "                if ~migration_done | allowed_multiple_migration { \n"
                        },
                        {
                            "line": 193,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "                    #only one migration\n"
                        },
                        {
                            "line": 194,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "                    require src = client.ep | src = client_alt;\n"
                        },
                        {
                            "line": 195,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "                } else {\n"
                        },
                        {
                            "line": 196,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "                    require src = client_alt;\n"
                        },
                        {
                            "line": 197,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "                }\n"
                        },
                        {
                            "line": 198,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "            } else {\n"
                        },
                        {
                            "line": 199,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "                require src = client.ep;\n"
                        },
                        {
                            "line": 200,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "            }\n"
                        },
                        {
                            "line": 201,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 202,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        require dst = server.ep;\n"
                        },
                        {
                            "line": 203,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        #require pkt.token.end = 0; \n"
                        },
                        {
                            "line": 204,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        if pkt.ptype = quic_packet_type.initial & retry_recv(pkt.src_cid) & ~zero_length_token {\n"
                        },
                        {
                            "line": 205,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "            require pkt.token = retry_token(pkt.src_cid); # TODO new_token\n"
                        },
                        {
                            "line": 206,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        } else {\n"
                        },
                        {
                            "line": 207,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "            require pkt.token.end = 0; \n"
                        },
                        {
                            "line": 208,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 209,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 210,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    if final_version = 0x00000000 {\n"
                        },
                        {
                            "line": 211,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        #require pkt.long -> pkt.pversion = 0xff00001d  #version 29\n"
                        },
                        {
                            "line": 212,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        #require pkt.long -> pkt.pversion = 0xff000020  #version 32\n"
                        },
                        {
                            "line": 213,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        #require pkt.long -> pkt.pversion = 0xff00001e  #version 30\n"
                        },
                        {
                            "line": 214,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        require pkt.long -> pkt.pversion = initial_version  #version 30\n"
                        },
                        {
                            "line": 215,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    } else {\n"
                        },
                        {
                            "line": 216,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "        require pkt.long -> pkt.pversion = final_version\n"
                        },
                        {
                            "line": 217,
                            "file": "ivy_quic_client_behavior.ivy",
                            "instruction": "    };\n"
                        }
                    ],
                    "after": [
                        {
                            "line": 37,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "    if _generating {  # & ~conn_closed(pkt.the_cid) # TODO\n"
                        },
                        {
                            "line": 38,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        var spkt := pkt_serdes.to_bytes(pkt);\n"
                        },
                        {
                            "line": 39,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        var rnum := reference_pkt_num(spkt,false);\n"
                        },
                        {
                            "line": 40,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        var tls_id := src_tls_id(src);\n"
                        },
                        {
                            "line": 41,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        var ppkt := prot.encrypt(tls_id,rnum,spkt);\n"
                        },
                        {
                            "line": 42,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        var pkts := prot.arr.empty;\n"
                        },
                        {
                            "line": 43,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        pkts := pkts.append(ppkt);\n"
                        },
                        {
                            "line": 44,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        call on_packet_sent(src,dst,pkt, ppkt.size);\n"
                        },
                        {
                            "line": 45,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        total_data_sent := total_data_sent + ppkt.size;\n"
                        },
                        {
                            "line": 46,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        call net.send(endpoint_to_pid(src),endpoint_to_socket(src),dst,pkts);\n"
                        },
                        {
                            "line": 47,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "    }\n"
                        }
                    ],
                    "around": [
                        {
                            "line": 404,
                            "file": "quic_packet.ivy",
                            "instruction": "    # is_not_sleeping := time_api.c_timer.is_sleep_fake_timeout;\n"
                        },
                        {
                            "line": 405,
                            "file": "quic_packet.ivy",
                            "instruction": "    call show_is_sleep_fake_timeout(is_not_sleeping);\n"
                        },
                        {
                            "line": 406,
                            "file": "quic_packet.ivy",
                            "instruction": "    # require _generating -> is_not_sleeping;\n"
                        },
                        {
                            "line": 407,
                            "file": "quic_packet.ivy",
                            "instruction": "    # require (_generating  -> is_not_sleeping);\n"
                        },
                        {
                            "line": 408,
                            "file": "quic_packet.ivy",
                            "instruction": "    # require (~is_not_sleeping -> ~_generating);\n"
                        },
                        {
                            "line": 409,
                            "file": "quic_packet.ivy",
                            "instruction": "    if _generating {\n"
                        },
                        {
                            "line": 410,
                            "file": "quic_packet.ivy",
                            "instruction": "       # require ~is_not_sleeping;\n"
                        },
                        {
                            "line": 411,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 412,
                            "file": "quic_packet.ivy",
                            "instruction": "    if ~_generating {\n"
                        },
                        {
                            "line": 413,
                            "file": "quic_packet.ivy",
                            "instruction": "        dst_endpoint := dst;\n"
                        },
                        {
                            "line": 414,
                            "file": "quic_packet.ivy",
                            "instruction": "    } else {\n"
                        },
                        {
                            "line": 415,
                            "file": "quic_packet.ivy",
                            "instruction": "        # var local_ack_delay := on_ack_sent(max_acked(dcid,e) ,e);\n"
                        },
                        {
                            "line": 416,
                            "file": "quic_packet.ivy",
                            "instruction": "                # require local_ack_delay <= local_max_ack_delay_tp;\n"
                        },
                        {
                            "line": 417,
                            "file": "quic_packet.ivy",
                            "instruction": "        \n"
                        },
                        {
                            "line": 418,
                            "file": "quic_packet.ivy",
                            "instruction": "    }\n"
                        },
                        {
                            "line": 419,
                            "file": "quic_packet.ivy",
                            "instruction": "   \n"
                        },
                        {
                            "line": 420,
                            "file": "quic_packet.ivy",
                            "instruction": "    if _generating  {\n"
                        },
                        {
                            "line": 421,
                            "file": "quic_packet.ivy",
                            "instruction": "        require ~need_sent_ack_eliciting_application_packet & ~need_sent_ack_eliciting_handshake_packet & ~need_sent_ack_eliciting_initial_packet;\n"
                        },
                        {
                            "line": 422,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 423,
                            "file": "quic_packet.ivy",
                            "instruction": "    require pkt.ptype ~= quic_packet_type.zero_rtt & pkt.ptype ~= quic_packet_type.version_negociation & pkt.ptype ~= quic_packet_type.retry;\n"
                        },
                        {
                            "line": 424,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 425,
                            "file": "quic_packet.ivy",
                            "instruction": "    # Extract the source and destination cid's and packet number from the packet.\n"
                        },
                        {
                            "line": 426,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 427,
                            "file": "quic_packet.ivy",
                            "instruction": "    var dcid := pkt.dst_cid;\n"
                        },
                        {
                            "line": 428,
                            "file": "quic_packet.ivy",
                            "instruction": "    var scid := pkt.src_cid;\n"
                        },
                        {
                            "line": 429,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 430,
                            "file": "quic_packet.ivy",
                            "instruction": "    if cid_mapped(dcid) {\n"
                        },
                        {
                            "line": 431,
                            "file": "quic_packet.ivy",
                            "instruction": "\t    dcid := cid_to_aid(dcid);\n"
                        },
                        {
                            "line": 432,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 433,
                            "file": "quic_packet.ivy",
                            "instruction": "    #require (~is_not_sleeping -> (num_queued_frames(scid) = 0)); # & ~_generating));\n"
                        },
                        {
                            "line": 434,
                            "file": "quic_packet.ivy",
                            "instruction": "    idle_timeout(dcid) := time_api.c_timer.now_micros_last_bp;\n"
                        },
                        {
                            "line": 435,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 436,
                            "file": "quic_packet.ivy",
                            "instruction": "    call show_current_idle_timeout(idle_timeout(dcid));\n"
                        },
                        {
                            "line": 437,
                            "file": "quic_packet.ivy",
                            "instruction": "    call show_current_idle_timeout(idle_timeout(scid));\n"
                        },
                        {
                            "line": 438,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 439,
                            "file": "quic_packet.ivy",
                            "instruction": "    is_retransmitted(pkt.payload) := is_retransmitted(pkt.payload) + 1;\n"
                        },
                        {
                            "line": 440,
                            "file": "quic_packet.ivy",
                            "instruction": "    call show_is_retransmitted(seqnum_to_streampos(pkt.seq_num),is_retransmitted(pkt.payload));\n"
                        },
                        {
                            "line": 441,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 442,
                            "file": "quic_packet.ivy",
                            "instruction": "    if max_idle_timeout_used > 0 {\n"
                        },
                        {
                            "line": 443,
                            "file": "quic_packet.ivy",
                            "instruction": "        if idle_timeout(dcid) > max_idle_timeout_used  {\n"
                        },
                        {
                            "line": 444,
                            "file": "quic_packet.ivy",
                            "instruction": "            call show_connection_timeout(idle_timeout(dcid), max_idle_timeout_used, pto_timeout*3);\n"
                        },
                        {
                            "line": 445,
                            "file": "quic_packet.ivy",
                            "instruction": "            connection_timeout := true;\n"
                        },
                        {
                            "line": 446,
                            "file": "quic_packet.ivy",
                            "instruction": "        }\n"
                        },
                        {
                            "line": 447,
                            "file": "quic_packet.ivy",
                            "instruction": "    }\n"
                        },
                        {
                            "line": 448,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 449,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 450,
                            "file": "quic_packet.ivy",
                            "instruction": "    # & idle_timeout > pto_timeout*3\n"
                        },
                        {
                            "line": 451,
                            "file": "quic_packet.ivy",
                            "instruction": "    call show_probe_idle_timeout(pto_timeout*3);\n"
                        },
                        {
                            "line": 452,
                            "file": "quic_packet.ivy",
                            "instruction": "    # To avoid excessively small idle timeout periods, endpoints MUST increase the idle timeout\n"
                        },
                        {
                            "line": 453,
                            "file": "quic_packet.ivy",
                            "instruction": "    # period to be at least three times the current Probe Timeout (PTO). This allows for multiple \n"
                        },
                        {
                            "line": 454,
                            "file": "quic_packet.ivy",
                            "instruction": "    # PTOs to expire, and therefore multiple probes to be sent and lost, prior to idle timeout.\n"
                        },
                        {
                            "line": 455,
                            "file": "quic_packet.ivy",
                            "instruction": "    if ~_generating & connection_timeout & is_retransmitted(pkt.payload) < 2 & idle_timeout(dcid) > pto_timeout*3 {\n"
                        },
                        {
                            "line": 456,
                            "file": "quic_packet.ivy",
                            "instruction": "        respect_idle_timeout := false;\n"
                        },
                        {
                            "line": 457,
                            "file": "quic_packet.ivy",
                            "instruction": "        call show_connection_timeout(idle_timeout(dcid), max_idle_timeout_used, pto_timeout*3);\n"
                        },
                        {
                            "line": 458,
                            "file": "quic_packet.ivy",
                            "instruction": "        call respect_idle_timeout_none;\n"
                        },
                        {
                            "line": 459,
                            "file": "quic_packet.ivy",
                            "instruction": "    }\n"
                        },
                        {
                            "line": 460,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 461,
                            "file": "quic_packet.ivy",
                            "instruction": "    require pkt.token.end ~= 0 -> (retry_sent(client_initial_rcid) | retry_recv(scid) | pkt.token = tls_api.upper.get_old_new_token);\n"
                        },
                        {
                            "line": 462,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 463,
                            "file": "quic_packet.ivy",
                            "instruction": "    if pkt.token.end ~= 0 {\n"
                        },
                        {
                            "line": 464,
                            "file": "quic_packet.ivy",
                            "instruction": "        address_validated := true;\n"
                        },
                        {
                            "line": 465,
                            "file": "quic_packet.ivy",
                            "instruction": "        anti_amplification_limit_reached := true;\n"
                        },
                        {
                            "line": 466,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 467,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 468,
                            "file": "quic_packet.ivy",
                            "instruction": "    if (src = client_alt | dst = client_alt) & nclients = 1 {\n"
                        },
                        {
                            "line": 469,
                            "file": "quic_packet.ivy",
                            "instruction": "\t    migration_done := true;\n"
                        },
                        {
                            "line": 470,
                            "file": "quic_packet.ivy",
                            "instruction": "\t    #call net.close(endpoint_id.client,sock);\t# destroy connection ?\n"
                        },
                        {
                            "line": 471,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 472,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 473,
                            "file": "quic_packet.ivy",
                            "instruction": "    # Similarly, an endpoint MUST NOT reuse a connection ID when sending to\n"
                        },
                        {
                            "line": 474,
                            "file": "quic_packet.ivy",
                            "instruction": "    # more than one destination address.  \n"
                        },
                        {
                            "line": 475,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 476,
                            "file": "quic_packet.ivy",
                            "instruction": "    #if ~_generating  {\n"
                        },
                        {
                            "line": 477,
                            "file": "quic_packet.ivy",
                            "instruction": "    #    if ~migration_done {\n"
                        },
                        {
                            "line": 478,
                            "file": "quic_packet.ivy",
                            "instruction": "    #        cid_ip_mapped(dst) := pkt.dst_cid;\n"
                        },
                        {
                            "line": 479,
                            "file": "quic_packet.ivy",
                            "instruction": "    #    } else {\n"
                        },
                        {
                            "line": 480,
                            "file": "quic_packet.ivy",
                            "instruction": "    #        cid_ip_mapped(dst) := pkt.dst_cid;\n"
                        },
                        {
                            "line": 481,
                            "file": "quic_packet.ivy",
                            "instruction": "    #    };\n"
                        },
                        {
                            "line": 482,
                            "file": "quic_packet.ivy",
                            "instruction": "    #};\n"
                        },
                        {
                            "line": 483,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 484,
                            "file": "quic_packet.ivy",
                            "instruction": "    # The destination cid must represent an existing connection,\n"
                        },
                        {
                            "line": 485,
                            "file": "quic_packet.ivy",
                            "instruction": "    # except in the case of a client initial packet, when the\n"
                        },
                        {
                            "line": 486,
                            "file": "quic_packet.ivy",
                            "instruction": "    # destination cid may be the nonce cid chosen by the client for\n"
                        },
                        {
                            "line": 487,
                            "file": "quic_packet.ivy",
                            "instruction": "    # the given source cid. TODO: The standard says that on receiving\n"
                        },
                        {
                            "line": 488,
                            "file": "quic_packet.ivy",
                            "instruction": "    # the the server's cid, the clint must switch to it. However, we\n"
                        },
                        {
                            "line": 489,
                            "file": "quic_packet.ivy",
                            "instruction": "    # can't know when that server's cid has actually been received by\n"
                        },
                        {
                            "line": 490,
                            "file": "quic_packet.ivy",
                            "instruction": "    # the client. As an example, after the server sends its first\n"
                        },
                        {
                            "line": 491,
                            "file": "quic_packet.ivy",
                            "instruction": "    # initial packet, the client might still retransmit its initial\n"
                        },
                        {
                            "line": 492,
                            "file": "quic_packet.ivy",
                            "instruction": "    # packet using the nonce cid. In some cases, we can infer that the\n"
                        },
                        {
                            "line": 493,
                            "file": "quic_packet.ivy",
                            "instruction": "    # client has in fact seen the server's cid (for example, if it\n"
                        },
                        {
                            "line": 494,
                            "file": "quic_packet.ivy",
                            "instruction": "    # packet contains an ACK frame, or a CRYPTO frame that is\n"
                        },
                        {
                            "line": 495,
                            "file": "quic_packet.ivy",
                            "instruction": "    # reponsive to a server FRAME. This is trick to check, however,\n"
                        },
                        {
                            "line": 496,
                            "file": "quic_packet.ivy",
                            "instruction": "    # and the actual servers do not seem to check it.\n"
                        },
                        {
                            "line": 497,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 498,
                            "file": "quic_packet.ivy",
                            "instruction": "    require connected(dcid) |\n"
                        },
                        {
                            "line": 499,
                            "file": "quic_packet.ivy",
                            "instruction": "        pkt.ptype = quic_packet_type.initial\n"
                        },
                        {
                            "line": 500,
                            "file": "quic_packet.ivy",
                            "instruction": "        & is_client(scid)\n"
                        },
                        {
                            "line": 501,
                            "file": "quic_packet.ivy",
                            "instruction": "        & dcid = nonce_cid(scid);\n"
                        },
                        {
                            "line": 502,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 503,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 504,
                            "file": "quic_packet.ivy",
                            "instruction": "    # On long headers, both cids are given. If the destination cid is\n"
                        },
                        {
                            "line": 505,
                            "file": "quic_packet.ivy",
                            "instruction": "    # connected, it must be connected to the source cid (otherwise it\n"
                        },
                        {
                            "line": 506,
                            "file": "quic_packet.ivy",
                            "instruction": "    # must be a nonce generated by a client). \n"
                        },
                        {
                            "line": 507,
                            "file": "quic_packet.ivy",
                            "instruction": "    # On short headers (meaning one_rtt) the scid is not given, so we\n"
                        },
                        {
                            "line": 508,
                            "file": "quic_packet.ivy",
                            "instruction": "    # use the recorded value.\n"
                        },
                        {
                            "line": 509,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 510,
                            "file": "quic_packet.ivy",
                            "instruction": "    if pkt.long {\n"
                        },
                        {
                            "line": 511,
                            "file": "quic_packet.ivy",
                            "instruction": "        require connected(dcid) -> connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 512,
                            "file": "quic_packet.ivy",
                            "instruction": "    } else {\n"
                        },
                        {
                            "line": 513,
                            "file": "quic_packet.ivy",
                            "instruction": "        scid := connected_to(dcid);\n"
                        },
                        {
                            "line": 514,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 515,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 516,
                            "file": "quic_packet.ivy",
                            "instruction": "    if retry_sent(dcid) & ~_generating & ~zero_length_token & pkt.ptype = quic_packet_type.initial {\n"
                        },
                        {
                            "line": 517,
                            "file": "quic_packet.ivy",
                            "instruction": "        require dcid = client_initial_rcid;\n"
                        },
                        {
                            "line": 518,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 519,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 520,
                            "file": "quic_packet.ivy",
                            "instruction": "    # The packet type must match the encryption level of the queued\n"
                        },
                        {
                            "line": 521,
                            "file": "quic_packet.ivy",
                            "instruction": "    # frames at the source. \n"
                        },
                        {
                            "line": 522,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 523,
                            "file": "quic_packet.ivy",
                            "instruction": "    require pkt.ptype = queued_level(scid);\n"
                        },
                        {
                            "line": 524,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 525,
                            "file": "quic_packet.ivy",
                            "instruction": "   \n"
                        },
                        {
                            "line": 526,
                            "file": "quic_packet.ivy",
                            "instruction": "    # TEMPORARY: prevent big packet number jumps (work around minquic bug)\n"
                        },
                        {
                            "line": 527,
                            "file": "quic_packet.ivy",
                            "instruction": "    # Removed for MVFST that start with big PKT_NUM -> OK now\n"
                        },
                        {
                            "line": 528,
                            "file": "quic_packet.ivy",
                            "instruction": "    if  _generating {\n"
                        },
                        {
                            "line": 529,
                            "file": "quic_packet.ivy",
                            "instruction": "        # if ~is_client(scid) {\n"
                        },
                        {
                            "line": 530,
                            "file": "quic_packet.ivy",
                            "instruction": "        #     #client\n"
                        },
                        {
                            "line": 531,
                            "file": "quic_packet.ivy",
                            "instruction": "        #     require pkt.seq_num > last_pkt_num(scid,pkt.ptype);\n"
                        },
                        {
                            "line": 532,
                            "file": "quic_packet.ivy",
                            "instruction": "        #     require pkt.seq_num <= last_pkt_num(scid,pkt.ptype) + 0x15;\n"
                        },
                        {
                            "line": 533,
                            "file": "quic_packet.ivy",
                            "instruction": "        # } else {\n"
                        },
                        {
                            "line": 534,
                            "file": "quic_packet.ivy",
                            "instruction": "        #server\n"
                        },
                        {
                            "line": 535,
                            "file": "quic_packet.ivy",
                            "instruction": "        require pkt.seq_num = last_pkt_num(scid,pkt.ptype) + 0x1; # OK\n"
                        },
                        {
                            "line": 536,
                            "file": "quic_packet.ivy",
                            "instruction": "        # };\n"
                        },
                        {
                            "line": 537,
                            "file": "quic_packet.ivy",
                            "instruction": "        #require pkt.seq_num < last_pkt_num(scid,pkt.ptype) + 0x1 & pkt.seq_num > last_pkt_num(scid,pkt.ptype);\n"
                        },
                        {
                            "line": 538,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 539,
                            "file": "quic_packet.ivy",
                            "instruction": "    # else {\n"
                        },
                        {
                            "line": 540,
                            "file": "quic_packet.ivy",
                            "instruction": "    #     # An endpoint generates an RTT sample on receiving an ACK frame that meets the following two conditions:\n"
                        },
                        {
                            "line": 541,
                            "file": "quic_packet.ivy",
                            "instruction": "    #     # 1. the largest acknowledged packet number is newly acknowledged, and\n"
                        },
                        {
                            "line": 542,
                            "file": "quic_packet.ivy",
                            "instruction": "    #     # 2. at least one of the newly acknowledged packets was ack-eliciting.\n"
                        },
                        {
                            "line": 543,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 544,
                            "file": "quic_packet.ivy",
                            "instruction": "    #     if queued_ack_eliciting(scid) {\n"
                        },
                        {
                            "line": 545,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 546,
                            "file": "quic_packet.ivy",
                            "instruction": "    #     }\n"
                        },
                        {
                            "line": 547,
                            "file": "quic_packet.ivy",
                            "instruction": "    # };\n"
                        },
                        {
                            "line": 548,
                            "file": "quic_packet.ivy",
                            "instruction": "    last_pkt_num(scid,pkt.ptype) := pkt.seq_num;\n"
                        },
                        {
                            "line": 549,
                            "file": "quic_packet.ivy",
                            "instruction": "    require ~sent_pkt(scid,pkt.ptype,pkt.seq_num);  # [4]\n"
                        },
                        {
                            "line": 550,
                            "file": "quic_packet.ivy",
                            "instruction": "    sent_pkt(scid,pkt.ptype,pkt.seq_num) := true;  # [1]\n"
                        },
                        {
                            "line": 551,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 552,
                            "file": "quic_packet.ivy",
                            "instruction": "    # The payload may not be empty\n"
                        },
                        {
                            "line": 553,
                            "file": "quic_packet.ivy",
                            "instruction": "    require num_queued_frames(scid) > 0; # [7]\n"
                        },
                        {
                            "line": 554,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 555,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 556,
                            "file": "quic_packet.ivy",
                            "instruction": "    # The payload must exactly match the queued frames.\n"
                        },
                        {
                            "line": 557,
                            "file": "quic_packet.ivy",
                            "instruction": "    if _generating {\n"
                        },
                        {
                            "line": 558,
                            "file": "quic_packet.ivy",
                            "instruction": "        if packets_to_retransmit_end(pkt.ptype) > 0 {\n"
                        },
                        {
                            "line": 559,
                            "file": "quic_packet.ivy",
                            "instruction": "            var paylo := packets_to_retransmit(pkt.ptype,packets_to_retransmit_end(pkt.ptype));\n"
                        },
                        {
                            "line": 560,
                            "file": "quic_packet.ivy",
                            "instruction": "            require pkt.payload = paylo;\n"
                        },
                        {
                            "line": 561,
                            "file": "quic_packet.ivy",
                            "instruction": "            packets_to_retransmit_end(pkt.ptype) := packets_to_retransmit_end(pkt.ptype) - 1;\n"
                        },
                        {
                            "line": 562,
                            "file": "quic_packet.ivy",
                            "instruction": "            call show_retransmit_lost_packet(paylo);\n"
                        },
                        {
                            "line": 563,
                            "file": "quic_packet.ivy",
                            "instruction": "        } \n"
                        },
                        {
                            "line": 564,
                            "file": "quic_packet.ivy",
                            "instruction": "        else {\n"
                        },
                        {
                            "line": 565,
                            "file": "quic_packet.ivy",
                            "instruction": "            require pkt.payload = queued_frames(scid);\n"
                        },
                        {
                            "line": 566,
                            "file": "quic_packet.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 567,
                            "file": "quic_packet.ivy",
                            "instruction": "    } \n"
                        },
                        {
                            "line": 568,
                            "file": "quic_packet.ivy",
                            "instruction": "    else {\n"
                        },
                        {
                            "line": 569,
                            "file": "quic_packet.ivy",
                            "instruction": "        call show_queued_frames(scid,queued_frames(scid));\n"
                        },
                        {
                            "line": 570,
                            "file": "quic_packet.ivy",
                            "instruction": "        call is_generating(_generating);\n"
                        },
                        {
                            "line": 571,
                            "file": "quic_packet.ivy",
                            "instruction": "        call show_pkt_num(pkt.seq_num);\n"
                        },
                        {
                            "line": 572,
                            "file": "quic_packet.ivy",
                            "instruction": "        require pkt.payload = queued_frames(scid);\n"
                        },
                        {
                            "line": 573,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 574,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 575,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 576,
                            "file": "quic_packet.ivy",
                            "instruction": "    # TEMPORARY: don't allow client migration during handshake\n"
                        },
                        {
                            "line": 577,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 578,
                            "file": "quic_packet.ivy",
                            "instruction": "    require conn_seen(scid) & pkt.long & is_client(scid) -> conn_requested(src,dst,scid);\n"
                        },
                        {
                            "line": 579,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 580,
                            "file": "quic_packet.ivy",
                            "instruction": "    # Packet must be sent to the endpoint from which the highest numbered\n"
                        },
                        {
                            "line": 581,
                            "file": "quic_packet.ivy",
                            "instruction": "    # packet has been received. ~queued_challenge(dcid) & \n"
                        },
                        {
                            "line": 582,
                            "file": "quic_packet.ivy",
                            "instruction": "    #call show_probing(dcid ,hi_non_probing(dcid));\n"
                        },
                        {
                            "line": 583,
                            "file": "quic_packet.ivy",
                            "instruction": "    require  conn_seen(dcid) -> hi_non_probing_endpoint(dcid,dst);  # [10]\n"
                        },
                        {
                            "line": 584,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 585,
                            "file": "quic_packet.ivy",
                            "instruction": "    # TEMPORARY: do not apply ack-only rule to generated packets\n"
                        },
                        {
                            "line": 586,
                            "file": "quic_packet.ivy",
                            "instruction": "    # This can be removed when we have a frame queue per encryption level\n"
                        },
                        {
                            "line": 587,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 588,
                            "file": "quic_packet.ivy",
                            "instruction": "    call show_ack_credit(scid, ack_credit(scid), queued_ack_eliciting(scid), queued_non_ack(scid), pkt.seq_num);\n"
                        },
                        {
                            "line": 589,
                            "file": "quic_packet.ivy",
                            "instruction": "    require ~_generating & ~queued_non_ack(scid) -> ack_credit(scid) > 0;  # [5]\n"
                        },
                        {
                            "line": 590,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 591,
                            "file": "quic_packet.ivy",
                            "instruction": "    #Hamid - This is wrong, because if there is no ack credits, it prevents from sending a packet \n"
                        },
                        {
                            "line": 592,
                            "file": "quic_packet.ivy",
                            "instruction": "    #        containing only a CONNECTION_CLOSE frame but we want to stop packets that contain only ACKs \n"
                        },
                        {
                            "line": 593,
                            "file": "quic_packet.ivy",
                            "instruction": "    #    require ~_generating & ~queued_ack_eliciting(scid) -> ack_credit(scid) > 0;\n"
                        },
                        {
                            "line": 594,
                            "file": "quic_packet.ivy",
                            "instruction": "    #Hamid\n"
                        },
                        {
                            "line": 595,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 596,
                            "file": "quic_packet.ivy",
                            "instruction": "    # QUESTION: THis sentence is from draft-18 section 13.1: \"An\n"
                        },
                        {
                            "line": 597,
                            "file": "quic_packet.ivy",
                            "instruction": "    #   endpoint MUST NOT send a packet containing only an ACK frame\n"
                        },
                        {
                            "line": 598,
                            "file": "quic_packet.ivy",
                            "instruction": "    #   in response to a packet containing only ACK or PADDING frames,\n"
                        },
                        {
                            "line": 599,
                            "file": "quic_packet.ivy",
                            "instruction": "    #   even if there are packet gaps which precede the received\n"
                        },
                        {
                            "line": 600,
                            "file": "quic_packet.ivy",
                            "instruction": "    #   packet.\" Do we interpret this to mean that an ack-only packet\n"
                        },
                        {
                            "line": 601,
                            "file": "quic_packet.ivy",
                            "instruction": "    #   cannot ack *only* ack-only packets?  Or that an ack-only\n"
                        },
                        {
                            "line": 602,
                            "file": "quic_packet.ivy",
                            "instruction": "    #   packet cannot ack *any* ack-only packets?\n"
                        },
                        {
                            "line": 603,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 604,
                            "file": "quic_packet.ivy",
                            "instruction": "    # If the sender is in the draining state, this is the draining packet.\n"
                        },
                        {
                            "line": 605,
                            "file": "quic_packet.ivy",
                            "instruction": "    # Make sure that a draining packet has not previously been sent and\n"
                        },
                        {
                            "line": 606,
                            "file": "quic_packet.ivy",
                            "instruction": "    # that the packet contains a connection_close frame;\n"
                        },
                        {
                            "line": 607,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 608,
                            "file": "quic_packet.ivy",
                            "instruction": "    if conn_draining(scid) {\n"
                        },
                        {
                            "line": 609,
                            "file": "quic_packet.ivy",
                            "instruction": "        require ~draining_pkt_sent(scid) & queued_close(scid);\n"
                        },
                        {
                            "line": 610,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 611,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 612,
                            "file": "quic_packet.ivy",
                            "instruction": "    ...\n"
                        },
                        {
                            "line": 613,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 614,
                            "file": "quic_packet.ivy",
                            "instruction": "    # Here, we have the updates to the packet protocol state.\n"
                        },
                        {
                            "line": 615,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 616,
                            "file": "quic_packet.ivy",
                            "instruction": "    # TEMPORARY: The following are repeated because currently locals defined in\n"
                        },
                        {
                            "line": 617,
                            "file": "quic_packet.ivy",
                            "instruction": "    # the \"before\" section cannot be accessed in the \"after\" section.\n"
                        },
                        {
                            "line": 618,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 619,
                            "file": "quic_packet.ivy",
                            "instruction": "    var dcid := pkt.dst_cid;\n"
                        },
                        {
                            "line": 620,
                            "file": "quic_packet.ivy",
                            "instruction": "    var scid := pkt.src_cid if pkt.long else connected_to(dcid);\n"
                        },
                        {
                            "line": 621,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 622,
                            "file": "quic_packet.ivy",
                            "instruction": "    if cid_mapped(dcid) {\n"
                        },
                        {
                            "line": 623,
                            "file": "quic_packet.ivy",
                            "instruction": "\t    dcid := cid_to_aid(dcid);\n"
                        },
                        {
                            "line": 624,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 625,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 626,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 627,
                            "file": "quic_packet.ivy",
                            "instruction": "    # TODO: the following should not be here\n"
                        },
                        {
                            "line": 628,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 629,
                            "file": "quic_packet.ivy",
                            "instruction": "    if pkt.ptype = quic_packet_type.initial {\n"
                        },
                        {
                            "line": 630,
                            "file": "quic_packet.ivy",
                            "instruction": "        initial_token := pkt.token;\n"
                        },
                        {
                            "line": 631,
                            "file": "quic_packet.ivy",
                            "instruction": "        # An initial packet with an unseen destination cid is a connection request.\n"
                        },
                        {
                            "line": 632,
                            "file": "quic_packet.ivy",
                            "instruction": "        if ~conn_seen(dcid)  {\n"
                        },
                        {
                            "line": 633,
                            "file": "quic_packet.ivy",
                            "instruction": "            if ~zero_rtt_sent {\n"
                        },
                        {
                            "line": 634,
                            "file": "quic_packet.ivy",
                            "instruction": "                call show_initial_request_initial;\n"
                        },
                        {
                            "line": 635,
                            "file": "quic_packet.ivy",
                            "instruction": "                call tls_client_initial_request(src,dst,dcid,pkt.pversion,src_tls_id(src));\n"
                        },
                        {
                            "line": 636,
                            "file": "quic_packet.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 637,
                            "file": "quic_packet.ivy",
                            "instruction": "            conn_requested(src,dst,scid) := true;\n"
                        },
                        {
                            "line": 638,
                            "file": "quic_packet.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 639,
                            "file": "quic_packet.ivy",
                            "instruction": "        cid_to_token(dcid) := pkt.token;\n"
                        },
                        {
                            "line": 640,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 641,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 642,
                            "file": "quic_packet.ivy",
                            "instruction": "    conn_seen(scid) := true;  # [1]\n"
                        },
                        {
                            "line": 643,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 644,
                            "file": "quic_packet.ivy",
                            "instruction": "    # Update the ack credits. A non-ack packet sent to a destination\n"
                        },
                        {
                            "line": 645,
                            "file": "quic_packet.ivy",
                            "instruction": "    # increases the destination's ack credit. An ack packet decreases\n"
                        },
                        {
                            "line": 646,
                            "file": "quic_packet.ivy",
                            "instruction": "    # the sender's ack credit.\n"
                        },
                        {
                            "line": 647,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 648,
                            "file": "quic_packet.ivy",
                            "instruction": "#Hamid\n"
                        },
                        {
                            "line": 649,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 650,
                            "file": "quic_packet.ivy",
                            "instruction": "#    if queued_non_ack(scid) {\n"
                        },
                        {
                            "line": 651,
                            "file": "quic_packet.ivy",
                            "instruction": "#\tack_credit(dcid) := ack_credit(dcid) + 1;\n"
                        },
                        {
                            "line": 652,
                            "file": "quic_packet.ivy",
                            "instruction": "#    } else {\n"
                        },
                        {
                            "line": 653,
                            "file": "quic_packet.ivy",
                            "instruction": "#\tack_credit(scid) := ack_credit(scid) - 1;\n"
                        },
                        {
                            "line": 654,
                            "file": "quic_packet.ivy",
                            "instruction": "#    };\n"
                        },
                        {
                            "line": 655,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 656,
                            "file": "quic_packet.ivy",
                            "instruction": "    if queued_ack_eliciting(scid) {\n"
                        },
                        {
                            "line": 657,
                            "file": "quic_packet.ivy",
                            "instruction": "       ack_credit(dcid) := ack_credit(dcid) + 1;\n"
                        },
                        {
                            "line": 658,
                            "file": "quic_packet.ivy",
                            "instruction": "       ack_eliciting_threshold_current_val(scid) := ack_eliciting_threshold_current_val(scid) + 1;\n"
                        },
                        {
                            "line": 659,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 660,
                            "file": "quic_packet.ivy",
                            "instruction": "    if ~queued_non_ack(scid) {\n"
                        },
                        {
                            "line": 661,
                            "file": "quic_packet.ivy",
                            "instruction": "       ack_credit(scid) := ack_credit(scid) - 1;\n"
                        },
                        {
                            "line": 662,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 663,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 664,
                            "file": "quic_packet.ivy",
                            "instruction": "#Hamid\n"
                        },
                        {
                            "line": 665,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 666,
                            "file": "quic_packet.ivy",
                            "instruction": "    # If this is a non-probing packet, update the highest non-probing\n"
                        },
                        {
                            "line": 667,
                            "file": "quic_packet.ivy",
                            "instruction": "    # packet number seen on from this aid.\n"
                        },
                        {
                            "line": 668,
                            "file": "quic_packet.ivy",
                            "instruction": "    # QUESTION: what if two different paths send the same packet number?\n"
                        },
                        {
                            "line": 669,
                            "file": "quic_packet.ivy",
                            "instruction": "    # QUESTION: how do you compare packet numbers with different encryption levels?\n"
                        },
                        {
                            "line": 670,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 671,
                            "file": "quic_packet.ivy",
                            "instruction": "    if queued_non_probing(scid) {\n"
                        },
                        {
                            "line": 672,
                            "file": "quic_packet.ivy",
                            "instruction": "        if pkt.ptype = quic_packet_type.one_rtt {\n"
                        },
                        {
                            "line": 673,
                            "file": "quic_packet.ivy",
                            "instruction": "            if pkt.seq_num >= hi_non_probing(scid) {\n"
                        },
                        {
                            "line": 674,
                            "file": "quic_packet.ivy",
                            "instruction": "                hi_non_probing(scid) := pkt.seq_num;\n"
                        },
                        {
                            "line": 675,
                            "file": "quic_packet.ivy",
                            "instruction": "                hi_non_probing_endpoint(scid,src) := true;\n"
                        },
                        {
                            "line": 676,
                            "file": "quic_packet.ivy",
                            "instruction": "            }\n"
                        },
                        {
                            "line": 677,
                            "file": "quic_packet.ivy",
                            "instruction": "        } else {\n"
                        },
                        {
                            "line": 678,
                            "file": "quic_packet.ivy",
                            "instruction": "            hi_non_probing_endpoint(scid,src) := true;\n"
                        },
                        {
                            "line": 679,
                            "file": "quic_packet.ivy",
                            "instruction": "        }\n"
                        },
                        {
                            "line": 680,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 681,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 682,
                            "file": "quic_packet.ivy",
                            "instruction": "    # If the packet contains a close frame, then set `pkt_has_close`\n"
                        },
                        {
                            "line": 683,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 684,
                            "file": "quic_packet.ivy",
                            "instruction": "    if queued_close(scid) {\n"
                        },
                        {
                            "line": 685,
                            "file": "quic_packet.ivy",
                            "instruction": "        pkt_has_close(scid,pkt.ptype,pkt.seq_num) := true;\n"
                        },
                        {
                            "line": 686,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 687,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 688,
                            "file": "quic_packet.ivy",
                            "instruction": "    # If the sender is in the draining state, this is the draining packet.\n"
                        },
                        {
                            "line": 689,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 690,
                            "file": "quic_packet.ivy",
                            "instruction": "    if conn_draining(scid) {\n"
                        },
                        {
                            "line": 691,
                            "file": "quic_packet.ivy",
                            "instruction": "        draining_pkt_sent(scid) := true\n"
                        },
                        {
                            "line": 692,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 693,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 694,
                            "file": "quic_packet.ivy",
                            "instruction": "    if pkt.ptype = quic_packet_type.initial & ~first_initial_send & zero_rtt_allowed {\n"
                        },
                        {
                            "line": 695,
                            "file": "quic_packet.ivy",
                            "instruction": "        first_initial_send := true;\n"
                        },
                        {
                            "line": 696,
                            "file": "quic_packet.ivy",
                            "instruction": "        initial_scid := scid;\n"
                        },
                        {
                            "line": 697,
                            "file": "quic_packet.ivy",
                            "instruction": "        initial_dcid := dcid;\n"
                        },
                        {
                            "line": 698,
                            "file": "quic_packet.ivy",
                            "instruction": "        queued_level(the_cid) := quic_packet_type.zero_rtt; # todo multiple client\n"
                        },
                        {
                            "line": 699,
                            "file": "quic_packet.ivy",
                            "instruction": "    } else {\n"
                        },
                        {
                            "line": 700,
                            "file": "quic_packet.ivy",
                            "instruction": "        first_initial_send := false;\n"
                        },
                        {
                            "line": 701,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 702,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 703,
                            "file": "quic_packet.ivy",
                            "instruction": "    # The queued frames are deleted\n"
                        },
                        {
                            "line": 704,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 705,
                            "file": "quic_packet.ivy",
                            "instruction": "    queued_frames(scid) := frame.arr.empty;\n"
                        },
                        {
                            "line": 706,
                            "file": "quic_packet.ivy",
                            "instruction": "    queued_non_probing(scid) := false;\n"
                        },
                        {
                            "line": 707,
                            "file": "quic_packet.ivy",
                            "instruction": "    queued_non_ack(scid) := false;\n"
                        },
                        {
                            "line": 708,
                            "file": "quic_packet.ivy",
                            "instruction": "    queued_close(scid) := false;\n"
                        },
                        {
                            "line": 709,
                            "file": "quic_packet.ivy",
                            "instruction": "    num_queued_frames(scid) := 0;\n"
                        },
                        {
                            "line": 710,
                            "file": "quic_packet.ivy",
                            "instruction": "#Hamid\n"
                        },
                        {
                            "line": 711,
                            "file": "quic_packet.ivy",
                            "instruction": "    queued_ack_eliciting(scid) := false;\n"
                        },
                        {
                            "line": 712,
                            "file": "quic_packet.ivy",
                            "instruction": "#Hamid\n"
                        }
                    ]
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet"
                    }
                ],
                "exported": true,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "packet_event",
                        "component": "quic_endpoint.ivy"
                    },
                    {
                        "caller_func": "on_packet_sent",
                        "component": "ivy_quic_shim_client.ivy"
                    },
                    {
                        "caller_func": "net.send",
                        "component": "ivy_quic_shim_client.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [
                        {
                            "caller_func": "Environment",
                            "component": "Environment"
                        }
                    ],
                    "assertions": [
                        {
                            "line": 422,
                            "file": "quic_packet.ivy",
                            "assertion": "require ~need_sent_ack_eliciting_application_packet & ~need_sent_ack_eliciting_handshake_packet & ~need_sent_ack_eliciting_initial_packet;\n"
                        },
                        {
                            "line": 424,
                            "file": "quic_packet.ivy",
                            "assertion": "require pkt.ptype ~= quic_packet_type.zero_rtt & pkt.ptype ~= quic_packet_type.version_negociation & pkt.ptype ~= quic_packet_type.retry;\n"
                        },
                        {
                            "line": 462,
                            "file": "quic_packet.ivy",
                            "assertion": "require pkt.token.end ~= 0 -> (retry_sent(client_initial_rcid) | retry_recv(scid) | pkt.token = tls_api.upper.get_old_new_token);\n"
                        },
                        {
                            "line": 499,
                            "file": "quic_packet.ivy",
                            "assertion": "require connected(dcid) |\n"
                        },
                        {
                            "line": 512,
                            "file": "quic_packet.ivy",
                            "assertion": "require connected(dcid) -> connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 518,
                            "file": "quic_packet.ivy",
                            "assertion": "require dcid = client_initial_rcid;\n"
                        },
                        {
                            "line": 524,
                            "file": "quic_packet.ivy",
                            "assertion": "require pkt.ptype = queued_level(scid);\n"
                        },
                        {
                            "line": 536,
                            "file": "quic_packet.ivy",
                            "assertion": "require pkt.seq_num = last_pkt_num(scid,pkt.ptype) + 0x1; # OK\n"
                        },
                        {
                            "line": 550,
                            "file": "quic_packet.ivy",
                            "assertion": "require ~sent_pkt(scid,pkt.ptype,pkt.seq_num);  # [4]\n"
                        },
                        {
                            "line": 554,
                            "file": "quic_packet.ivy",
                            "assertion": "require num_queued_frames(scid) > 0; # [7]\n"
                        },
                        {
                            "line": 561,
                            "file": "quic_packet.ivy",
                            "assertion": "require pkt.payload = paylo;\n"
                        },
                        {
                            "line": 566,
                            "file": "quic_packet.ivy",
                            "assertion": "require pkt.payload = queued_frames(scid);\n"
                        },
                        {
                            "line": 573,
                            "file": "quic_packet.ivy",
                            "assertion": "require pkt.payload = queued_frames(scid);\n"
                        },
                        {
                            "line": 579,
                            "file": "quic_packet.ivy",
                            "assertion": "require conn_seen(scid) & pkt.long & is_client(scid) -> conn_requested(src,dst,scid);\n"
                        },
                        {
                            "line": 584,
                            "file": "quic_packet.ivy",
                            "assertion": "require  conn_seen(dcid) -> hi_non_probing_endpoint(dcid,dst);  # [10]\n"
                        },
                        {
                            "line": 590,
                            "file": "quic_packet.ivy",
                            "assertion": "require ~_generating & ~queued_non_ack(scid) -> ack_credit(scid) > 0;  # [5]\n"
                        },
                        {
                            "line": 610,
                            "file": "quic_packet.ivy",
                            "assertion": "require ~draining_pkt_sent(scid) & queued_close(scid);\n"
                        },
                        {
                            "line": 190,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require src = client_vn;\n"
                        },
                        {
                            "line": 195,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require src = client.ep | src = client_alt;\n"
                        },
                        {
                            "line": 197,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require src = client_alt;\n"
                        },
                        {
                            "line": 200,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require src = client.ep;\n"
                        },
                        {
                            "line": 203,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require dst = server.ep;\n"
                        },
                        {
                            "line": 206,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require pkt.token = retry_token(pkt.src_cid); # TODO new_token\n"
                        },
                        {
                            "line": 208,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require pkt.token.end = 0; \n"
                        },
                        {
                            "line": 215,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require pkt.long -> pkt.pversion = initial_version  #version 30\n"
                        },
                        {
                            "line": 217,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require pkt.long -> pkt.pversion = final_version\n"
                        }
                    ]
                }
            }
        },
        {
            "quic_packet_name": "quic_packet",
            "quic_packet_object": [],
            "quic_packet_module": null,
            "actions": [
                {
                    "line": 116,
                    "action_name": "quic_packet.long",
                    "implementation": [
                        {
                            "line": 115,
                            "file": "quic_packet.ivy",
                            "instruction": "        res := pkt.ptype ~= quic_packet_type.one_rtt;\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "res",
                        "type": "bool"
                    },
                    "action_parameters": [
                        {
                            "name": "pkt",
                            "type": "this"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "quic_packet.long",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "actions": {
                "line": 1445,
                "action_name": "respect_idle_timeout_none",
                "action_return": null,
                "exported": false,
                "action_parameters": null,
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 138,
                "action_name": "send_ack_eliciting_handshake_packet",
                "implementation": [
                    {
                        "line": 138,
                        "file": "quic_packet.ivy",
                        "instruction": "\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": [
                        {
                            "line": 720,
                            "file": "quic_packet.ivy",
                            "instruction": "    # is_not_sleeping := time_api.c_timer.is_sleep_fake_timeout;\n"
                        },
                        {
                            "line": 721,
                            "file": "quic_packet.ivy",
                            "instruction": "    # require _generating -> is_not_sleeping;\n"
                        },
                        {
                            "line": 722,
                            "file": "quic_packet.ivy",
                            "instruction": "    # require (_generating  -> is_not_sleeping);\n"
                        },
                        {
                            "line": 723,
                            "file": "quic_packet.ivy",
                            "instruction": "    # require (~is_not_sleeping -> ~_generating);\n"
                        },
                        {
                            "line": 724,
                            "file": "quic_packet.ivy",
                            "instruction": "    require pkt.ptype = quic_packet_type.handshake;\n"
                        },
                        {
                            "line": 725,
                            "file": "quic_packet.ivy",
                            "instruction": "    require need_sent_ack_eliciting_handshake_packet;\n"
                        },
                        {
                            "line": 726,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 727,
                            "file": "quic_packet.ivy",
                            "instruction": "   \n"
                        },
                        {
                            "line": 728,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 729,
                            "file": "quic_packet.ivy",
                            "instruction": "    # Extract the source and destination cid's and packet number from the packet.\n"
                        },
                        {
                            "line": 730,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 731,
                            "file": "quic_packet.ivy",
                            "instruction": "    var dcid := pkt.dst_cid;\n"
                        },
                        {
                            "line": 732,
                            "file": "quic_packet.ivy",
                            "instruction": "    var scid := pkt.src_cid;\n"
                        },
                        {
                            "line": 733,
                            "file": "quic_packet.ivy",
                            "instruction": "    if cid_mapped(dcid) {\n"
                        },
                        {
                            "line": 734,
                            "file": "quic_packet.ivy",
                            "instruction": "\t    dcid := cid_to_aid(dcid);\n"
                        },
                        {
                            "line": 735,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 736,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 737,
                            "file": "quic_packet.ivy",
                            "instruction": "    require pkt.ptype = queued_level(scid);\n"
                        },
                        {
                            "line": 738,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 739,
                            "file": "quic_packet.ivy",
                            "instruction": "    require pkt.token.end ~= 0 -> (retry_sent(client_initial_rcid) | retry_recv(scid) | pkt.token = tls_api.upper.get_old_new_token);\n"
                        },
                        {
                            "line": 740,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 741,
                            "file": "quic_packet.ivy",
                            "instruction": "    if (src = client_alt | dst = client_alt) & nclients = 1 {\n"
                        },
                        {
                            "line": 742,
                            "file": "quic_packet.ivy",
                            "instruction": "\t    migration_done := true;\n"
                        },
                        {
                            "line": 743,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 744,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 745,
                            "file": "quic_packet.ivy",
                            "instruction": "    # Similarly, an endpoint MUST NOT reuse a connection ID when sending to\n"
                        },
                        {
                            "line": 746,
                            "file": "quic_packet.ivy",
                            "instruction": "    # more than one destination address.  \n"
                        },
                        {
                            "line": 747,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 748,
                            "file": "quic_packet.ivy",
                            "instruction": "    # The destination cid must represent an existing connection,\n"
                        },
                        {
                            "line": 749,
                            "file": "quic_packet.ivy",
                            "instruction": "    # except in the case of a client initial packet, when the\n"
                        },
                        {
                            "line": 750,
                            "file": "quic_packet.ivy",
                            "instruction": "    # destination cid may be the nonce cid chosen by the client for\n"
                        },
                        {
                            "line": 751,
                            "file": "quic_packet.ivy",
                            "instruction": "    # the given source cid. TODO: The standard says that on receiving\n"
                        },
                        {
                            "line": 752,
                            "file": "quic_packet.ivy",
                            "instruction": "    # the the server's cid, the clint must switch to it. However, we\n"
                        },
                        {
                            "line": 753,
                            "file": "quic_packet.ivy",
                            "instruction": "    # can't know when that server's cid has actually been received by\n"
                        },
                        {
                            "line": 754,
                            "file": "quic_packet.ivy",
                            "instruction": "    # the client. As an example, after the server sends its first\n"
                        },
                        {
                            "line": 755,
                            "file": "quic_packet.ivy",
                            "instruction": "    # initial packet, the client might still retransmit its initial\n"
                        },
                        {
                            "line": 756,
                            "file": "quic_packet.ivy",
                            "instruction": "    # packet using the nonce cid. In some cases, we can infer that the\n"
                        },
                        {
                            "line": 757,
                            "file": "quic_packet.ivy",
                            "instruction": "    # client has in fact seen the server's cid (for example, if it\n"
                        },
                        {
                            "line": 758,
                            "file": "quic_packet.ivy",
                            "instruction": "    # packet contains an ACK frame, or a CRYPTO frame that is\n"
                        },
                        {
                            "line": 759,
                            "file": "quic_packet.ivy",
                            "instruction": "    # reponsive to a server FRAME. This is trick to check, however,\n"
                        },
                        {
                            "line": 760,
                            "file": "quic_packet.ivy",
                            "instruction": "    # and the actual servers do not seem to check it.\n"
                        },
                        {
                            "line": 761,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 762,
                            "file": "quic_packet.ivy",
                            "instruction": "    require connected(dcid) |\n"
                        },
                        {
                            "line": 763,
                            "file": "quic_packet.ivy",
                            "instruction": "        pkt.ptype = quic_packet_type.initial\n"
                        },
                        {
                            "line": 764,
                            "file": "quic_packet.ivy",
                            "instruction": "        & is_client(scid)\n"
                        },
                        {
                            "line": 765,
                            "file": "quic_packet.ivy",
                            "instruction": "        & dcid = nonce_cid(scid);\n"
                        },
                        {
                            "line": 766,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 767,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 768,
                            "file": "quic_packet.ivy",
                            "instruction": "    # On long headers, both cids are given. If the destination cid is\n"
                        },
                        {
                            "line": 769,
                            "file": "quic_packet.ivy",
                            "instruction": "    # connected, it must be connected to the source cid (otherwise it\n"
                        },
                        {
                            "line": 770,
                            "file": "quic_packet.ivy",
                            "instruction": "    # must be a nonce generated by a client). \n"
                        },
                        {
                            "line": 771,
                            "file": "quic_packet.ivy",
                            "instruction": "    # On short headers (meaning one_rtt) the scid is not given, so we\n"
                        },
                        {
                            "line": 772,
                            "file": "quic_packet.ivy",
                            "instruction": "    # use the recorded value.\n"
                        },
                        {
                            "line": 773,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 774,
                            "file": "quic_packet.ivy",
                            "instruction": "    if pkt.long {\n"
                        },
                        {
                            "line": 775,
                            "file": "quic_packet.ivy",
                            "instruction": "        require connected(dcid) -> connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 776,
                            "file": "quic_packet.ivy",
                            "instruction": "    } else {\n"
                        },
                        {
                            "line": 777,
                            "file": "quic_packet.ivy",
                            "instruction": "        scid := connected_to(dcid);\n"
                        },
                        {
                            "line": 778,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 779,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 780,
                            "file": "quic_packet.ivy",
                            "instruction": "    if retry_sent(dcid) & ~_generating & ~zero_length_token & pkt.ptype = quic_packet_type.initial {\n"
                        },
                        {
                            "line": 781,
                            "file": "quic_packet.ivy",
                            "instruction": "        require dcid = client_initial_rcid;\n"
                        },
                        {
                            "line": 782,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 783,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 784,
                            "file": "quic_packet.ivy",
                            "instruction": "    # TEMPORARY: prevent big packet number jumps (work around minquic bug)\n"
                        },
                        {
                            "line": 785,
                            "file": "quic_packet.ivy",
                            "instruction": "    # Removed for MVFST that start with big PKT_NUM -> OK now\n"
                        },
                        {
                            "line": 786,
                            "file": "quic_packet.ivy",
                            "instruction": "    if  _generating {\n"
                        },
                        {
                            "line": 787,
                            "file": "quic_packet.ivy",
                            "instruction": "        # if ~is_client(scid) {\n"
                        },
                        {
                            "line": 788,
                            "file": "quic_packet.ivy",
                            "instruction": "        #     #client\n"
                        },
                        {
                            "line": 789,
                            "file": "quic_packet.ivy",
                            "instruction": "        #     require pkt.seq_num > last_pkt_num(scid,pkt.ptype);\n"
                        },
                        {
                            "line": 790,
                            "file": "quic_packet.ivy",
                            "instruction": "        #     require pkt.seq_num <= last_pkt_num(scid,pkt.ptype) + 0x15;\n"
                        },
                        {
                            "line": 791,
                            "file": "quic_packet.ivy",
                            "instruction": "        # } else {\n"
                        },
                        {
                            "line": 792,
                            "file": "quic_packet.ivy",
                            "instruction": "        #server\n"
                        },
                        {
                            "line": 793,
                            "file": "quic_packet.ivy",
                            "instruction": "        require pkt.seq_num = last_pkt_num(scid,pkt.ptype) + 0x1; # OK\n"
                        },
                        {
                            "line": 794,
                            "file": "quic_packet.ivy",
                            "instruction": "        # };\n"
                        },
                        {
                            "line": 795,
                            "file": "quic_packet.ivy",
                            "instruction": "        #require pkt.seq_num < last_pkt_num(scid,pkt.ptype) + 0x1 & pkt.seq_num > last_pkt_num(scid,pkt.ptype);\n"
                        },
                        {
                            "line": 796,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 797,
                            "file": "quic_packet.ivy",
                            "instruction": "    # else {\n"
                        },
                        {
                            "line": 798,
                            "file": "quic_packet.ivy",
                            "instruction": "    #     # An endpoint generates an RTT sample on receiving an ACK frame that meets the following two conditions:\n"
                        },
                        {
                            "line": 799,
                            "file": "quic_packet.ivy",
                            "instruction": "    #     # 1. the largest acknowledged packet number is newly acknowledged, and\n"
                        },
                        {
                            "line": 800,
                            "file": "quic_packet.ivy",
                            "instruction": "    #     # 2. at least one of the newly acknowledged packets was ack-eliciting.\n"
                        },
                        {
                            "line": 801,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 802,
                            "file": "quic_packet.ivy",
                            "instruction": "    #     if queued_ack_eliciting(scid) {\n"
                        },
                        {
                            "line": 803,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 804,
                            "file": "quic_packet.ivy",
                            "instruction": "    #     }\n"
                        },
                        {
                            "line": 805,
                            "file": "quic_packet.ivy",
                            "instruction": "    # };\n"
                        },
                        {
                            "line": 806,
                            "file": "quic_packet.ivy",
                            "instruction": "    last_pkt_num(scid,pkt.ptype) := pkt.seq_num;\n"
                        },
                        {
                            "line": 807,
                            "file": "quic_packet.ivy",
                            "instruction": "    require ~sent_pkt(scid,pkt.ptype,pkt.seq_num);  # [4]\n"
                        },
                        {
                            "line": 808,
                            "file": "quic_packet.ivy",
                            "instruction": "    sent_pkt(scid,pkt.ptype,pkt.seq_num) := true;  # [1]\n"
                        },
                        {
                            "line": 809,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 810,
                            "file": "quic_packet.ivy",
                            "instruction": "    # The payload may not be empty\n"
                        },
                        {
                            "line": 811,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 812,
                            "file": "quic_packet.ivy",
                            "instruction": "    require num_queued_frames(scid) > 0;  # [7]\n"
                        },
                        {
                            "line": 813,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 814,
                            "file": "quic_packet.ivy",
                            "instruction": "    # The payload must exactly match the queued frames.\n"
                        },
                        {
                            "line": 815,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 816,
                            "file": "quic_packet.ivy",
                            "instruction": "    require pkt.payload = queued_frames(scid);\n"
                        },
                        {
                            "line": 817,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 818,
                            "file": "quic_packet.ivy",
                            "instruction": "    # TEMPORARY: don't allow client migration during handshake\n"
                        },
                        {
                            "line": 819,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 820,
                            "file": "quic_packet.ivy",
                            "instruction": "    require conn_seen(scid) & pkt.long & is_client(scid) -> conn_requested(src,dst,scid);\n"
                        },
                        {
                            "line": 821,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 822,
                            "file": "quic_packet.ivy",
                            "instruction": "    # Packet must be sent to the endpoint from which the highest numbered\n"
                        },
                        {
                            "line": 823,
                            "file": "quic_packet.ivy",
                            "instruction": "    # packet has been received. ~queued_challenge(dcid) & \n"
                        },
                        {
                            "line": 824,
                            "file": "quic_packet.ivy",
                            "instruction": "    #call show_probing(dcid ,hi_non_probing(dcid));\n"
                        },
                        {
                            "line": 825,
                            "file": "quic_packet.ivy",
                            "instruction": "    require  conn_seen(dcid) -> hi_non_probing_endpoint(dcid,dst);  # [10]\n"
                        },
                        {
                            "line": 826,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 827,
                            "file": "quic_packet.ivy",
                            "instruction": "    # TEMPORARY: do not apply ack-only rule to generated packets\n"
                        },
                        {
                            "line": 828,
                            "file": "quic_packet.ivy",
                            "instruction": "    # This can be removed when we have a frame queue per encryption level\n"
                        },
                        {
                            "line": 829,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 830,
                            "file": "quic_packet.ivy",
                            "instruction": "    #call show_ack_credit(scid, ack_credit(scid), queued_ack_eliciting(scid), queued_non_ack(scid), pkt.seq_num);\n"
                        },
                        {
                            "line": 831,
                            "file": "quic_packet.ivy",
                            "instruction": "    require ~_generating & ~queued_non_ack(scid) -> ack_credit(scid) > 0;  # [5]\n"
                        },
                        {
                            "line": 832,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 833,
                            "file": "quic_packet.ivy",
                            "instruction": "    #Hamid - This is wrong, because if there is no ack credits, it prevents from sending a packet \n"
                        },
                        {
                            "line": 834,
                            "file": "quic_packet.ivy",
                            "instruction": "    #        containing only a CONNECTION_CLOSE frame but we want to stop packets that contain only ACKs \n"
                        },
                        {
                            "line": 835,
                            "file": "quic_packet.ivy",
                            "instruction": "    #    require ~_generating & ~queued_ack_eliciting(scid) -> ack_credit(scid) > 0;\n"
                        },
                        {
                            "line": 836,
                            "file": "quic_packet.ivy",
                            "instruction": "    #Hamid\n"
                        },
                        {
                            "line": 837,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 838,
                            "file": "quic_packet.ivy",
                            "instruction": "    # QUESTION: THis sentence is from draft-18 section 13.1: \"An\n"
                        },
                        {
                            "line": 839,
                            "file": "quic_packet.ivy",
                            "instruction": "    #   endpoint MUST NOT send a packet containing only an ACK frame\n"
                        },
                        {
                            "line": 840,
                            "file": "quic_packet.ivy",
                            "instruction": "    #   in response to a packet containing only ACK or PADDING frames,\n"
                        },
                        {
                            "line": 841,
                            "file": "quic_packet.ivy",
                            "instruction": "    #   even if there are packet gaps which precede the received\n"
                        },
                        {
                            "line": 842,
                            "file": "quic_packet.ivy",
                            "instruction": "    #   packet.\" Do we interpret this to mean that an ack-only packet\n"
                        },
                        {
                            "line": 843,
                            "file": "quic_packet.ivy",
                            "instruction": "    #   cannot ack *only* ack-only packets?  Or that an ack-only\n"
                        },
                        {
                            "line": 844,
                            "file": "quic_packet.ivy",
                            "instruction": "    #   packet cannot ack *any* ack-only packets?\n"
                        },
                        {
                            "line": 845,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 846,
                            "file": "quic_packet.ivy",
                            "instruction": "    # If the sender is in the draining state, this is the draining packet.\n"
                        },
                        {
                            "line": 847,
                            "file": "quic_packet.ivy",
                            "instruction": "    # Make sure that a draining packet has not previously been sent and\n"
                        },
                        {
                            "line": 848,
                            "file": "quic_packet.ivy",
                            "instruction": "    # that the packet contains a connection_close frame;\n"
                        },
                        {
                            "line": 849,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 850,
                            "file": "quic_packet.ivy",
                            "instruction": "    if conn_draining(scid) {\n"
                        },
                        {
                            "line": 851,
                            "file": "quic_packet.ivy",
                            "instruction": "        require ~draining_pkt_sent(scid) & queued_close(scid);\n"
                        },
                        {
                            "line": 852,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 853,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 854,
                            "file": "quic_packet.ivy",
                            "instruction": "    ...\n"
                        },
                        {
                            "line": 855,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 856,
                            "file": "quic_packet.ivy",
                            "instruction": "    # Here, we have the updates to the packet protocol state.\n"
                        },
                        {
                            "line": 857,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 858,
                            "file": "quic_packet.ivy",
                            "instruction": "    # TEMPORARY: The following are repeated because currently locals defined in\n"
                        },
                        {
                            "line": 859,
                            "file": "quic_packet.ivy",
                            "instruction": "    # the \"before\" section cannot be accessed in the \"after\" section.\n"
                        },
                        {
                            "line": 860,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 861,
                            "file": "quic_packet.ivy",
                            "instruction": "    var dcid := pkt.dst_cid;\n"
                        },
                        {
                            "line": 862,
                            "file": "quic_packet.ivy",
                            "instruction": "    var scid := pkt.src_cid if pkt.long else connected_to(dcid);\n"
                        },
                        {
                            "line": 863,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 864,
                            "file": "quic_packet.ivy",
                            "instruction": "    if cid_mapped(dcid) {\n"
                        },
                        {
                            "line": 865,
                            "file": "quic_packet.ivy",
                            "instruction": "\t    dcid := cid_to_aid(dcid);\n"
                        },
                        {
                            "line": 866,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 867,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 868,
                            "file": "quic_packet.ivy",
                            "instruction": "    # if is\n"
                        },
                        {
                            "line": 869,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 870,
                            "file": "quic_packet.ivy",
                            "instruction": "    # TODO: the following should not be here\n"
                        },
                        {
                            "line": 871,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 872,
                            "file": "quic_packet.ivy",
                            "instruction": "    if pkt.ptype = quic_packet_type.initial {\n"
                        },
                        {
                            "line": 873,
                            "file": "quic_packet.ivy",
                            "instruction": "        initial_token := pkt.token;\n"
                        },
                        {
                            "line": 874,
                            "file": "quic_packet.ivy",
                            "instruction": "        # An initial packet with an unseen destination cid is a connection request.\n"
                        },
                        {
                            "line": 875,
                            "file": "quic_packet.ivy",
                            "instruction": "        if ~conn_seen(dcid)  {\n"
                        },
                        {
                            "line": 876,
                            "file": "quic_packet.ivy",
                            "instruction": "            if ~zero_rtt_sent {\n"
                        },
                        {
                            "line": 877,
                            "file": "quic_packet.ivy",
                            "instruction": "                call show_initial_request_initial;\n"
                        },
                        {
                            "line": 878,
                            "file": "quic_packet.ivy",
                            "instruction": "                call tls_client_initial_request(src,dst,dcid,pkt.pversion,src_tls_id(src));\n"
                        },
                        {
                            "line": 879,
                            "file": "quic_packet.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 880,
                            "file": "quic_packet.ivy",
                            "instruction": "            conn_requested(src,dst,scid) := true;\n"
                        },
                        {
                            "line": 881,
                            "file": "quic_packet.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 882,
                            "file": "quic_packet.ivy",
                            "instruction": "        cid_to_token(dcid) := pkt.token;\n"
                        },
                        {
                            "line": 883,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 884,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 885,
                            "file": "quic_packet.ivy",
                            "instruction": "    conn_seen(scid) := true;  # [1]\n"
                        },
                        {
                            "line": 886,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 887,
                            "file": "quic_packet.ivy",
                            "instruction": "    # Update the ack credits. A non-ack packet sent to a destination\n"
                        },
                        {
                            "line": 888,
                            "file": "quic_packet.ivy",
                            "instruction": "    # increases the destination's ack credit. An ack packet decreases\n"
                        },
                        {
                            "line": 889,
                            "file": "quic_packet.ivy",
                            "instruction": "    # the sender's ack credit.\n"
                        },
                        {
                            "line": 890,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 891,
                            "file": "quic_packet.ivy",
                            "instruction": "#Hamid\n"
                        },
                        {
                            "line": 892,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 893,
                            "file": "quic_packet.ivy",
                            "instruction": "#    if queued_non_ack(scid) {\n"
                        },
                        {
                            "line": 894,
                            "file": "quic_packet.ivy",
                            "instruction": "#\tack_credit(dcid) := ack_credit(dcid) + 1;\n"
                        },
                        {
                            "line": 895,
                            "file": "quic_packet.ivy",
                            "instruction": "#    } else {\n"
                        },
                        {
                            "line": 896,
                            "file": "quic_packet.ivy",
                            "instruction": "#\tack_credit(scid) := ack_credit(scid) - 1;\n"
                        },
                        {
                            "line": 897,
                            "file": "quic_packet.ivy",
                            "instruction": "#    };\n"
                        },
                        {
                            "line": 898,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 899,
                            "file": "quic_packet.ivy",
                            "instruction": "    if queued_ack_eliciting(scid) {\n"
                        },
                        {
                            "line": 900,
                            "file": "quic_packet.ivy",
                            "instruction": "       ack_credit(dcid) := ack_credit(dcid) + 1;\n"
                        },
                        {
                            "line": 901,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 902,
                            "file": "quic_packet.ivy",
                            "instruction": "    if ~queued_non_ack(scid) {\n"
                        },
                        {
                            "line": 903,
                            "file": "quic_packet.ivy",
                            "instruction": "       ack_credit(scid) := ack_credit(scid) - 1;\n"
                        },
                        {
                            "line": 904,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 905,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 906,
                            "file": "quic_packet.ivy",
                            "instruction": "#Hamid\n"
                        },
                        {
                            "line": 907,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 908,
                            "file": "quic_packet.ivy",
                            "instruction": "    # If this is a non-probing packet, update the highest non-probing\n"
                        },
                        {
                            "line": 909,
                            "file": "quic_packet.ivy",
                            "instruction": "    # packet number seen on from this aid.\n"
                        },
                        {
                            "line": 910,
                            "file": "quic_packet.ivy",
                            "instruction": "    # QUESTION: what if two different paths send the same packet number?\n"
                        },
                        {
                            "line": 911,
                            "file": "quic_packet.ivy",
                            "instruction": "    # QUESTION: how do you compare packet numbers with different encryption levels?\n"
                        },
                        {
                            "line": 912,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 913,
                            "file": "quic_packet.ivy",
                            "instruction": "    if queued_non_probing(scid) {\n"
                        },
                        {
                            "line": 914,
                            "file": "quic_packet.ivy",
                            "instruction": "        if pkt.ptype = quic_packet_type.one_rtt {\n"
                        },
                        {
                            "line": 915,
                            "file": "quic_packet.ivy",
                            "instruction": "            if pkt.seq_num >= hi_non_probing(scid) {\n"
                        },
                        {
                            "line": 916,
                            "file": "quic_packet.ivy",
                            "instruction": "                hi_non_probing(scid) := pkt.seq_num;\n"
                        },
                        {
                            "line": 917,
                            "file": "quic_packet.ivy",
                            "instruction": "                hi_non_probing_endpoint(scid,src) := true;\n"
                        },
                        {
                            "line": 918,
                            "file": "quic_packet.ivy",
                            "instruction": "            }\n"
                        },
                        {
                            "line": 919,
                            "file": "quic_packet.ivy",
                            "instruction": "        } else {\n"
                        },
                        {
                            "line": 920,
                            "file": "quic_packet.ivy",
                            "instruction": "            hi_non_probing_endpoint(scid,src) := true;\n"
                        },
                        {
                            "line": 921,
                            "file": "quic_packet.ivy",
                            "instruction": "        }\n"
                        },
                        {
                            "line": 922,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 923,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 924,
                            "file": "quic_packet.ivy",
                            "instruction": "    # If the packet contains a close frame, then set `pkt_has_close`\n"
                        },
                        {
                            "line": 925,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 926,
                            "file": "quic_packet.ivy",
                            "instruction": "    if queued_close(scid) {\n"
                        },
                        {
                            "line": 927,
                            "file": "quic_packet.ivy",
                            "instruction": "        pkt_has_close(scid,pkt.ptype,pkt.seq_num) := true;\n"
                        },
                        {
                            "line": 928,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 929,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 930,
                            "file": "quic_packet.ivy",
                            "instruction": "    # If the sender is in the draining state, this is the draining packet.\n"
                        },
                        {
                            "line": 931,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 932,
                            "file": "quic_packet.ivy",
                            "instruction": "    if conn_draining(scid) {\n"
                        },
                        {
                            "line": 933,
                            "file": "quic_packet.ivy",
                            "instruction": "        draining_pkt_sent(scid) := true\n"
                        },
                        {
                            "line": 934,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 935,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 936,
                            "file": "quic_packet.ivy",
                            "instruction": "    if pkt.ptype = quic_packet_type.initial & ~first_initial_send & zero_rtt_allowed {\n"
                        },
                        {
                            "line": 937,
                            "file": "quic_packet.ivy",
                            "instruction": "        first_initial_send := true;\n"
                        },
                        {
                            "line": 938,
                            "file": "quic_packet.ivy",
                            "instruction": "        initial_scid := scid;\n"
                        },
                        {
                            "line": 939,
                            "file": "quic_packet.ivy",
                            "instruction": "        initial_dcid := dcid;\n"
                        },
                        {
                            "line": 940,
                            "file": "quic_packet.ivy",
                            "instruction": "        queued_level(the_cid) := quic_packet_type.zero_rtt; # todo multiple client\n"
                        },
                        {
                            "line": 941,
                            "file": "quic_packet.ivy",
                            "instruction": "    } else {\n"
                        },
                        {
                            "line": 942,
                            "file": "quic_packet.ivy",
                            "instruction": "        first_initial_send := false;\n"
                        },
                        {
                            "line": 943,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 944,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 945,
                            "file": "quic_packet.ivy",
                            "instruction": "    # The queued frames are deleted\n"
                        },
                        {
                            "line": 946,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 947,
                            "file": "quic_packet.ivy",
                            "instruction": "    queued_frames(scid) := frame.arr.empty;\n"
                        },
                        {
                            "line": 948,
                            "file": "quic_packet.ivy",
                            "instruction": "    queued_non_probing(scid) := false;\n"
                        },
                        {
                            "line": 949,
                            "file": "quic_packet.ivy",
                            "instruction": "    queued_non_ack(scid) := false;\n"
                        },
                        {
                            "line": 950,
                            "file": "quic_packet.ivy",
                            "instruction": "    queued_close(scid) := false;\n"
                        },
                        {
                            "line": 951,
                            "file": "quic_packet.ivy",
                            "instruction": "    num_queued_frames(scid) := 0;\n"
                        },
                        {
                            "line": 952,
                            "file": "quic_packet.ivy",
                            "instruction": "#Hamid\n"
                        },
                        {
                            "line": 953,
                            "file": "quic_packet.ivy",
                            "instruction": "    queued_ack_eliciting(scid) := false;\n"
                        },
                        {
                            "line": 954,
                            "file": "quic_packet.ivy",
                            "instruction": "#Hamid\n"
                        },
                        {
                            "line": 955,
                            "file": "quic_packet.ivy",
                            "instruction": "    need_sent_ack_eliciting_handshake_packet := false\n"
                        }
                    ]
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet"
                    }
                ],
                "exported": true,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [
                        {
                            "caller_func": "Environment",
                            "component": "Environment"
                        }
                    ],
                    "assertions": [
                        {
                            "line": 725,
                            "file": "quic_packet.ivy",
                            "assertion": "require pkt.ptype = quic_packet_type.handshake;\n"
                        },
                        {
                            "line": 726,
                            "file": "quic_packet.ivy",
                            "assertion": "require need_sent_ack_eliciting_handshake_packet;\n"
                        },
                        {
                            "line": 738,
                            "file": "quic_packet.ivy",
                            "assertion": "require pkt.ptype = queued_level(scid);\n"
                        },
                        {
                            "line": 740,
                            "file": "quic_packet.ivy",
                            "assertion": "require pkt.token.end ~= 0 -> (retry_sent(client_initial_rcid) | retry_recv(scid) | pkt.token = tls_api.upper.get_old_new_token);\n"
                        },
                        {
                            "line": 763,
                            "file": "quic_packet.ivy",
                            "assertion": "require connected(dcid) |\n"
                        },
                        {
                            "line": 776,
                            "file": "quic_packet.ivy",
                            "assertion": "require connected(dcid) -> connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 782,
                            "file": "quic_packet.ivy",
                            "assertion": "require dcid = client_initial_rcid;\n"
                        },
                        {
                            "line": 794,
                            "file": "quic_packet.ivy",
                            "assertion": "require pkt.seq_num = last_pkt_num(scid,pkt.ptype) + 0x1; # OK\n"
                        },
                        {
                            "line": 808,
                            "file": "quic_packet.ivy",
                            "assertion": "require ~sent_pkt(scid,pkt.ptype,pkt.seq_num);  # [4]\n"
                        },
                        {
                            "line": 813,
                            "file": "quic_packet.ivy",
                            "assertion": "require num_queued_frames(scid) > 0;  # [7]\n"
                        },
                        {
                            "line": 817,
                            "file": "quic_packet.ivy",
                            "assertion": "require pkt.payload = queued_frames(scid);\n"
                        },
                        {
                            "line": 821,
                            "file": "quic_packet.ivy",
                            "assertion": "require conn_seen(scid) & pkt.long & is_client(scid) -> conn_requested(src,dst,scid);\n"
                        },
                        {
                            "line": 826,
                            "file": "quic_packet.ivy",
                            "assertion": "require  conn_seen(dcid) -> hi_non_probing_endpoint(dcid,dst);  # [10]\n"
                        },
                        {
                            "line": 832,
                            "file": "quic_packet.ivy",
                            "assertion": "require ~_generating & ~queued_non_ack(scid) -> ack_credit(scid) > 0;  # [5]\n"
                        },
                        {
                            "line": 852,
                            "file": "quic_packet.ivy",
                            "assertion": "require ~draining_pkt_sent(scid) & queued_close(scid);\n"
                        },
                        {
                            "line": 1632,
                            "file": "quic_frame.ivy",
                            "assertion": "require e = quic_packet_type.one_rtt -> established_1rtt_keys(scid);\n"
                        },
                        {
                            "line": 1633,
                            "file": "quic_frame.ivy",
                            "assertion": "require e = quic_packet_type.handshake -> established_handshake_keys(scid);\n"
                        },
                        {
                            "line": 1634,
                            "file": "quic_frame.ivy",
                            "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                        },
                        {
                            "line": 1636,
                            "file": "quic_frame.ivy",
                            "assertion": "require ~(e = quic_packet_type.version_negociation) & ~(e = quic_packet_type.retry) & ~(e = quic_packet_type.zero_rtt);\n"
                        },
                        {
                            "line": 1637,
                            "file": "quic_frame.ivy",
                            "assertion": "require need_sent_ack_eliciting_application_packet | need_sent_ack_eliciting_handshake_packet | need_sent_ack_eliciting_initial_packet;\n"
                        }
                    ]
                }
            }
        },
        {
            "actions": {
                "line": 140,
                "action_name": "send_ack_eliciting_initial_packet",
                "implementation": [
                    {
                        "line": 140,
                        "file": "quic_packet.ivy",
                        "instruction": "\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": [
                        {
                            "line": 1200,
                            "file": "quic_packet.ivy",
                            "instruction": "    # is_not_sleeping := time_api.c_timer.is_sleep_fake_timeout;\n"
                        },
                        {
                            "line": 1201,
                            "file": "quic_packet.ivy",
                            "instruction": "    # require _generating -> is_not_sleeping;\n"
                        },
                        {
                            "line": 1202,
                            "file": "quic_packet.ivy",
                            "instruction": "    #require (_generating  -> is_not_sleeping);\n"
                        },
                        {
                            "line": 1203,
                            "file": "quic_packet.ivy",
                            "instruction": "    # if _generating {\n"
                        },
                        {
                            "line": 1204,
                            "file": "quic_packet.ivy",
                            "instruction": "        \n"
                        },
                        {
                            "line": 1205,
                            "file": "quic_packet.ivy",
                            "instruction": "    # };\n"
                        },
                        {
                            "line": 1206,
                            "file": "quic_packet.ivy",
                            "instruction": "    # require (~is_not_sleeping -> ~_generating);\n"
                        },
                        {
                            "line": 1207,
                            "file": "quic_packet.ivy",
                            "instruction": "    require pkt.ptype = quic_packet_type.initial;\n"
                        },
                        {
                            "line": 1208,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1209,
                            "file": "quic_packet.ivy",
                            "instruction": "    require need_sent_ack_eliciting_initial_packet;\n"
                        },
                        {
                            "line": 1210,
                            "file": "quic_packet.ivy",
                            "instruction": "    # Extract the source and destination cid's and packet number from the packet.\n"
                        },
                        {
                            "line": 1211,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1212,
                            "file": "quic_packet.ivy",
                            "instruction": "    var dcid := pkt.dst_cid;\n"
                        },
                        {
                            "line": 1213,
                            "file": "quic_packet.ivy",
                            "instruction": "    var scid := pkt.src_cid;\n"
                        },
                        {
                            "line": 1214,
                            "file": "quic_packet.ivy",
                            "instruction": "    if cid_mapped(dcid) {\n"
                        },
                        {
                            "line": 1215,
                            "file": "quic_packet.ivy",
                            "instruction": "\t    dcid := cid_to_aid(dcid);\n"
                        },
                        {
                            "line": 1216,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 1217,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1218,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1219,
                            "file": "quic_packet.ivy",
                            "instruction": "    require pkt.ptype = queued_level(scid);\n"
                        },
                        {
                            "line": 1220,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1221,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 1222,
                            "file": "quic_packet.ivy",
                            "instruction": "    require pkt.token.end ~= 0 -> (retry_sent(client_initial_rcid) | retry_recv(scid) | pkt.token = tls_api.upper.get_old_new_token);\n"
                        },
                        {
                            "line": 1223,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1224,
                            "file": "quic_packet.ivy",
                            "instruction": "    if (src = client_alt | dst = client_alt) & nclients = 1 {\n"
                        },
                        {
                            "line": 1225,
                            "file": "quic_packet.ivy",
                            "instruction": "\t    migration_done := true;\n"
                        },
                        {
                            "line": 1226,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 1227,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1228,
                            "file": "quic_packet.ivy",
                            "instruction": "    # Similarly, an endpoint MUST NOT reuse a connection ID when sending to\n"
                        },
                        {
                            "line": 1229,
                            "file": "quic_packet.ivy",
                            "instruction": "    # more than one destination address.  \n"
                        },
                        {
                            "line": 1230,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1231,
                            "file": "quic_packet.ivy",
                            "instruction": "    # The destination cid must represent an existing connection,\n"
                        },
                        {
                            "line": 1232,
                            "file": "quic_packet.ivy",
                            "instruction": "    # except in the case of a client initial packet, when the\n"
                        },
                        {
                            "line": 1233,
                            "file": "quic_packet.ivy",
                            "instruction": "    # destination cid may be the nonce cid chosen by the client for\n"
                        },
                        {
                            "line": 1234,
                            "file": "quic_packet.ivy",
                            "instruction": "    # the given source cid. TODO: The standard says that on receiving\n"
                        },
                        {
                            "line": 1235,
                            "file": "quic_packet.ivy",
                            "instruction": "    # the the server's cid, the clint must switch to it. However, we\n"
                        },
                        {
                            "line": 1236,
                            "file": "quic_packet.ivy",
                            "instruction": "    # can't know when that server's cid has actually been received by\n"
                        },
                        {
                            "line": 1237,
                            "file": "quic_packet.ivy",
                            "instruction": "    # the client. As an example, after the server sends its first\n"
                        },
                        {
                            "line": 1238,
                            "file": "quic_packet.ivy",
                            "instruction": "    # initial packet, the client might still retransmit its initial\n"
                        },
                        {
                            "line": 1239,
                            "file": "quic_packet.ivy",
                            "instruction": "    # packet using the nonce cid. In some cases, we can infer that the\n"
                        },
                        {
                            "line": 1240,
                            "file": "quic_packet.ivy",
                            "instruction": "    # client has in fact seen the server's cid (for example, if it\n"
                        },
                        {
                            "line": 1241,
                            "file": "quic_packet.ivy",
                            "instruction": "    # packet contains an ACK frame, or a CRYPTO frame that is\n"
                        },
                        {
                            "line": 1242,
                            "file": "quic_packet.ivy",
                            "instruction": "    # reponsive to a server FRAME. This is trick to check, however,\n"
                        },
                        {
                            "line": 1243,
                            "file": "quic_packet.ivy",
                            "instruction": "    # and the actual servers do not seem to check it.\n"
                        },
                        {
                            "line": 1244,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1245,
                            "file": "quic_packet.ivy",
                            "instruction": "    require connected(dcid) |\n"
                        },
                        {
                            "line": 1246,
                            "file": "quic_packet.ivy",
                            "instruction": "        pkt.ptype = quic_packet_type.initial\n"
                        },
                        {
                            "line": 1247,
                            "file": "quic_packet.ivy",
                            "instruction": "        & is_client(scid)\n"
                        },
                        {
                            "line": 1248,
                            "file": "quic_packet.ivy",
                            "instruction": "        & dcid = nonce_cid(scid);\n"
                        },
                        {
                            "line": 1249,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 1250,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1251,
                            "file": "quic_packet.ivy",
                            "instruction": "    # On long headers, both cids are given. If the destination cid is\n"
                        },
                        {
                            "line": 1252,
                            "file": "quic_packet.ivy",
                            "instruction": "    # connected, it must be connected to the source cid (otherwise it\n"
                        },
                        {
                            "line": 1253,
                            "file": "quic_packet.ivy",
                            "instruction": "    # must be a nonce generated by a client). \n"
                        },
                        {
                            "line": 1254,
                            "file": "quic_packet.ivy",
                            "instruction": "    # On short headers (meaning one_rtt) the scid is not given, so we\n"
                        },
                        {
                            "line": 1255,
                            "file": "quic_packet.ivy",
                            "instruction": "    # use the recorded value.\n"
                        },
                        {
                            "line": 1256,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1257,
                            "file": "quic_packet.ivy",
                            "instruction": "    if pkt.long {\n"
                        },
                        {
                            "line": 1258,
                            "file": "quic_packet.ivy",
                            "instruction": "        require connected(dcid) -> connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 1259,
                            "file": "quic_packet.ivy",
                            "instruction": "    } else {\n"
                        },
                        {
                            "line": 1260,
                            "file": "quic_packet.ivy",
                            "instruction": "        scid := connected_to(dcid);\n"
                        },
                        {
                            "line": 1261,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 1262,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1263,
                            "file": "quic_packet.ivy",
                            "instruction": "    if retry_sent(dcid) & ~_generating & ~zero_length_token & pkt.ptype = quic_packet_type.initial {\n"
                        },
                        {
                            "line": 1264,
                            "file": "quic_packet.ivy",
                            "instruction": "        require dcid = client_initial_rcid;\n"
                        },
                        {
                            "line": 1265,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 1266,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1267,
                            "file": "quic_packet.ivy",
                            "instruction": "    # TEMPORARY: prevent big packet number jumps (work around minquic bug)\n"
                        },
                        {
                            "line": 1268,
                            "file": "quic_packet.ivy",
                            "instruction": "    # Removed for MVFST that start with big PKT_NUM -> OK now\n"
                        },
                        {
                            "line": 1269,
                            "file": "quic_packet.ivy",
                            "instruction": "    # if  _generating {\n"
                        },
                        {
                            "line": 1270,
                            "file": "quic_packet.ivy",
                            "instruction": "        # if ~is_client(scid) {\n"
                        },
                        {
                            "line": 1271,
                            "file": "quic_packet.ivy",
                            "instruction": "        #     #client\n"
                        },
                        {
                            "line": 1272,
                            "file": "quic_packet.ivy",
                            "instruction": "        #     require pkt.seq_num > last_pkt_num(scid,pkt.ptype);\n"
                        },
                        {
                            "line": 1273,
                            "file": "quic_packet.ivy",
                            "instruction": "        #     require pkt.seq_num <= last_pkt_num(scid,pkt.ptype) + 0x15;\n"
                        },
                        {
                            "line": 1274,
                            "file": "quic_packet.ivy",
                            "instruction": "        # } else {\n"
                        },
                        {
                            "line": 1275,
                            "file": "quic_packet.ivy",
                            "instruction": "        #server\n"
                        },
                        {
                            "line": 1276,
                            "file": "quic_packet.ivy",
                            "instruction": "        require pkt.seq_num = last_pkt_num(scid,pkt.ptype) + 0x15; # OK\n"
                        },
                        {
                            "line": 1277,
                            "file": "quic_packet.ivy",
                            "instruction": "        # };\n"
                        },
                        {
                            "line": 1278,
                            "file": "quic_packet.ivy",
                            "instruction": "        #require pkt.seq_num < last_pkt_num(scid,pkt.ptype) + 0x1 & pkt.seq_num > last_pkt_num(scid,pkt.ptype);\n"
                        },
                        {
                            "line": 1279,
                            "file": "quic_packet.ivy",
                            "instruction": "    # };\n"
                        },
                        {
                            "line": 1280,
                            "file": "quic_packet.ivy",
                            "instruction": "    # else {\n"
                        },
                        {
                            "line": 1281,
                            "file": "quic_packet.ivy",
                            "instruction": "    #     # An endpoint generates an RTT sample on receiving an ACK frame that meets the following two conditions:\n"
                        },
                        {
                            "line": 1282,
                            "file": "quic_packet.ivy",
                            "instruction": "    #     # 1. the largest acknowledged packet number is newly acknowledged, and\n"
                        },
                        {
                            "line": 1283,
                            "file": "quic_packet.ivy",
                            "instruction": "    #     # 2. at least one of the newly acknowledged packets was ack-eliciting.\n"
                        },
                        {
                            "line": 1284,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1285,
                            "file": "quic_packet.ivy",
                            "instruction": "    #     if queued_ack_eliciting(scid) {\n"
                        },
                        {
                            "line": 1286,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1287,
                            "file": "quic_packet.ivy",
                            "instruction": "    #     }\n"
                        },
                        {
                            "line": 1288,
                            "file": "quic_packet.ivy",
                            "instruction": "    # };\n"
                        },
                        {
                            "line": 1289,
                            "file": "quic_packet.ivy",
                            "instruction": "    last_pkt_num(scid,pkt.ptype) := pkt.seq_num;\n"
                        },
                        {
                            "line": 1290,
                            "file": "quic_packet.ivy",
                            "instruction": "    require ~sent_pkt(scid,pkt.ptype,pkt.seq_num);  # [4]\n"
                        },
                        {
                            "line": 1291,
                            "file": "quic_packet.ivy",
                            "instruction": "    sent_pkt(scid,pkt.ptype,pkt.seq_num) := true;  # [1]\n"
                        },
                        {
                            "line": 1292,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1293,
                            "file": "quic_packet.ivy",
                            "instruction": "    # The payload may not be empty\n"
                        },
                        {
                            "line": 1294,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1295,
                            "file": "quic_packet.ivy",
                            "instruction": "    require num_queued_frames(scid) > 0;  # [7]\n"
                        },
                        {
                            "line": 1296,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1297,
                            "file": "quic_packet.ivy",
                            "instruction": "    # The payload must exactly match the queued frames.\n"
                        },
                        {
                            "line": 1298,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1299,
                            "file": "quic_packet.ivy",
                            "instruction": "    require pkt.payload = queued_frames(scid);\n"
                        },
                        {
                            "line": 1300,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1301,
                            "file": "quic_packet.ivy",
                            "instruction": "    # TEMPORARY: don't allow client migration during handshake\n"
                        },
                        {
                            "line": 1302,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1303,
                            "file": "quic_packet.ivy",
                            "instruction": "    require conn_seen(scid) & pkt.long & is_client(scid) -> conn_requested(src,dst,scid);\n"
                        },
                        {
                            "line": 1304,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1305,
                            "file": "quic_packet.ivy",
                            "instruction": "    # Packet must be sent to the endpoint from which the highest numbered\n"
                        },
                        {
                            "line": 1306,
                            "file": "quic_packet.ivy",
                            "instruction": "    # packet has been received. ~queued_challenge(dcid) & \n"
                        },
                        {
                            "line": 1307,
                            "file": "quic_packet.ivy",
                            "instruction": "    #call show_probing(dcid ,hi_non_probing(dcid));\n"
                        },
                        {
                            "line": 1308,
                            "file": "quic_packet.ivy",
                            "instruction": "    require  conn_seen(dcid) -> hi_non_probing_endpoint(dcid,dst);  # [10]\n"
                        },
                        {
                            "line": 1309,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1310,
                            "file": "quic_packet.ivy",
                            "instruction": "    # TEMPORARY: do not apply ack-only rule to generated packets\n"
                        },
                        {
                            "line": 1311,
                            "file": "quic_packet.ivy",
                            "instruction": "    # This can be removed when we have a frame queue per encryption level\n"
                        },
                        {
                            "line": 1312,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1313,
                            "file": "quic_packet.ivy",
                            "instruction": "    #call show_ack_credit(scid, ack_credit(scid), queued_ack_eliciting(scid), queued_non_ack(scid), pkt.seq_num);\n"
                        },
                        {
                            "line": 1314,
                            "file": "quic_packet.ivy",
                            "instruction": "    require ~_generating & ~queued_non_ack(scid) -> ack_credit(scid) > 0;  # [5]\n"
                        },
                        {
                            "line": 1315,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1316,
                            "file": "quic_packet.ivy",
                            "instruction": "    #Hamid - This is wrong, because if there is no ack credits, it prevents from sending a packet \n"
                        },
                        {
                            "line": 1317,
                            "file": "quic_packet.ivy",
                            "instruction": "    #        containing only a CONNECTION_CLOSE frame but we want to stop packets that contain only ACKs \n"
                        },
                        {
                            "line": 1318,
                            "file": "quic_packet.ivy",
                            "instruction": "    #    require ~_generating & ~queued_ack_eliciting(scid) -> ack_credit(scid) > 0;\n"
                        },
                        {
                            "line": 1319,
                            "file": "quic_packet.ivy",
                            "instruction": "    #Hamid\n"
                        },
                        {
                            "line": 1320,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1321,
                            "file": "quic_packet.ivy",
                            "instruction": "    # QUESTION: THis sentence is from draft-18 section 13.1: \"An\n"
                        },
                        {
                            "line": 1322,
                            "file": "quic_packet.ivy",
                            "instruction": "    #   endpoint MUST NOT send a packet containing only an ACK frame\n"
                        },
                        {
                            "line": 1323,
                            "file": "quic_packet.ivy",
                            "instruction": "    #   in response to a packet containing only ACK or PADDING frames,\n"
                        },
                        {
                            "line": 1324,
                            "file": "quic_packet.ivy",
                            "instruction": "    #   even if there are packet gaps which precede the received\n"
                        },
                        {
                            "line": 1325,
                            "file": "quic_packet.ivy",
                            "instruction": "    #   packet.\" Do we interpret this to mean that an ack-only packet\n"
                        },
                        {
                            "line": 1326,
                            "file": "quic_packet.ivy",
                            "instruction": "    #   cannot ack *only* ack-only packets?  Or that an ack-only\n"
                        },
                        {
                            "line": 1327,
                            "file": "quic_packet.ivy",
                            "instruction": "    #   packet cannot ack *any* ack-only packets?\n"
                        },
                        {
                            "line": 1328,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 1329,
                            "file": "quic_packet.ivy",
                            "instruction": "    # If the sender is in the draining state, this is the draining packet.\n"
                        },
                        {
                            "line": 1330,
                            "file": "quic_packet.ivy",
                            "instruction": "    # Make sure that a draining packet has not previously been sent and\n"
                        },
                        {
                            "line": 1331,
                            "file": "quic_packet.ivy",
                            "instruction": "    # that the packet contains a connection_close frame;\n"
                        },
                        {
                            "line": 1332,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1333,
                            "file": "quic_packet.ivy",
                            "instruction": "    if conn_draining(scid) {\n"
                        },
                        {
                            "line": 1334,
                            "file": "quic_packet.ivy",
                            "instruction": "        require ~draining_pkt_sent(scid) & queued_close(scid);\n"
                        },
                        {
                            "line": 1335,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 1336,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1337,
                            "file": "quic_packet.ivy",
                            "instruction": "    ...\n"
                        },
                        {
                            "line": 1338,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1339,
                            "file": "quic_packet.ivy",
                            "instruction": "    # Here, we have the updates to the packet protocol state.\n"
                        },
                        {
                            "line": 1340,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1341,
                            "file": "quic_packet.ivy",
                            "instruction": "    # TEMPORARY: The following are repeated because currently locals defined in\n"
                        },
                        {
                            "line": 1342,
                            "file": "quic_packet.ivy",
                            "instruction": "    # the \"before\" section cannot be accessed in the \"after\" section.\n"
                        },
                        {
                            "line": 1343,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1344,
                            "file": "quic_packet.ivy",
                            "instruction": "    var dcid := pkt.dst_cid;\n"
                        },
                        {
                            "line": 1345,
                            "file": "quic_packet.ivy",
                            "instruction": "    var scid := pkt.src_cid if pkt.long else connected_to(dcid);\n"
                        },
                        {
                            "line": 1346,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1347,
                            "file": "quic_packet.ivy",
                            "instruction": "    if cid_mapped(dcid) {\n"
                        },
                        {
                            "line": 1348,
                            "file": "quic_packet.ivy",
                            "instruction": "\t    dcid := cid_to_aid(dcid);\n"
                        },
                        {
                            "line": 1349,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 1350,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 1351,
                            "file": "quic_packet.ivy",
                            "instruction": "    # if is\n"
                        },
                        {
                            "line": 1352,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1353,
                            "file": "quic_packet.ivy",
                            "instruction": "    # TODO: the following should not be here\n"
                        },
                        {
                            "line": 1354,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1355,
                            "file": "quic_packet.ivy",
                            "instruction": "    if pkt.ptype = quic_packet_type.initial {\n"
                        },
                        {
                            "line": 1356,
                            "file": "quic_packet.ivy",
                            "instruction": "        initial_token := pkt.token;\n"
                        },
                        {
                            "line": 1357,
                            "file": "quic_packet.ivy",
                            "instruction": "        # An initial packet with an unseen destination cid is a connection request.\n"
                        },
                        {
                            "line": 1358,
                            "file": "quic_packet.ivy",
                            "instruction": "        if ~conn_seen(dcid)  {\n"
                        },
                        {
                            "line": 1359,
                            "file": "quic_packet.ivy",
                            "instruction": "            if ~zero_rtt_sent {\n"
                        },
                        {
                            "line": 1360,
                            "file": "quic_packet.ivy",
                            "instruction": "                call show_initial_request_initial;\n"
                        },
                        {
                            "line": 1361,
                            "file": "quic_packet.ivy",
                            "instruction": "                call tls_client_initial_request(src,dst,dcid,pkt.pversion,src_tls_id(src));\n"
                        },
                        {
                            "line": 1362,
                            "file": "quic_packet.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 1363,
                            "file": "quic_packet.ivy",
                            "instruction": "            conn_requested(src,dst,scid) := true;\n"
                        },
                        {
                            "line": 1364,
                            "file": "quic_packet.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 1365,
                            "file": "quic_packet.ivy",
                            "instruction": "        cid_to_token(dcid) := pkt.token;\n"
                        },
                        {
                            "line": 1366,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 1367,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1368,
                            "file": "quic_packet.ivy",
                            "instruction": "    conn_seen(scid) := true;  # [1]\n"
                        },
                        {
                            "line": 1369,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1370,
                            "file": "quic_packet.ivy",
                            "instruction": "    # Update the ack credits. A non-ack packet sent to a destination\n"
                        },
                        {
                            "line": 1371,
                            "file": "quic_packet.ivy",
                            "instruction": "    # increases the destination's ack credit. An ack packet decreases\n"
                        },
                        {
                            "line": 1372,
                            "file": "quic_packet.ivy",
                            "instruction": "    # the sender's ack credit.\n"
                        },
                        {
                            "line": 1373,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1374,
                            "file": "quic_packet.ivy",
                            "instruction": "#Hamid\n"
                        },
                        {
                            "line": 1375,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1376,
                            "file": "quic_packet.ivy",
                            "instruction": "#    if queued_non_ack(scid) {\n"
                        },
                        {
                            "line": 1377,
                            "file": "quic_packet.ivy",
                            "instruction": "#\tack_credit(dcid) := ack_credit(dcid) + 1;\n"
                        },
                        {
                            "line": 1378,
                            "file": "quic_packet.ivy",
                            "instruction": "#    } else {\n"
                        },
                        {
                            "line": 1379,
                            "file": "quic_packet.ivy",
                            "instruction": "#\tack_credit(scid) := ack_credit(scid) - 1;\n"
                        },
                        {
                            "line": 1380,
                            "file": "quic_packet.ivy",
                            "instruction": "#    };\n"
                        },
                        {
                            "line": 1381,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1382,
                            "file": "quic_packet.ivy",
                            "instruction": "    if queued_ack_eliciting(scid) {\n"
                        },
                        {
                            "line": 1383,
                            "file": "quic_packet.ivy",
                            "instruction": "       ack_credit(dcid) := ack_credit(dcid) + 1;\n"
                        },
                        {
                            "line": 1384,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 1385,
                            "file": "quic_packet.ivy",
                            "instruction": "    if ~queued_non_ack(scid) {\n"
                        },
                        {
                            "line": 1386,
                            "file": "quic_packet.ivy",
                            "instruction": "       ack_credit(scid) := ack_credit(scid) - 1;\n"
                        },
                        {
                            "line": 1387,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 1388,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1389,
                            "file": "quic_packet.ivy",
                            "instruction": "#Hamid\n"
                        },
                        {
                            "line": 1390,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1391,
                            "file": "quic_packet.ivy",
                            "instruction": "    # If this is a non-probing packet, update the highest non-probing\n"
                        },
                        {
                            "line": 1392,
                            "file": "quic_packet.ivy",
                            "instruction": "    # packet number seen on from this aid.\n"
                        },
                        {
                            "line": 1393,
                            "file": "quic_packet.ivy",
                            "instruction": "    # QUESTION: what if two different paths send the same packet number?\n"
                        },
                        {
                            "line": 1394,
                            "file": "quic_packet.ivy",
                            "instruction": "    # QUESTION: how do you compare packet numbers with different encryption levels?\n"
                        },
                        {
                            "line": 1395,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1396,
                            "file": "quic_packet.ivy",
                            "instruction": "    if queued_non_probing(scid) {\n"
                        },
                        {
                            "line": 1397,
                            "file": "quic_packet.ivy",
                            "instruction": "        if pkt.ptype = quic_packet_type.one_rtt {\n"
                        },
                        {
                            "line": 1398,
                            "file": "quic_packet.ivy",
                            "instruction": "            if pkt.seq_num >= hi_non_probing(scid) {\n"
                        },
                        {
                            "line": 1399,
                            "file": "quic_packet.ivy",
                            "instruction": "                hi_non_probing(scid) := pkt.seq_num;\n"
                        },
                        {
                            "line": 1400,
                            "file": "quic_packet.ivy",
                            "instruction": "                hi_non_probing_endpoint(scid,src) := true;\n"
                        },
                        {
                            "line": 1401,
                            "file": "quic_packet.ivy",
                            "instruction": "            }\n"
                        },
                        {
                            "line": 1402,
                            "file": "quic_packet.ivy",
                            "instruction": "        } else {\n"
                        },
                        {
                            "line": 1403,
                            "file": "quic_packet.ivy",
                            "instruction": "            hi_non_probing_endpoint(scid,src) := true;\n"
                        },
                        {
                            "line": 1404,
                            "file": "quic_packet.ivy",
                            "instruction": "        }\n"
                        },
                        {
                            "line": 1405,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 1406,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1407,
                            "file": "quic_packet.ivy",
                            "instruction": "    # If the packet contains a close frame, then set `pkt_has_close`\n"
                        },
                        {
                            "line": 1408,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1409,
                            "file": "quic_packet.ivy",
                            "instruction": "    if queued_close(scid) {\n"
                        },
                        {
                            "line": 1410,
                            "file": "quic_packet.ivy",
                            "instruction": "        pkt_has_close(scid,pkt.ptype,pkt.seq_num) := true;\n"
                        },
                        {
                            "line": 1411,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 1412,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1413,
                            "file": "quic_packet.ivy",
                            "instruction": "    # If the sender is in the draining state, this is the draining packet.\n"
                        },
                        {
                            "line": 1414,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1415,
                            "file": "quic_packet.ivy",
                            "instruction": "    if conn_draining(scid) {\n"
                        },
                        {
                            "line": 1416,
                            "file": "quic_packet.ivy",
                            "instruction": "        draining_pkt_sent(scid) := true\n"
                        },
                        {
                            "line": 1417,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 1418,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1419,
                            "file": "quic_packet.ivy",
                            "instruction": "    if pkt.ptype = quic_packet_type.initial & ~first_initial_send & zero_rtt_allowed {\n"
                        },
                        {
                            "line": 1420,
                            "file": "quic_packet.ivy",
                            "instruction": "        first_initial_send := true;\n"
                        },
                        {
                            "line": 1421,
                            "file": "quic_packet.ivy",
                            "instruction": "        initial_scid := scid;\n"
                        },
                        {
                            "line": 1422,
                            "file": "quic_packet.ivy",
                            "instruction": "        initial_dcid := dcid;\n"
                        },
                        {
                            "line": 1423,
                            "file": "quic_packet.ivy",
                            "instruction": "        queued_level(the_cid) := quic_packet_type.zero_rtt; # todo multiple client\n"
                        },
                        {
                            "line": 1424,
                            "file": "quic_packet.ivy",
                            "instruction": "    } else {\n"
                        },
                        {
                            "line": 1425,
                            "file": "quic_packet.ivy",
                            "instruction": "        first_initial_send := false;\n"
                        },
                        {
                            "line": 1426,
                            "file": "quic_packet.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 1427,
                            "file": "quic_packet.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1428,
                            "file": "quic_packet.ivy",
                            "instruction": "    # The queued frames are deleted\n"
                        },
                        {
                            "line": 1429,
                            "file": "quic_packet.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 1430,
                            "file": "quic_packet.ivy",
                            "instruction": "    queued_frames(scid) := frame.arr.empty;\n"
                        },
                        {
                            "line": 1431,
                            "file": "quic_packet.ivy",
                            "instruction": "    queued_non_probing(scid) := false;\n"
                        },
                        {
                            "line": 1432,
                            "file": "quic_packet.ivy",
                            "instruction": "    queued_non_ack(scid) := false;\n"
                        },
                        {
                            "line": 1433,
                            "file": "quic_packet.ivy",
                            "instruction": "    queued_close(scid) := false;\n"
                        },
                        {
                            "line": 1434,
                            "file": "quic_packet.ivy",
                            "instruction": "    num_queued_frames(scid) := 0;\n"
                        },
                        {
                            "line": 1435,
                            "file": "quic_packet.ivy",
                            "instruction": "#Hamid\n"
                        },
                        {
                            "line": 1436,
                            "file": "quic_packet.ivy",
                            "instruction": "    queued_ack_eliciting(scid) := false;\n"
                        },
                        {
                            "line": 1437,
                            "file": "quic_packet.ivy",
                            "instruction": "#Hamid\n"
                        },
                        {
                            "line": 1438,
                            "file": "quic_packet.ivy",
                            "instruction": "    need_sent_ack_eliciting_initial_packet := false;\n"
                        }
                    ]
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet"
                    }
                ],
                "exported": true,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [
                        {
                            "caller_func": "Environment",
                            "component": "Environment"
                        }
                    ],
                    "assertions": [
                        {
                            "line": 1208,
                            "file": "quic_packet.ivy",
                            "assertion": "require pkt.ptype = quic_packet_type.initial;\n"
                        },
                        {
                            "line": 1210,
                            "file": "quic_packet.ivy",
                            "assertion": "require need_sent_ack_eliciting_initial_packet;\n"
                        },
                        {
                            "line": 1220,
                            "file": "quic_packet.ivy",
                            "assertion": "require pkt.ptype = queued_level(scid);\n"
                        },
                        {
                            "line": 1223,
                            "file": "quic_packet.ivy",
                            "assertion": "require pkt.token.end ~= 0 -> (retry_sent(client_initial_rcid) | retry_recv(scid) | pkt.token = tls_api.upper.get_old_new_token);\n"
                        },
                        {
                            "line": 1246,
                            "file": "quic_packet.ivy",
                            "assertion": "require connected(dcid) |\n"
                        },
                        {
                            "line": 1259,
                            "file": "quic_packet.ivy",
                            "assertion": "require connected(dcid) -> connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 1265,
                            "file": "quic_packet.ivy",
                            "assertion": "require dcid = client_initial_rcid;\n"
                        },
                        {
                            "line": 1277,
                            "file": "quic_packet.ivy",
                            "assertion": "require pkt.seq_num = last_pkt_num(scid,pkt.ptype) + 0x15; # OK\n"
                        },
                        {
                            "line": 1291,
                            "file": "quic_packet.ivy",
                            "assertion": "require ~sent_pkt(scid,pkt.ptype,pkt.seq_num);  # [4]\n"
                        },
                        {
                            "line": 1296,
                            "file": "quic_packet.ivy",
                            "assertion": "require num_queued_frames(scid) > 0;  # [7]\n"
                        },
                        {
                            "line": 1300,
                            "file": "quic_packet.ivy",
                            "assertion": "require pkt.payload = queued_frames(scid);\n"
                        },
                        {
                            "line": 1304,
                            "file": "quic_packet.ivy",
                            "assertion": "require conn_seen(scid) & pkt.long & is_client(scid) -> conn_requested(src,dst,scid);\n"
                        },
                        {
                            "line": 1309,
                            "file": "quic_packet.ivy",
                            "assertion": "require  conn_seen(dcid) -> hi_non_probing_endpoint(dcid,dst);  # [10]\n"
                        },
                        {
                            "line": 1315,
                            "file": "quic_packet.ivy",
                            "assertion": "require ~_generating & ~queued_non_ack(scid) -> ack_credit(scid) > 0;  # [5]\n"
                        },
                        {
                            "line": 1335,
                            "file": "quic_packet.ivy",
                            "assertion": "require ~draining_pkt_sent(scid) & queued_close(scid);\n"
                        },
                        {
                            "line": 1051,
                            "file": "quic_frame.ivy",
                            "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                        },
                        {
                            "line": 1056,
                            "file": "quic_frame.ivy",
                            "assertion": "require ~conn_closed(scid);  # [1]\n"
                        },
                        {
                            "line": 1058,
                            "file": "quic_frame.ivy",
                            "assertion": "require e ~= quic_packet_type.zero_rtt;  # [4]\n"
                        },
                        {
                            "line": 1061,
                            "file": "quic_frame.ivy",
                            "assertion": "require ((f.offset) + (f.length)) <= crypto_data_end(scid,e);  # [2]\n"
                        },
                        {
                            "line": 1062,
                            "file": "quic_frame.ivy",
                            "assertion": "require f.data = crypto_data(scid,e).segment(f.offset,f.offset+f.length);  # [2]\n"
                        },
                        {
                            "line": 261,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require scid = the_cid;\n"
                        },
                        {
                            "line": 262,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require f.length > 0;\n"
                        },
                        {
                            "line": 263,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require f.offset = crypto_length(scid,e);\n"
                        },
                        {
                            "line": 264,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require f.length = (crypto_data_end(scid,e)) - f.offset;\n"
                        }
                    ]
                }
            }
        },
        {
            "actions": {
                "line": 1675,
                "action_name": "show_ack_credit",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "c",
                        "type": "cid"
                    },
                    {
                        "name": "p",
                        "type": "pkt_num"
                    },
                    {
                        "name": "eli",
                        "type": "bool"
                    },
                    {
                        "name": "non_ack",
                        "type": "bool"
                    },
                    {
                        "name": "pp",
                        "type": "pkt_num"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 1667,
                "action_name": "show_ack_delay_exponent",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "e",
                        "type": "microseconds"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 718,
                "action_name": "show_connection_timeout",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "idle_timeout",
                        "type": "microseconds"
                    },
                    {
                        "name": "max_idle_timeout_used",
                        "type": "microseconds"
                    },
                    {
                        "name": "pto_timeout",
                        "type": "microseconds"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 1663,
                "action_name": "show_current_idle_timeout",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "e",
                        "type": "microseconds"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 1443,
                "action_name": "show_initial_request_initial",
                "action_return": null,
                "exported": false,
                "action_parameters": null,
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 1444,
                "action_name": "show_is_retransmitted",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "p",
                        "type": "stream_pos"
                    },
                    {
                        "name": "c_time",
                        "type": "pkt_num"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 400,
                "action_name": "show_is_sleep_fake_timeout",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "is_sleep_fake_timeout",
                        "type": "bool"
                    }
                ],
                "called_from": [
                    {
                        "caller_func": "show_is_sleep_fake_timeout",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_current_idle_timeout",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_current_idle_timeout",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_is_retransmitted",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_connection_timeout",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_probe_idle_timeout",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_connection_timeout",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "respect_idle_timeout_none;",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_retransmit_lost_packet",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_queued_frames",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "is_generating",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_pkt_num",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_ack_credit",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_initial_request_initial;",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "tls_client_initial_request",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_is_sleep_fake_timeout",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_current_idle_timeout",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_current_idle_timeout",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_is_retransmitted",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_connection_timeout",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_probe_idle_timeout",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_connection_timeout",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "respect_idle_timeout_none;",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_retransmit_lost_packet",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_queued_frames",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "is_generating",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_pkt_num",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_ack_credit",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_initial_request_initial;",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "tls_client_initial_request",
                        "component": "quic_packet.ivy"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 1666,
                "action_name": "show_max_ack_delay",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "e",
                        "type": "microseconds"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 1664,
                "action_name": "show_probe_idle_timeout",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "e",
                        "type": "microseconds"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 402,
                "action_name": "show_queued_frames",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "queued_frames",
                        "type": "frame.arr"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 716,
                "action_name": "show_retransmit_lost_packet",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "paylo",
                        "type": "frame.arr"
                    }
                ],
                "called_from": [],
                "events": true
            }
        },
        {
            "functions": [
                {
                    "name": "last_pkt_num(C:cid,L:quic_packet_type) : pkt_num\n",
                    "comment": "",
                    "line": 232,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "max_acked(C:cid,L:quic_packet_type) : pkt_num\n",
                    "comment": "",
                    "line": 235,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "ack_credit(C:cid) : pkt_num\n",
                    "comment": "",
                    "line": 236,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "trans_params(C:cid) : trans_params_struct\n",
                    "comment": "",
                    "line": 238,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "cid_to_aid(C:cid) : cid \n",
                    "comment": "",
                    "line": 240,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "cid_to_token(C:cid) : stream_data \n",
                    "comment": "",
                    "line": 244,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "initial_token : stream_data \n",
                    "comment": "",
                    "line": 245,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "seqnum_to_cid (D : cid,S : cid_seq) : cid\n",
                    "comment": "",
                    "line": 249,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "max_seq_num(C:cid) : cid_seq\n",
                    "comment": "",
                    "line": 251,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "connected_to(C:cid) : cid\n",
                    "comment": "",
                    "line": 253,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "nonce_cid(C:cid) : cid\n",
                    "comment": "",
                    "line": 254,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "hi_non_probing(C:cid) : pkt_num\n",
                    "comment": "",
                    "line": 258,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "num_conn(C:cid) : stream_pos\n",
                    "comment": "",
                    "line": 263,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "initial_scid : cid \n",
                    "comment": "",
                    "line": 268,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "initial_dcid : cid \n",
                    "comment": "",
                    "line": 269,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "is_retransmitted(P:frame.arr) : pkt_num\n",
                    "comment": "",
                    "line": 273,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "dst_endpoint : ip.endpoint\n",
                    "comment": "",
                    "line": 279,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "path_validated_pkt_num: pkt_num\n",
                    "comment": "",
                    "line": 285,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "anti_amplification_limit : stream_pos\n",
                    "comment": "",
                    "line": 287,
                    "file": "quic_packet.ivy"
                }
            ],
            "relations": [
                {
                    "name": "conn_seen(C:cid)\n",
                    "comment": "",
                    "line": 228,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "conn_closed(C:cid)\n",
                    "comment": "",
                    "line": 229,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "conn_draining(C:cid)\n",
                    "comment": "",
                    "line": 230,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "draining_pkt_sent(C:cid)\n",
                    "comment": "",
                    "line": 231,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "sent_pkt(C:cid,L:quic_packet_type,N:pkt_num)\n",
                    "comment": "",
                    "line": 233,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "acked_pkt(C:cid,L:quic_packet_type,N:pkt_num)\n",
                    "comment": "",
                    "line": 234,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "trans_params_set(C:cid)\n",
                    "comment": "",
                    "line": 237,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "connected(C:cid)\n",
                    "comment": "",
                    "line": 239,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "cid_mapped(C:cid)\n",
                    "comment": "",
                    "line": 241,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "cid_mapped_token(C:cid)\n",
                    "comment": "",
                    "line": 246,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "is_client(C:cid)\n",
                    "comment": "",
                    "line": 255,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "conn_requested(S:ip.endpoint,D:ip.endpoint,C:cid)\n",
                    "comment": "",
                    "line": 256,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "issued_zero_length_cid ",
                    "comment": "(S:ip.endpoint,D:ip.endpoint) TODO pass that to handle function of frames",
                    "line": 257,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "hi_non_probing_endpoint(C:cid,E:ip.endpoint)\n",
                    "comment": "",
                    "line": 259,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "pkt_has_close(C:cid,L:quic_packet_type,N:pkt_num)\n",
                    "comment": "",
                    "line": 260,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "tls_handshake_finished\n",
                    "comment": "",
                    "line": 264,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "migration_done\n",
                    "comment": "",
                    "line": 265,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "first_initial_send\n",
                    "comment": "",
                    "line": 267,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "is_lost(C:cid,L:quic_packet_type,N:pkt_num)\n",
                    "comment": "",
                    "line": 272,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "address_validated\n",
                    "comment": "",
                    "line": 282,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "path_validated\n",
                    "comment": "",
                    "line": 284,
                    "file": "quic_packet.ivy"
                },
                {
                    "name": "is_not_sleeping\n",
                    "comment": "",
                    "line": 289,
                    "file": "quic_packet.ivy"
                }
            ]
        }
    ],
    "quic_transport_error_code.ivy": [
        {
            "actions": {
                "line": 87,
                "action_name": "handle_transport_error",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "ec",
                        "type": "error_code"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "handle_transport_error",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "handle_transport_error",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "handle_transport_error",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "handle_transport_error",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "handle_transport_error",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "handle_transport_error",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "handle_transport_error",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "handle_transport_error",
                        "component": "quic_frame.ivy"
                    },
                    {
                        "caller_func": "enqueue_frame",
                        "component": "quic_frame.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "functions": [],
            "relations": [
                {
                    "name": "is_no_error  \n",
                    "comment": "",
                    "line": 7,
                    "file": "quic_transport_error_code.ivy"
                },
                {
                    "name": "is_internal_error \n",
                    "comment": "",
                    "line": 10,
                    "file": "quic_transport_error_code.ivy"
                },
                {
                    "name": "is_server_busy \n",
                    "comment": "",
                    "line": 13,
                    "file": "quic_transport_error_code.ivy"
                },
                {
                    "name": "is_flow_control_error\n",
                    "comment": "",
                    "line": 16,
                    "file": "quic_transport_error_code.ivy"
                },
                {
                    "name": "is_stream_limit_error \n",
                    "comment": "",
                    "line": 19,
                    "file": "quic_transport_error_code.ivy"
                },
                {
                    "name": "is_stream_state_error \n",
                    "comment": "",
                    "line": 22,
                    "file": "quic_transport_error_code.ivy"
                },
                {
                    "name": "is_final_size_error  \n",
                    "comment": "",
                    "line": 25,
                    "file": "quic_transport_error_code.ivy"
                },
                {
                    "name": "is_frame_encoding_error \n",
                    "comment": "",
                    "line": 28,
                    "file": "quic_transport_error_code.ivy"
                },
                {
                    "name": "is_transport_parameter_error \n",
                    "comment": "",
                    "line": 31,
                    "file": "quic_transport_error_code.ivy"
                },
                {
                    "name": "is_connection_id_limit_error  \n",
                    "comment": "",
                    "line": 34,
                    "file": "quic_transport_error_code.ivy"
                },
                {
                    "name": "is_protocol_violation  \n",
                    "comment": "",
                    "line": 37,
                    "file": "quic_transport_error_code.ivy"
                },
                {
                    "name": "is_invalid_token \n",
                    "comment": "",
                    "line": 40,
                    "file": "quic_transport_error_code.ivy"
                },
                {
                    "name": "is_application_error \n",
                    "comment": "",
                    "line": 43,
                    "file": "quic_transport_error_code.ivy"
                },
                {
                    "name": "is_crypto_buffer_exceeded \n",
                    "comment": "",
                    "line": 46,
                    "file": "quic_transport_error_code.ivy"
                },
                {
                    "name": "is_key_update_error \n",
                    "comment": "",
                    "line": 49,
                    "file": "quic_transport_error_code.ivy"
                },
                {
                    "name": "is_aead_limit_reached\n",
                    "comment": "",
                    "line": 52,
                    "file": "quic_transport_error_code.ivy"
                },
                {
                    "name": "is_no_viable_path\n",
                    "comment": "",
                    "line": 55,
                    "file": "quic_transport_error_code.ivy"
                },
                {
                    "name": "is_crypto_error  \n",
                    "comment": "",
                    "line": 58,
                    "file": "quic_transport_error_code.ivy"
                },
                {
                    "name": "is_version_negociation_error\n",
                    "comment": "",
                    "line": 61,
                    "file": "quic_transport_error_code.ivy"
                }
            ]
        }
    ],
    "quic_packet_vn.ivy": [
        {
            "actions": {
                "line": 179,
                "action_name": "inc_cid",
                "implementation": [
                    {
                        "line": 178,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 179,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    res.val = c.val + inc;\n"
                    },
                    {
                        "line": 180,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    >>>\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "res",
                    "type": "cid"
                },
                "action_parameters": [
                    {
                        "name": "c",
                        "type": "cid"
                    },
                    {
                        "name": "inc",
                        "type": "stream_pos"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 82,
                "action_name": "packet_event_vn",
                "implementation": [
                    {
                        "line": 82,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 83,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "# Packet protocol state\n"
                    },
                    {
                        "line": 84,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "# ---------------------\n"
                    },
                    {
                        "line": 85,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 86,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "# This section defines the history variables that track the state of\n"
                    },
                    {
                        "line": 87,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "# the packet protocol. Some of these variables are shared between\n"
                    },
                    {
                        "line": 88,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "# protocol layers, so that the allowed interleavings of events at\n"
                    },
                    {
                        "line": 89,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "# different layers can be specified.\n"
                    },
                    {
                        "line": 90,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "#\n"
                    },
                    {
                        "line": 91,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 92,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "# Packet protocol state\n"
                    },
                    {
                        "line": 93,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "# ---------------------\n"
                    },
                    {
                        "line": 94,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 95,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "# Packet event specification\n"
                    },
                    {
                        "line": 96,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "# --------------------------\n"
                    },
                    {
                        "line": 97,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 98,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "# A packet event represents the transmision of a QUIC packet `pkt`\n"
                    },
                    {
                        "line": 99,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "# from source endpoint `src` to a QUIC destination endpoint `dst`\n"
                    },
                    {
                        "line": 100,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "# containing a sequence of queued frames.\n"
                    },
                    {
                        "line": 101,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "#\n"
                    },
                    {
                        "line": 102,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "# ### Requirements\n"
                    },
                    {
                        "line": 103,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "#\n"
                    },
                    {
                        "line": 104,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "# - The packet payload may not be empty [7].\n"
                    },
                    {
                        "line": 105,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "#\n"
                    },
                    {
                        "line": 106,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 107,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "#  An endpoint MUST NOT send a Version Negotiation packet\n"
                    },
                    {
                        "line": 108,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "#      in response to receiving a Version Negotiation packet. [1c]\n"
                    },
                    {
                        "line": 109,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 110,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "# A client that supports only this version of QUIC MUST abandon the\n"
                    },
                    {
                        "line": 111,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "#    current connection attempt if it receives a Version Negotiation\n"
                    },
                    {
                        "line": 112,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "#    packet, with the following two exceptions.  \n"
                    },
                    {
                        "line": 113,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 114,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "# A client MUST discard any\n"
                    },
                    {
                        "line": 115,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "#    Version Negotiation packet if it has received and successfully\n"
                    },
                    {
                        "line": 116,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "#    processed any other packet, including an earlier Version Negotiation\n"
                    },
                    {
                        "line": 117,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "#    packet.  \n"
                    },
                    {
                        "line": 118,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 119,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "# A client MUST discard a Version Negotiation packet that\n"
                    },
                    {
                        "line": 120,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "#    lists the QUIC version selected by the client.\n"
                    },
                    {
                        "line": 121,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 122,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 123,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "around packet_event_vn(src:ip.endpoint,dst:ip.endpoint,pkt:quic_packet_vn) {\n"
                    },
                    {
                        "line": 124,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "        # Extract the source and destination cid's and packet number from the packet.\n"
                    },
                    {
                        "line": 125,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 126,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    var dcid := pkt.dst_cid;\n"
                    },
                    {
                        "line": 127,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    var scid := pkt.src_cid;\n"
                    },
                    {
                        "line": 128,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    if cid_mapped(dcid) {\n"
                    },
                    {
                        "line": 129,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\t    dcid := cid_to_aid(dcid);\n"
                    },
                    {
                        "line": 130,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 131,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 132,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    if src = client_alt | dst = client_alt {\n"
                    },
                    {
                        "line": 133,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\t    migration_done := true;\n"
                    },
                    {
                        "line": 134,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\t    #call net.close(endpoint_id.client,sock);\t# destroy connection ?\n"
                    },
                    {
                        "line": 135,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 136,
                        "file": "quic_packet_vn.ivy",
                        "instruction": " \n"
                    },
                    {
                        "line": 137,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 138,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    require pkt.ptype = quic_packet_type.version_negociation;\n"
                    },
                    {
                        "line": 139,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 140,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    require ~negocation_of_version_initiated(src);  #[1c]\n"
                    },
                    {
                        "line": 141,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 142,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    ...\n"
                    },
                    {
                        "line": 143,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 144,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    var dcid := pkt.dst_cid;\n"
                    },
                    {
                        "line": 145,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    var scid := pkt.src_cid;\n"
                    },
                    {
                        "line": 146,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 147,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    if cid_mapped(dcid) {\n"
                    },
                    {
                        "line": 148,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\t    dcid := cid_to_aid(dcid);\n"
                    },
                    {
                        "line": 149,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 150,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 151,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    if  ~_generating  {\n"
                    },
                    {
                        "line": 152,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "        conn_requested(src,dst,scid) := false;\n"
                    },
                    {
                        "line": 153,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "        conn_requested(src,dst,dcid) := false;\n"
                    },
                    {
                        "line": 154,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "        connected(dcid) :=  false;\n"
                    },
                    {
                        "line": 155,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "        connected(scid) :=  false;\n"
                    },
                    {
                        "line": 156,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "        conn_seen(dcid) := false;\n"
                    },
                    {
                        "line": 157,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "        conn_seen(scid) := false;\n"
                    },
                    {
                        "line": 158,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 159,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "        var old_cid := the_cid;\n"
                    },
                    {
                        "line": 160,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "        the_cid := inc_cid(old_cid,2); # 0x0;\n"
                    },
                    {
                        "line": 161,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "        server_cid := 0x0;\n"
                    },
                    {
                        "line": 162,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "        connected(the_cid)    := false;\n"
                    },
                    {
                        "line": 163,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "        connected(server_cid) := false;\n"
                    },
                    {
                        "line": 164,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "        conn_seen(the_cid)    := false;\n"
                    },
                    {
                        "line": 165,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "        conn_seen(server_cid) := false;\n"
                    },
                    {
                        "line": 166,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 167,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "        var extns := tls_extensions.empty;\n"
                    },
                    {
                        "line": 168,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "        extns := extns.append(make_transport_parameters);\n"
                    },
                    {
                        "line": 169,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "        call tls_api.upper.create(0,false,extns);  # false means this instance of tls is not a server put that in shim\n"
                    },
                    {
                        "line": 170,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "        conn_requested(dst,src,the_cid) := true;\n"
                    },
                    {
                        "line": 171,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 172,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 173,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    # Record the packet number as latest see\n"
                    },
                    {
                        "line": 174,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    negocation_of_version_initiated(src) := true;\n"
                    },
                    {
                        "line": 175,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "}\n"
                    },
                    {
                        "line": 176,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 177,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "action inc_cid(c:cid, inc:stream_pos) returns(res:cid) = {\n"
                    },
                    {
                        "line": 178,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    <<<\n"
                    },
                    {
                        "line": 179,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    res.val = c.val + inc;\n"
                    },
                    {
                        "line": 180,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "    >>>\n"
                    },
                    {
                        "line": 181,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "}\n"
                    },
                    {
                        "line": 182,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 183,
                        "file": "quic_packet_vn.ivy",
                        "instruction": "import action show_initial_request_vn\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [
                        {
                            "line": 51,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "    if _generating {  # & ~conn_closed(pkt.the_cid)\n"
                        },
                        {
                            "line": 52,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        var spkt := pkt_serdes_vn.to_bytes(pkt);\n"
                        },
                        {
                            "line": 53,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        # var rnum := reference_pkt_num(spkt,false);\n"
                        },
                        {
                            "line": 54,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        # var tls_id := dst_tls_id(dst);\n"
                        },
                        {
                            "line": 55,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        # var ppkt := prot.encrypt(tls_id,rnum,spkt); # no encryption ?\n"
                        },
                        {
                            "line": 56,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        var pkts := prot.arr.empty;\n"
                        },
                        {
                            "line": 57,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        pkts := pkts.append(spkt);\n"
                        },
                        {
                            "line": 58,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        total_data_sent := total_data_sent + spkt.size;\n"
                        },
                        {
                            "line": 59,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        call net.send(endpoint_to_pid(src),endpoint_to_socket(src),dst,pkts);\n"
                        },
                        {
                            "line": 60,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "    }\n"
                        }
                    ],
                    "around": [
                        {
                            "line": 124,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "        # Extract the source and destination cid's and packet number from the packet.\n"
                        },
                        {
                            "line": 125,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 126,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "    var dcid := pkt.dst_cid;\n"
                        },
                        {
                            "line": 127,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "    var scid := pkt.src_cid;\n"
                        },
                        {
                            "line": 128,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "    if cid_mapped(dcid) {\n"
                        },
                        {
                            "line": 129,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "\t    dcid := cid_to_aid(dcid);\n"
                        },
                        {
                            "line": 130,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 131,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 132,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "    if src = client_alt | dst = client_alt {\n"
                        },
                        {
                            "line": 133,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "\t    migration_done := true;\n"
                        },
                        {
                            "line": 134,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "\t    #call net.close(endpoint_id.client,sock);\t# destroy connection ?\n"
                        },
                        {
                            "line": 135,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 136,
                            "file": "quic_packet_vn.ivy",
                            "instruction": " \n"
                        },
                        {
                            "line": 137,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 138,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "    require pkt.ptype = quic_packet_type.version_negociation;\n"
                        },
                        {
                            "line": 139,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 140,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "    require ~negocation_of_version_initiated(src);  #[1c]\n"
                        },
                        {
                            "line": 141,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 142,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "    ...\n"
                        },
                        {
                            "line": 143,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 144,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "    var dcid := pkt.dst_cid;\n"
                        },
                        {
                            "line": 145,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "    var scid := pkt.src_cid;\n"
                        },
                        {
                            "line": 146,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 147,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "    if cid_mapped(dcid) {\n"
                        },
                        {
                            "line": 148,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "\t    dcid := cid_to_aid(dcid);\n"
                        },
                        {
                            "line": 149,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 150,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 151,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "    if  ~_generating  {\n"
                        },
                        {
                            "line": 152,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "        conn_requested(src,dst,scid) := false;\n"
                        },
                        {
                            "line": 153,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "        conn_requested(src,dst,dcid) := false;\n"
                        },
                        {
                            "line": 154,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "        connected(dcid) :=  false;\n"
                        },
                        {
                            "line": 155,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "        connected(scid) :=  false;\n"
                        },
                        {
                            "line": 156,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "        conn_seen(dcid) := false;\n"
                        },
                        {
                            "line": 157,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "        conn_seen(scid) := false;\n"
                        },
                        {
                            "line": 158,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 159,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "        var old_cid := the_cid;\n"
                        },
                        {
                            "line": 160,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "        the_cid := inc_cid(old_cid,2); # 0x0;\n"
                        },
                        {
                            "line": 161,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "        server_cid := 0x0;\n"
                        },
                        {
                            "line": 162,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "        connected(the_cid)    := false;\n"
                        },
                        {
                            "line": 163,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "        connected(server_cid) := false;\n"
                        },
                        {
                            "line": 164,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "        conn_seen(the_cid)    := false;\n"
                        },
                        {
                            "line": 165,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "        conn_seen(server_cid) := false;\n"
                        },
                        {
                            "line": 166,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 167,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "        var extns := tls_extensions.empty;\n"
                        },
                        {
                            "line": 168,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "        extns := extns.append(make_transport_parameters);\n"
                        },
                        {
                            "line": 169,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "        call tls_api.upper.create(0,false,extns);  # false means this instance of tls is not a server put that in shim\n"
                        },
                        {
                            "line": 170,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "        conn_requested(dst,src,the_cid) := true;\n"
                        },
                        {
                            "line": 171,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 172,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 173,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "    # Record the packet number as latest see\n"
                        },
                        {
                            "line": 174,
                            "file": "quic_packet_vn.ivy",
                            "instruction": "    negocation_of_version_initiated(src) := true;\n"
                        }
                    ]
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet_vn"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "net.send",
                        "component": "ivy_quic_shim_client.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [
                        {
                            "caller_func": "tls_client_version_response",
                            "component": "quic_security.ivy"
                        }
                    ],
                    "assertions": [
                        {
                            "line": 139,
                            "file": "quic_packet_vn.ivy",
                            "assertion": "require pkt.ptype = quic_packet_type.version_negociation;\n"
                        },
                        {
                            "line": 141,
                            "file": "quic_packet_vn.ivy",
                            "assertion": "require ~negocation_of_version_initiated(src);  #[1c]\n"
                        },
                        {
                            "line": 1928,
                            "file": "quic_frame.ivy",
                            "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 1929,
                            "file": "quic_frame.ivy",
                            "assertion": "require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                        },
                        {
                            "line": 1930,
                            "file": "quic_frame.ivy",
                            "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                        },
                        {
                            "line": 1932,
                            "file": "quic_frame.ivy",
                            "assertion": "require ~is_client(scid);\n"
                        },
                        {
                            "line": 293,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require scid = the_cid;\n"
                        }
                    ]
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "functions": [],
            "relations": []
        }
    ],
    "forged_quic_packet.ivy": [
        {
            "actions": {
                "action_name": "init",
                "action_return": null,
                "implementation": [
                    {
                        "line": 148,
                        "file": "forged_quic_packet.ivy",
                        "instruction": "    packed_forwarded(P) := false;\n"
                    },
                    {
                        "line": 149,
                        "file": "forged_quic_packet.ivy",
                        "instruction": "    packed_forwarded_arr(P) := false;\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "exported": false,
                "events": false,
                "called_from": [],
                "init": true,
                "action_parameters": null
            }
        },
        {
            "functions": [],
            "relations": [
                {
                    "name": "packed_forwarded(P:stream_data)\n",
                    "comment": "",
                    "line": 137,
                    "file": "forged_quic_packet.ivy"
                },
                {
                    "name": "packed_forwarded_arr(P:forged_pkts)\n",
                    "comment": "",
                    "line": 139,
                    "file": "forged_quic_packet.ivy"
                }
            ]
        }
    ],
    "forged_quic_packet_retry.ivy": [
        {
            "actions": {
                "action_name": "init",
                "action_return": null,
                "implementation": [
                    {
                        "line": 157,
                        "file": "forged_quic_packet_retry.ivy",
                        "instruction": "\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "exported": false,
                "events": false,
                "called_from": [],
                "init": true,
                "action_parameters": null
            }
        },
        {
            "functions": [],
            "relations": []
        }
    ],
    "replayed_quic_packet_0rtt.ivy": [
        {
            "actions": {
                "action_name": "init",
                "action_return": null,
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "exported": false,
                "events": false,
                "called_from": [],
                "init": true,
                "action_parameters": null
            }
        },
        {
            "functions": [],
            "relations": []
        }
    ],
    "ivy_quic_mim.ivy": [
        {
            "actions": {
                "action_name": "init",
                "action_return": null,
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "exported": false,
                "events": false,
                "called_from": [],
                "init": true,
                "action_parameters": null
            }
        },
        {
            "functions": [],
            "relations": []
        }
    ],
    "ivy_quic_client_standard_tp.ivy": [
        {
            "actions": {
                "line": 4,
                "action_name": "make_transport_parameters",
                "implementation": [
                    {
                        "line": 3,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    var imsdbl : initial_max_stream_data_bidi_local;\n"
                    },
                    {
                        "line": 4,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    imsdbl.stream_pos_32 := max_stream_data;\n"
                    },
                    {
                        "line": 5,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    var imd : initial_max_data;\n"
                    },
                    {
                        "line": 6,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    imd.stream_pos_32 := random_stream_pos(1,0xFFFFFFF);\n"
                    },
                    {
                        "line": 7,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    var it : max_idle_timeout;\n"
                    },
                    {
                        "line": 8,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    it.seconds_16 := 0x9C40; #0x3A98; #random_microsecs(0,0xFFFFFFF); 15sec\n"
                    },
                    {
                        "line": 9,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    var imsdbr : initial_max_stream_data_bidi_remote;\n"
                    },
                    {
                        "line": 10,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    imsdbr.stream_pos_32 := max_stream_data;\n"
                    },
                    {
                        "line": 11,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    var imsdu : initial_max_stream_data_uni;\n"
                    },
                    {
                        "line": 12,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    imsdu.stream_pos_32 := random_stream_pos(1,0xFFFFFFF);\n"
                    },
                    {
                        "line": 13,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    tp.transport_parameters := tp.transport_parameters.append(imsdbl);\n"
                    },
                    {
                        "line": 14,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    tp.transport_parameters := tp.transport_parameters.append(imd);\n"
                    },
                    {
                        "line": 15,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    tp.transport_parameters := tp.transport_parameters.append(it);\n"
                    },
                    {
                        "line": 16,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    tp.transport_parameters := tp.transport_parameters.append(imsdbr);\n"
                    },
                    {
                        "line": 17,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    tp.transport_parameters := tp.transport_parameters.append(imsdu);\n"
                    },
                    {
                        "line": 18,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 19,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    var icid : initial_source_connection_id; #TODO update v29\n"
                    },
                    {
                        "line": 20,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    icid.scid := the_cid;\n"
                    },
                    {
                        "line": 21,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    tp.transport_parameters := tp.transport_parameters.append(icid);\n"
                    },
                    {
                        "line": 22,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 23,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    var max_streams_uni : initial_max_stream_id_uni; #TODO update rfc9000\n"
                    },
                    {
                        "line": 24,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    max_streams_uni.stream_id_16 := random_stream_id(4,0xFFFFFFF);\n"
                    },
                    {
                        "line": 25,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    tp.transport_parameters := tp.transport_parameters.append(max_streams_uni);\n"
                    },
                    {
                        "line": 26,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 27,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    var max_ack_dela : max_ack_delay; #TODO update rfc9000 -> ERROR\n"
                    },
                    {
                        "line": 28,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    max_ack_dela.exponent_8 := 0x4000; #random_microsecs(0x20,0x4000);\n"
                    },
                    {
                        "line": 29,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    local_max_ack_delay_tp := milliseconds_to_microseconds(max_ack_dela.exponent_8);\n"
                    },
                    {
                        "line": 30,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    tp.transport_parameters := tp.transport_parameters.append(max_ack_dela);\n"
                    },
                    {
                        "line": 31,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 32,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    var max_streams_bidi : initial_max_stream_id_bidi; #TODO update v29\n"
                    },
                    {
                        "line": 33,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    max_streams_bidi.stream_id_16 := random_stream_id(4,0xFFFFFFF);\n"
                    },
                    {
                        "line": 34,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    tp.transport_parameters := tp.transport_parameters.append(max_streams_bidi);\n"
                    },
                    {
                        "line": 35,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 36,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 37,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    var no_migration : disable_active_migration; #TODO update v29\n"
                    },
                    {
                        "line": 38,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    tp.transport_parameters := tp.transport_parameters.append(no_migration);\n"
                    },
                    {
                        "line": 39,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 40,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 41,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    # var max_packet_z : max_packet_size; #TODO update rfc9000\n"
                    },
                    {
                        "line": 42,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    # max_packet_z.stream_pos_16 := 1500;\n"
                    },
                    {
                        "line": 43,
                        "file": "ivy_quic_client_standard_tp.ivy",
                        "instruction": "    # tp.transport_parameters := tp.transport_parameters.append(max_packet_z);\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "tp",
                    "type": "quic_transport_parameters"
                },
                "action_parameters": null,
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "milliseconds_to_microseconds",
                        "component": "ivy_quic_client_standard_tp.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "functions": [],
            "relations": []
        }
    ],
    "quic_time.ivy": [
        {
            "actions": {
                "line": 21,
                "action_name": "milliseconds_to_microseconds",
                "implementation": [
                    {
                        "line": 20,
                        "file": "quic_time.ivy",
                        "instruction": "   <<<\n"
                    },
                    {
                        "line": 21,
                        "file": "quic_time.ivy",
                        "instruction": "    scaled = delay * 1000;\n"
                    },
                    {
                        "line": 22,
                        "file": "quic_time.ivy",
                        "instruction": "   >>> \n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": {
                    "name": "scaled",
                    "type": "microseconds"
                },
                "action_parameters": [
                    {
                        "name": "delay",
                        "type": "milliseconds"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "milliseconds_to_microseconds",
                        "component": "quic_packet.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "functions": [
                {
                    "name": "sleep_start:milliseconds\n",
                    "comment": "",
                    "line": 17,
                    "file": "quic_time.ivy"
                }
            ],
            "relations": [
                {
                    "name": "slept\n",
                    "comment": "",
                    "line": 18,
                    "file": "quic_time.ivy"
                }
            ]
        }
    ],
    "quic_congestion_control.ivy": [
        {
            "actions": {
                "line": 65,
                "action_name": "on_congestion_event",
                "implementation": [
                    {
                        "line": 63,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    # No reaction if already in a recovery period.\n"
                    },
                    {
                        "line": 64,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    if ~ (sent_time_of_last_loss <= congestion_recovery_start_time) {\n"
                    },
                    {
                        "line": 65,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        # Enter recovery period.\n"
                    },
                    {
                        "line": 66,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        congestion_recovery_start_time := time_api.c_timer.now_micros;\n"
                    },
                    {
                        "line": 67,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        ssthresh := congestion_window / kLossReductionFactor;\n"
                    },
                    {
                        "line": 68,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        congestion_window := ssthresh;\n"
                    },
                    {
                        "line": 69,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        if congestion_window < kMinimumWindow {\n"
                    },
                    {
                        "line": 70,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "            congestion_window := kMinimumWindow;\n"
                    },
                    {
                        "line": 71,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 72,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        # A packet can be sent to speed up loss recovery.\n"
                    },
                    {
                        "line": 73,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        # TODO MaybeSendOnePacket()\n"
                    },
                    {
                        "line": 74,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    }\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "sent_time_of_last_loss",
                        "type": "microseconds"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "on_congestion_event",
                        "component": "quic_congestion_control.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 102,
                "action_name": "on_packet_acked",
                "implementation": [
                    {
                        "line": 101,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    if sent_packets_in_flight(acked_packet.ptype,acked_packet.seq_num) {\n"
                    },
                    {
                        "line": 102,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        bytes_in_flight := bytes_in_flight - sent_packets_sent_bytes(acked_packet.ptype,acked_packet.seq_num);\n"
                    },
                    {
                        "line": 103,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        # Do not increase congestion_window if application\n"
                    },
                    {
                        "line": 104,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        # limited or flow control limited.\n"
                    },
                    {
                        "line": 105,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        # if (IsAppOrFlowControlLimited())\n"
                    },
                    {
                        "line": 106,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        #     return # TODO\n"
                    },
                    {
                        "line": 107,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        \n"
                    },
                    {
                        "line": 108,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        # Do not increase congestion window in recovery period.\n"
                    },
                    {
                        "line": 109,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        if ~(sent_packets_time_sent(acked_packet.ptype,acked_packet.seq_num) <= congestion_recovery_start_time) {\n"
                    },
                    {
                        "line": 110,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "            # Slow start.\n"
                    },
                    {
                        "line": 111,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "            if congestion_window < ssthresh {\n"
                    },
                    {
                        "line": 112,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "                congestion_window := congestion_window + sent_packets_sent_bytes(acked_packet.ptype,acked_packet.seq_num);\n"
                    },
                    {
                        "line": 113,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "            } else {\n"
                    },
                    {
                        "line": 114,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "                # Congestion avoidance.\n"
                    },
                    {
                        "line": 115,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "                congestion_window := congestion_window + max_datagram_size * sent_packets_sent_bytes(acked_packet.ptype,acked_packet.seq_num) / congestion_window;\n"
                    },
                    {
                        "line": 116,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "            }\n"
                    },
                    {
                        "line": 117,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 118,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    }\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "acked_packet",
                        "type": "quic_packet"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "on_packet_acked",
                        "component": "quic_congestion_control.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 94,
                "action_name": "on_packets_acked",
                "implementation": [
                    {
                        "line": 93,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    var idx : stream_pos := 0;\n"
                    },
                    {
                        "line": 94,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    while idx < newly_acked_packets_end(pn_space) {\n"
                    },
                    {
                        "line": 95,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        call on_packet_acked(newly_acked_packets(pn_space,idx));\n"
                    },
                    {
                        "line": 96,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        idx := idx + 1;\n"
                    },
                    {
                        "line": 97,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    }\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "pn_space",
                        "type": "quic_packet_type"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "on_packets_acked",
                        "component": "quic_loss_recovery.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 125,
                "action_name": "on_packets_lost",
                "implementation": [
                    {
                        "line": 124,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    var sent_time_of_last_loss : microseconds := 0;\n"
                    },
                    {
                        "line": 125,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    # Remove lost packets from bytes_in_flight.\n"
                    },
                    {
                        "line": 126,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    var idx :stream_pos := 0;\n"
                    },
                    {
                        "line": 127,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    while idx < lost_packets_end(pn_space) {\n"
                    },
                    {
                        "line": 128,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        packets_to_retransmit(pn_space, packets_to_retransmit_end(pn_space)) := lost_packets(pn_space,idx).payload;\n"
                    },
                    {
                        "line": 129,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        packets_to_retransmit_end(pn_space) := packets_to_retransmit_end(pn_space) + 1;\n"
                    },
                    {
                        "line": 130,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        if sent_packets_in_flight(lost_packets(pn_space,idx).ptype,lost_packets(pn_space,idx).seq_num) {\n"
                    },
                    {
                        "line": 131,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "            bytes_in_flight := bytes_in_flight - sent_packets_sent_bytes(lost_packets(pn_space,idx).ptype,lost_packets(pn_space,idx).seq_num);\n"
                    },
                    {
                        "line": 132,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "            if sent_time_of_last_loss < sent_packets_time_sent(lost_packets(pn_space,idx).ptype,lost_packets(pn_space,idx).seq_num) {\n"
                    },
                    {
                        "line": 133,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "                sent_time_of_last_loss := sent_packets_time_sent(lost_packets(pn_space,idx).ptype,lost_packets(pn_space,idx).seq_num);\n"
                    },
                    {
                        "line": 134,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "            }\n"
                    },
                    {
                        "line": 135,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 136,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        idx := idx + 1;\n"
                    },
                    {
                        "line": 137,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 138,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    # Congestion event if in-flight packets were lost\n"
                    },
                    {
                        "line": 139,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    if sent_time_of_last_loss ~= 0 {\n"
                    },
                    {
                        "line": 140,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        call on_congestion_event(sent_time_of_last_loss);\n"
                    },
                    {
                        "line": 141,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    }\n"
                    },
                    {
                        "line": 142,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    # Reset the congestion window if the loss of these\n"
                    },
                    {
                        "line": 143,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    # packets indicates persistent congestion.\n"
                    },
                    {
                        "line": 144,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    # Only consider packets sent after getting an RTT sample.\n"
                    },
                    {
                        "line": 145,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    if first_rtt_sample ~= 0 {\n"
                    },
                    {
                        "line": 146,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        pc_lost_end(pn_space) := 0;\n"
                    },
                    {
                        "line": 147,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        idx : stream_pos := 0;\n"
                    },
                    {
                        "line": 148,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        while idx < lost_packets_end(pn_space) {\n"
                    },
                    {
                        "line": 149,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "              if sent_packets_time_sent(lost_packets(pn_space,idx).ptype,lost_packets(pn_space,idx).seq_num) > first_rtt_sample {\n"
                    },
                    {
                        "line": 150,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "                  pc_lost_end(pn_space) := pc_lost_end(pn_space) + 1;\n"
                    },
                    {
                        "line": 151,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "              }  \n"
                    },
                    {
                        "line": 152,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "              idx := idx + 1;\n"
                    },
                    {
                        "line": 153,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 154,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        if pc_lost_end(pn_space) >= kPersistentCongestionThreshold {\n"
                    },
                    {
                        "line": 155,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "            congestion_window := kMinimumWindow;\n"
                    },
                    {
                        "line": 156,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "            congestion_recovery_start_time := 0;\n"
                    },
                    {
                        "line": 157,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 158,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    };\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "pn_space",
                        "type": "quic_packet_type"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "on_packets_lost",
                        "component": "quic_loss_recovery.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 166,
                "action_name": "remove_from_bytes_in_flight",
                "implementation": [
                    {
                        "line": 165,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    var idx :stream_pos := 0;\n"
                    },
                    {
                        "line": 166,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    while idx < sent_packets_end(pn_space) {\n"
                    },
                    {
                        "line": 167,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        if sent_packets_in_flight(sent_packets(pn_space, idx).ptype, sent_packets(pn_space, idx).seq_num) {\n"
                    },
                    {
                        "line": 168,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "            bytes_in_flight := bytes_in_flight - sent_packets_sent_bytes(sent_packets(pn_space, idx).ptype, sent_packets(pn_space, idx).seq_num);\n"
                    },
                    {
                        "line": 169,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        }\n"
                    },
                    {
                        "line": 170,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "        idx := idx + 1;\n"
                    },
                    {
                        "line": 171,
                        "file": "quic_congestion_control.ivy",
                        "instruction": "    }\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "pn_space",
                        "type": "quic_packet_type"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "remove_from_bytes_in_flight",
                        "component": "quic_loss_recovery.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "functions": [
                {
                    "name": "kInitialWindow : stream_pos\n",
                    "comment": "",
                    "line": 6,
                    "file": "quic_congestion_control.ivy"
                },
                {
                    "name": "kMinimumWindow : stream_pos\n",
                    "comment": "",
                    "line": 9,
                    "file": "quic_congestion_control.ivy"
                },
                {
                    "name": "kLossReductionFactor: stream_pos\n",
                    "comment": "",
                    "line": 12,
                    "file": "quic_congestion_control.ivy"
                },
                {
                    "name": "kPersistentCongestionThreshold : stream_pos\n",
                    "comment": "",
                    "line": 15,
                    "file": "quic_congestion_control.ivy"
                },
                {
                    "name": "max_datagram_size : stream_pos\n",
                    "comment": "",
                    "line": 22,
                    "file": "quic_congestion_control.ivy"
                },
                {
                    "name": "ecn_ce_counters(E:quic_packet_type) : stream_pos\n",
                    "comment": "",
                    "line": 27,
                    "file": "quic_congestion_control.ivy"
                },
                {
                    "name": "bytes_in_flight : stream_pos\n",
                    "comment": "",
                    "line": 34,
                    "file": "quic_congestion_control.ivy"
                },
                {
                    "name": "congestion_window : stream_pos\n",
                    "comment": "",
                    "line": 39,
                    "file": "quic_congestion_control.ivy"
                },
                {
                    "name": "congestion_recovery_start_time : microseconds\n",
                    "comment": "",
                    "line": 43,
                    "file": "quic_congestion_control.ivy"
                },
                {
                    "name": "ssthresh : stream_pos\n",
                    "comment": "",
                    "line": 47,
                    "file": "quic_congestion_control.ivy"
                }
            ],
            "relations": []
        }
    ],
    "quic_packet_0rtt.ivy": [
        {
            "actions": {
                "line": 89,
                "action_name": "packet_event_0rtt",
                "implementation": [
                    {
                        "line": 89,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 90,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# Packet protocol state\n"
                    },
                    {
                        "line": 91,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# ---------------------\n"
                    },
                    {
                        "line": 92,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 93,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# This section defines the history variables that track the state of\n"
                    },
                    {
                        "line": 94,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# the packet protocol. Some of these variables are shared between\n"
                    },
                    {
                        "line": 95,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# protocol layers, so that the allowed interleavings of events at\n"
                    },
                    {
                        "line": 96,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# different layers can be specified.\n"
                    },
                    {
                        "line": 97,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#\n"
                    },
                    {
                        "line": 98,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 99,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# Packet protocol state\n"
                    },
                    {
                        "line": 100,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# ---------------------\n"
                    },
                    {
                        "line": 101,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 102,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# Packet event specification\n"
                    },
                    {
                        "line": 103,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# --------------------------\n"
                    },
                    {
                        "line": 104,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 105,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# A packet event represents the transmision of a QUIC packet `pkt`\n"
                    },
                    {
                        "line": 106,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# from source endpoint `src` to a QUIC destination endpoint `dst`\n"
                    },
                    {
                        "line": 107,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# containing a sequence of queued frames.\n"
                    },
                    {
                        "line": 108,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#\n"
                    },
                    {
                        "line": 109,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# ### Requirements\n"
                    },
                    {
                        "line": 110,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#\n"
                    },
                    {
                        "line": 111,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# - The packet payload may not be empty [7].\n"
                    },
                    {
                        "line": 112,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#\n"
                    },
                    {
                        "line": 113,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# - A sender may not re-use a packet number on a given connection [4].\n"
                    },
                    {
                        "line": 114,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#\n"
                    },
                    {
                        "line": 115,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# - A packet containing only ack frames and padding is *ack-only*.\n"
                    },
                    {
                        "line": 116,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#   For a given cid, the number of ack-only packets sent from src to dst\n"
                    },
                    {
                        "line": 117,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#   must not be greater than the number of non-ack-only packets sent\n"
                    },
                    {
                        "line": 118,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#   from dst to src [5].\n"
                    },
                    {
                        "line": 119,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 120,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 121,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# ### Effects\n"
                    },
                    {
                        "line": 122,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#\n"
                    },
                    {
                        "line": 123,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# - The `conn_seen` and `sent_pkt` relations are updated to reflect\n"
                    },
                    {
                        "line": 124,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#   the observed packet [1].\n"
                    },
                    {
                        "line": 125,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# - The `last_pkt_num` function is updated to indicate the observed\n"
                    },
                    {
                        "line": 126,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#   packets as most recent for the packet's source and cid.\n"
                    },
                    {
                        "line": 127,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 128,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#   An endpoint MUST treat the following as a connection error of type\n"
                    },
                    {
                        "line": 129,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#   TRANSPORT_PARAMETER_ERROR or PROTOCOL_VIOLATION:\n"
                    },
                    {
                        "line": 130,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#   *  absence of the retry_source_connection_id transport parameter from\n"
                    },
                    {
                        "line": 131,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#      the server after receiving a Retry packet, [1]\n"
                    },
                    {
                        "line": 132,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#   *  presence of the retry_source_connection_id transport parameter\n"
                    },
                    {
                        "line": 133,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#      when no Retry packet was received, or [3]\n"
                    },
                    {
                        "line": 134,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#   *  a mismatch between values received from a peer in these transport\n"
                    },
                    {
                        "line": 135,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#      parameters and the value sent in the corresponding Destination or\n"
                    },
                    {
                        "line": 136,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#      Source Connection ID fields of Initial packets. [2]\n"
                    },
                    {
                        "line": 137,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#   If a zero-length connection ID is selected, the corresponding\n"
                    },
                    {
                        "line": 138,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#   transport parameter is included with a zero-length value.\n"
                    },
                    {
                        "line": 139,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 140,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    When implementing the client role, applications need to be able to:\n"
                    },
                    {
                        "line": 141,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    *  open a connection, which begins the exchange described in\n"
                    },
                    {
                        "line": 142,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#       Section 7;\n"
                    },
                    {
                        "line": 143,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    *  enable 0-RTT when available; and\n"
                    },
                    {
                        "line": 144,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    *  be informed when 0-RTT has been accepted or rejected by a server.\n"
                    },
                    {
                        "line": 145,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 146,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    The first flight of 0-RTT packets use the same Destination Connection\n"
                    },
                    {
                        "line": 147,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    ID and Source Connection ID values as the client's first Initial\n"
                    },
                    {
                        "line": 148,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    packet. [2]\n"
                    },
                    {
                        "line": 149,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 150,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    Both endpoints **store the value of the server transport parameters**\n"
                    },
                    {
                        "line": 151,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    from a connection and apply them to any 0-RTT packets that are sent\n"
                    },
                    {
                        "line": 152,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    in subsequent connections to that peer, except for transport\n"
                    },
                    {
                        "line": 153,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    parameters that are explicitly excluded.  Remembered transport\n"
                    },
                    {
                        "line": 154,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    parameters apply to the new connection until the handshake completes\n"
                    },
                    {
                        "line": 155,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    and the client starts sending 1-RTT packets.  Once the handshake\n"
                    },
                    {
                        "line": 156,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    completes, the client uses the transport parameters established in\n"
                    },
                    {
                        "line": 157,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    the handshake. \n"
                    },
                    {
                        "line": 158,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    A client that attempts to send 0-RTT data MUST remember all other\n"
                    },
                    {
                        "line": 159,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    transport parameters used by the server.  The server can remember\n"
                    },
                    {
                        "line": 160,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    these transport parameters, or store an integrity-protected copy of\n"
                    },
                    {
                        "line": 161,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    the values in the ticket and recover the information when accepting\n"
                    },
                    {
                        "line": 162,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    0-RTT data.  A server uses the transport parameters in determining\n"
                    },
                    {
                        "line": 163,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    whether to accept 0-RTT data.\n"
                    },
                    {
                        "line": 164,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    If 0-RTT data is accepted by the server, the server MUST NOT reduce\n"
                    },
                    {
                        "line": 165,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    any limits or alter any values that might be violated by the client\n"
                    },
                    {
                        "line": 166,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    with its 0-RTT data.  ***In particular, a server that accepts 0-RTT data\n"
                    },
                    {
                        "line": 167,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    MUST NOT set values for the following parameters (Section 18.2) that\n"
                    },
                    {
                        "line": 168,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    are smaller than the remembered value of the parameters.*** [6]\n"
                    },
                    {
                        "line": 169,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 170,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# QUESTION: Is it:\n"
                    },
                    {
                        "line": 171,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#           must not set value for following \"transport parameters\"  \n"
                    },
                    {
                        "line": 172,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    #           Thus, the new TP will always be >=  old TP\n"
                    },
                    {
                        "line": 173,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    #           This would be because new connection data is also counter with \n"
                    },
                    {
                        "line": 174,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    #           initial 0rtt data\n"
                    },
                    {
                        "line": 175,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#\n"
                    },
                    {
                        "line": 176,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#           or \"parameters\" in internal state of programs\n"
                    },
                    {
                        "line": 177,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    #           Thus, new TP can be <,> or =. In this case this simply mean it \n"
                    },
                    {
                        "line": 178,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    #           remembers the values and apply them on 0rtt data\n"
                    },
                    {
                        "line": 179,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    #           This would mean that 0rtt data size is not counted in max data\n"
                    },
                    {
                        "line": 180,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 181,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    *  active_connection_id_limit\n"
                    },
                    {
                        "line": 182,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    *  initial_max_data\n"
                    },
                    {
                        "line": 183,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    *  initial_max_stream_data_bidi_local\n"
                    },
                    {
                        "line": 184,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    *  initial_max_stream_data_bidi_remote\n"
                    },
                    {
                        "line": 185,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    *  initial_max_stream_data_uni\n"
                    },
                    {
                        "line": 186,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    *  initial_max_streams_bidi\n"
                    },
                    {
                        "line": 187,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    *  initial_max_streams_uni\n"
                    },
                    {
                        "line": 188,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    A server MUST either reject 0-RTT data (how to know ??) or abort a handshake if the\n"
                    },
                    {
                        "line": 189,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    implied values for transport parameters cannot be supported.  [7]\n"
                    },
                    {
                        "line": 190,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 191,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    When sending frames in 0-RTT packets, a client MUST only use\n"
                    },
                    {
                        "line": 192,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    remembered transport parameters; importantly, it MUST NOT use updated\n"
                    },
                    {
                        "line": 193,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    values that it learns from the server's updated transport parameters\n"
                    },
                    {
                        "line": 194,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    or from frames received in 1-RTT packets.  ***Updated values of\n"
                    },
                    {
                        "line": 195,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    transport parameters from the handshake apply only to 1-RTT packets.***\n"
                    },
                    {
                        "line": 196,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    For instance, flow control limits from remembered transport\n"
                    },
                    {
                        "line": 197,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    parameters apply to all 0-RTT packets even if those values are\n"
                    },
                    {
                        "line": 198,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    increased by the handshake or by frames sent in 1-RTT packets.  A\n"
                    },
                    {
                        "line": 199,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    server **MAY** treat use of updated transport parameters in 0-RTT as a\n"
                    },
                    {
                        "line": 200,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    connection error of type PROTOCOL_VIOLATION.\n"
                    },
                    {
                        "line": 201,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 202,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# Address validation is especially important with 0-RTT because a server\n"
                    },
                    {
                        "line": 203,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    potentially sends a significant amount of data to a client in\n"
                    },
                    {
                        "line": 204,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    response to 0-RTT data.\n"
                    },
                    {
                        "line": 205,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    The server uses the NEW_TOKEN frame Section 19.7 to provide the\n"
                    },
                    {
                        "line": 206,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    client with an address validation token that can be used to validate\n"
                    },
                    {
                        "line": 207,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    future connections.\n"
                    },
                    {
                        "line": 208,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 209,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    Packets that a client sends with 0-RTT packet protection MUST be\n"
                    },
                    {
                        "line": 210,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    acknowledged by the server in packets protected by 1-RTT keys.  This\n"
                    },
                    {
                        "line": 211,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    can mean that the client is unable to use these acknowledgments if\n"
                    },
                    {
                        "line": 212,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    the server cryptographic handshake messages are delayed or lost.\n"
                    },
                    {
                        "line": 213,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    Note that the same limitation applies to other data sent by the\n"
                    },
                    {
                        "line": 214,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    server protected by the 1-RTT keys. [10]\n"
                    },
                    {
                        "line": 215,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    A client only receives acknowledgments for its 0-RTT packets once the\n"
                    },
                    {
                        "line": 216,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    handshake is complete.  Consequently, a server might expect 0-RTT\n"
                    },
                    {
                        "line": 217,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    packets to start with a packet number of 0.  Therefore, in\n"
                    },
                    {
                        "line": 218,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    determining the length of the packet number encoding for 0-RTT\n"
                    },
                    {
                        "line": 219,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    packets, a client MUST assume that all packets up to the current\n"
                    },
                    {
                        "line": 220,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    packet number are in flight, starting from a packet number of 0.\n"
                    },
                    {
                        "line": 221,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    Thus, 0-RTT packets could need to use a longer packet number\n"
                    },
                    {
                        "line": 222,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    encoding.\n"
                    },
                    {
                        "line": 223,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 224,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    A client MUST NOT send 0-RTT packets once it starts processing 1-RTT\n"
                    },
                    {
                        "line": 225,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    packets from the server.  This means that 0-RTT packets cannot\n"
                    },
                    {
                        "line": 226,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    contain any response to frames from 1-RTT packets.  For instance, a\n"
                    },
                    {
                        "line": 227,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    client cannot send an ACK frame in a 0-RTT packet, because that can\n"
                    },
                    {
                        "line": 228,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    only acknowledge a 1-RTT packet.  An acknowledgment for a 1-RTT\n"
                    },
                    {
                        "line": 229,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    packet MUST be carried in a 1-RTT packet.\n"
                    },
                    {
                        "line": 230,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#\n"
                    },
                    {
                        "line": 231,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# ### Notes\n"
                    },
                    {
                        "line": 232,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#\n"
                    },
                    {
                        "line": 233,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# - In the low-level packet encoding, the packet number may be encoded using\n"
                    },
                    {
                        "line": 234,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#   a small number of bytes, in a way that loses information.\n"
                    },
                    {
                        "line": 235,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#   At this layer of the protocol, however, the packets contain the original full\n"
                    },
                    {
                        "line": 236,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#   packet number.\n"
                    },
                    {
                        "line": 237,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#\n"
                    },
                    {
                        "line": 238,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# - On seeing a packet form a new address with the highest packect\n"
                    },
                    {
                        "line": 239,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#   number see thus far, the server detects migration of the\n"
                    },
                    {
                        "line": 240,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#   client. It begins sending packets to this address and initiates\n"
                    },
                    {
                        "line": 241,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#   path validation for this address. Until path validation succeeds,\n"
                    },
                    {
                        "line": 242,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#   the server limits data sent to the new address. Currently we\n"
                    },
                    {
                        "line": 243,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#   cannot specify this limit because we don't know the byte size of\n"
                    },
                    {
                        "line": 244,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#   packets or the timings of packets. \n"
                    },
                    {
                        "line": 245,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 246,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# 0-RTT allows application data to be sent by a\n"
                    },
                    {
                        "line": 247,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    client before receiving any response from the server.  However, 0-RTT\n"
                    },
                    {
                        "line": 248,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    lacks certain key security guarantees.  In particular, there is no\n"
                    },
                    {
                        "line": 249,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    protection against replay attacks in 0-RTT; see [QUIC-TLS].\n"
                    },
                    {
                        "line": 250,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 251,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# A client that sends CONNECTION_CLOSE in a 0-RTT packet cannot be\n"
                    },
                    {
                        "line": 252,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#       assured of the server has accepted 0-RTT and so sending a\n"
                    },
                    {
                        "line": 253,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#       CONNECTION_CLOSE frame in an Initial packet makes it more likely\n"
                    },
                    {
                        "line": 254,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#       that the server can receive the close signal, even if the\n"
                    },
                    {
                        "line": 255,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#       application error code might not be received.\n"
                    },
                    {
                        "line": 256,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 257,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# With VN:\n"
                    },
                    {
                        "line": 258,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    A server MAY limit the number of Version Negotiation packets it\n"
                    },
                    {
                        "line": 259,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    sends.  For instance, a server that is able to recognize packets as\n"
                    },
                    {
                        "line": 260,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    0-RTT might choose not to send Version Negotiation packets in\n"
                    },
                    {
                        "line": 261,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    response to 0-RTT packets with the expectation that it will\n"
                    },
                    {
                        "line": 262,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    eventually receive an Initial packet.\n"
                    },
                    {
                        "line": 263,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 264,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "# Liveness\n"
                    },
                    {
                        "line": 265,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 266,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    If the packet is a 0-RTT packet, the server MAY buffer a limited\n"
                    },
                    {
                        "line": 267,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    number of these packets in anticipation of a late-arriving Initial\n"
                    },
                    {
                        "line": 268,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    packet.  Clients are not able to send Handshake packets prior to\n"
                    },
                    {
                        "line": 269,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    receiving a server response, so servers SHOULD ignore any such\n"
                    },
                    {
                        "line": 270,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#    packets.\n"
                    },
                    {
                        "line": 271,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 272,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 273,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "function last_zrtt_pkt : stream_data\n"
                    },
                    {
                        "line": 274,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "relation zrtt_pkt_set\n"
                    },
                    {
                        "line": 275,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "relation zrtt_pkt_process\n"
                    },
                    {
                        "line": 276,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 277,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "after init {\n"
                    },
                    {
                        "line": 278,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    zrtt_pkt_set := false;\n"
                    },
                    {
                        "line": 279,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    zrtt_pkt_process := false;\n"
                    },
                    {
                        "line": 280,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    last_zrtt_pkt := stream_data.empty;\n"
                    },
                    {
                        "line": 281,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "}\n"
                    },
                    {
                        "line": 282,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 283,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "around packet_event_0rtt(src:ip.endpoint,dst:ip.endpoint,pkt:quic_packet_0rtt) {    \n"
                    },
                    {
                        "line": 284,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # Extract the source and destination cid's and packet number from the packet.\n"
                    },
                    {
                        "line": 285,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    \n"
                    },
                    {
                        "line": 286,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    var dcid := pkt.dst_cid;\n"
                    },
                    {
                        "line": 287,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    var scid := pkt.src_cid;\n"
                    },
                    {
                        "line": 288,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    if cid_mapped(dcid) {\n"
                    },
                    {
                        "line": 289,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\t    dcid := cid_to_aid(dcid);\n"
                    },
                    {
                        "line": 290,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 291,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 292,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    if src = client_alt | dst = client_alt {\n"
                    },
                    {
                        "line": 293,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\t    migration_done := true;\n"
                    },
                    {
                        "line": 294,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\t    #call net.close(endpoint_id.client,sock);\t# destroy connection ?\n"
                    },
                    {
                        "line": 295,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 296,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 297,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # =================================================\n"
                    },
                    {
                        "line": 298,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 299,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    #require pkt.ptype = queued_level(scid);\n"
                    },
                    {
                        "line": 300,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    #require queued_level(scid) = quic_packet_type.zero_rtt;\n"
                    },
                    {
                        "line": 301,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    require pkt.ptype = quic_packet_type.zero_rtt;\n"
                    },
                    {
                        "line": 302,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    #established_1rtt_keys(scid) := true;\n"
                    },
                    {
                        "line": 303,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 304,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # 0-RTT and 1-RTT belongs to application PN space\n"
                    },
                    {
                        "line": 305,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # TODO make more elegant\n"
                    },
                    {
                        "line": 306,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    var pn_app_space := quic_packet_type.one_rtt; \n"
                    },
                    {
                        "line": 307,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    require ~sent_pkt(scid,pn_app_space,pkt.seq_num);  # [4]\n"
                    },
                    {
                        "line": 308,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    sent_pkt(scid,pn_app_space,pkt.seq_num) := true;   # [1]\n"
                    },
                    {
                        "line": 309,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 310,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 311,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    require scid = initial_scid & dcid = initial_dcid; # [2]\n"
                    },
                    {
                        "line": 312,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 313,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    #require pkt.ptype = quic_packet_type.one_rtt;\n"
                    },
                    {
                        "line": 314,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    #queued_level_rtt(scid) := quic_packet_type.zero_rtt;\n"
                    },
                    {
                        "line": 315,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 316,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    require num_queued_frames_rtt(scid) > 0;  # [7]\n"
                    },
                    {
                        "line": 317,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 318,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # The payload must exactly match the queued frames.\n"
                    },
                    {
                        "line": 319,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 320,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    require pkt.payload = queued_frames_rtt(scid);\n"
                    },
                    {
                        "line": 321,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 322,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "  \n"
                    },
                    {
                        "line": 323,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # Similarly, an endpoint MUST NOT reuse a connection ID when sending to\n"
                    },
                    {
                        "line": 324,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # more than one destination address.  \n"
                    },
                    {
                        "line": 325,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    \n"
                    },
                    {
                        "line": 326,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 327,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # require retry_source_connection_id.is_set(trans_params(dcid));\n"
                    },
                    {
                        "line": 328,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    \n"
                    },
                    {
                        "line": 329,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # The destination cid must represent an existing connection,\n"
                    },
                    {
                        "line": 330,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # except in the case of a client initial packet, when the\n"
                    },
                    {
                        "line": 331,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # destination cid may be the nonce cid chosen by the client for\n"
                    },
                    {
                        "line": 332,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # the given source cid.\n"
                    },
                    {
                        "line": 333,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 334,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    #require pkt.ptype = quic_packet_type.retry & is_client(scid) & dcid = nonce_cid(scid);\n"
                    },
                    {
                        "line": 335,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 336,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    #call show_pstats(scid,pkt.ptype,pkt.seq_num);\n"
                    },
                    {
                        "line": 337,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    #call show_pstats(scid,queued_level(scid),pkt.seq_num);\n"
                    },
                    {
                        "line": 338,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 339,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # The packet type must match the encryption level of the queued\n"
                    },
                    {
                        "line": 340,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # frames at the source. \n"
                    },
                    {
                        "line": 341,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 342,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 343,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    #require pkt.ptype = quic_packet_type.zero_rtt | pkt.ptype = quic_packet_type.one_rtt; # tODO\n"
                    },
                    {
                        "line": 344,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    require connected(dcid) -> connected_to(dcid) = scid;\n"
                    },
                    {
                        "line": 345,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    require conn_seen(scid) & pkt.long & is_client(scid) -> conn_requested(src,dst,scid);\n"
                    },
                    {
                        "line": 346,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 347,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # Packet must be sent to the endpoint from which the highest numbered\n"
                    },
                    {
                        "line": 348,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # packet has been received. ~queued_challenge(dcid) & \n"
                    },
                    {
                        "line": 349,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # call show_probing(dcid ,hi_non_probing(dcid));\n"
                    },
                    {
                        "line": 350,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # require  conn_seen(dcid) -> hi_non_probing_endpoint(dcid,dst);  # [10]\n"
                    },
                    {
                        "line": 351,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 352,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 353,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # QUESTION: THis sentence is from draft-18 section 13.1: \"An\n"
                    },
                    {
                        "line": 354,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    #   endpoint MUST NOT send a packet containing only an ACK frame\n"
                    },
                    {
                        "line": 355,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    #   in response to a packet containing only ACK or PADDING frames,\n"
                    },
                    {
                        "line": 356,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    #   even if there are packet gaps which precede the received\n"
                    },
                    {
                        "line": 357,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    #   packet.\" Do we interpret this to mean that an ack-only packet\n"
                    },
                    {
                        "line": 358,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    #   cannot ack *only* ack-only packets?  Or that an ack-only\n"
                    },
                    {
                        "line": 359,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    #   packet cannot ack *any* ack-only packets?\n"
                    },
                    {
                        "line": 360,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 361,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    ...\n"
                    },
                    {
                        "line": 362,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 363,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # Here, we have the updates to the packet protocol state.\n"
                    },
                    {
                        "line": 364,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 365,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # TEMPORARY: The following are repeated because currently locals defined in\n"
                    },
                    {
                        "line": 366,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # the \"before\" section cannot be accessed in the \"after\" section.\n"
                    },
                    {
                        "line": 367,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 368,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    var dcid := pkt.dst_cid;\n"
                    },
                    {
                        "line": 369,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    var scid := pkt.src_cid if pkt.long else connected_to(dcid);\n"
                    },
                    {
                        "line": 370,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 371,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    if cid_mapped(dcid) {\n"
                    },
                    {
                        "line": 372,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\t    dcid := cid_to_aid(dcid);\n"
                    },
                    {
                        "line": 373,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 374,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 375,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    if queued_ack_eliciting(scid) {\n"
                    },
                    {
                        "line": 376,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "       ack_credit(dcid) := ack_credit(dcid) + 1;\n"
                    },
                    {
                        "line": 377,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 378,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    if ~queued_non_ack(scid) {\n"
                    },
                    {
                        "line": 379,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "       ack_credit(scid) := ack_credit(scid) - 1;\n"
                    },
                    {
                        "line": 380,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 381,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 382,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 383,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # Record the packet number as latest seen\n"
                    },
                    {
                        "line": 384,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 385,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    last_pkt_num(scid,pkt.ptype) := pkt.seq_num;\n"
                    },
                    {
                        "line": 386,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    # TODO: the following should not be here\n"
                    },
                    {
                        "line": 387,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 388,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    if pkt.ptype = quic_packet_type.zero_rtt & ~_generating {\n"
                    },
                    {
                        "line": 389,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "        connected(the_cid) := true;\n"
                    },
                    {
                        "line": 390,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "        connected(scid) := true;\n"
                    },
                    {
                        "line": 391,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "        connected_to(the_cid) := scid;\n"
                    },
                    {
                        "line": 392,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "        connected_to(scid) := the_cid;\n"
                    },
                    {
                        "line": 393,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 394,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 395,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    zero_rtt_sent := true;\n"
                    },
                    {
                        "line": 396,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 397,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    queued_frames_rtt(scid) := frame.arr.empty;\n"
                    },
                    {
                        "line": 398,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    queued_non_probing(scid) := false;\n"
                    },
                    {
                        "line": 399,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    queued_non_ack(scid) := false;\n"
                    },
                    {
                        "line": 400,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    queued_close(scid) := false;\n"
                    },
                    {
                        "line": 401,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    num_queued_frames_rtt(scid) := 0;\n"
                    },
                    {
                        "line": 402,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#Hamid\n"
                    },
                    {
                        "line": 403,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "    queued_ack_eliciting(scid) := false;\n"
                    },
                    {
                        "line": 404,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "#Hamid\n"
                    },
                    {
                        "line": 405,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "}\n"
                    },
                    {
                        "line": 406,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 407,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 408,
                        "file": "quic_packet_0rtt.ivy",
                        "instruction": "\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [
                        {
                            "line": 89,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "    if _generating {  # & ~conn_closed(pkt.the_cid)\n"
                        },
                        {
                            "line": 90,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        var spkt := pkt_serdes_0rtt.to_bytes(pkt);\n"
                        },
                        {
                            "line": 91,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        var pkts := prot.arr.empty;\n"
                        },
                        {
                            "line": 92,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        var tls_id := src_tls_id(src);\n"
                        },
                        {
                            "line": 93,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        var rnum := reference_pkt_num(spkt,false);\n"
                        },
                        {
                            "line": 94,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        var ppkt := prot.encrypt_rtt(tls_id,rnum,spkt);\n"
                        },
                        {
                            "line": 95,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        pkts := pkts.append(ppkt);\n"
                        },
                        {
                            "line": 96,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        total_data_sent := total_data_sent + ppkt.size;\n"
                        },
                        {
                            "line": 97,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        call net.send(endpoint_to_pid(src),endpoint_to_socket(src),dst,pkts);\n"
                        },
                        {
                            "line": 98,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        zero_rtt_sent := true;\n"
                        },
                        {
                            "line": 99,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "    }\n"
                        }
                    ],
                    "around": [
                        {
                            "line": 284,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # Extract the source and destination cid's and packet number from the packet.\n"
                        },
                        {
                            "line": 285,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 286,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    var dcid := pkt.dst_cid;\n"
                        },
                        {
                            "line": 287,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    var scid := pkt.src_cid;\n"
                        },
                        {
                            "line": 288,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    if cid_mapped(dcid) {\n"
                        },
                        {
                            "line": 289,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\t    dcid := cid_to_aid(dcid);\n"
                        },
                        {
                            "line": 290,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 291,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 292,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    if src = client_alt | dst = client_alt {\n"
                        },
                        {
                            "line": 293,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\t    migration_done := true;\n"
                        },
                        {
                            "line": 294,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\t    #call net.close(endpoint_id.client,sock);\t# destroy connection ?\n"
                        },
                        {
                            "line": 295,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 296,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 297,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # =================================================\n"
                        },
                        {
                            "line": 298,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 299,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    #require pkt.ptype = queued_level(scid);\n"
                        },
                        {
                            "line": 300,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    #require queued_level(scid) = quic_packet_type.zero_rtt;\n"
                        },
                        {
                            "line": 301,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    require pkt.ptype = quic_packet_type.zero_rtt;\n"
                        },
                        {
                            "line": 302,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    #established_1rtt_keys(scid) := true;\n"
                        },
                        {
                            "line": 303,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 304,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # 0-RTT and 1-RTT belongs to application PN space\n"
                        },
                        {
                            "line": 305,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # TODO make more elegant\n"
                        },
                        {
                            "line": 306,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    var pn_app_space := quic_packet_type.one_rtt; \n"
                        },
                        {
                            "line": 307,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    require ~sent_pkt(scid,pn_app_space,pkt.seq_num);  # [4]\n"
                        },
                        {
                            "line": 308,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    sent_pkt(scid,pn_app_space,pkt.seq_num) := true;   # [1]\n"
                        },
                        {
                            "line": 309,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 310,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 311,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    require scid = initial_scid & dcid = initial_dcid; # [2]\n"
                        },
                        {
                            "line": 312,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 313,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    #require pkt.ptype = quic_packet_type.one_rtt;\n"
                        },
                        {
                            "line": 314,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    #queued_level_rtt(scid) := quic_packet_type.zero_rtt;\n"
                        },
                        {
                            "line": 315,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 316,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    require num_queued_frames_rtt(scid) > 0;  # [7]\n"
                        },
                        {
                            "line": 317,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 318,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # The payload must exactly match the queued frames.\n"
                        },
                        {
                            "line": 319,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 320,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    require pkt.payload = queued_frames_rtt(scid);\n"
                        },
                        {
                            "line": 321,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 322,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "  \n"
                        },
                        {
                            "line": 323,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # Similarly, an endpoint MUST NOT reuse a connection ID when sending to\n"
                        },
                        {
                            "line": 324,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # more than one destination address.  \n"
                        },
                        {
                            "line": 325,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 326,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 327,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # require retry_source_connection_id.is_set(trans_params(dcid));\n"
                        },
                        {
                            "line": 328,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 329,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # The destination cid must represent an existing connection,\n"
                        },
                        {
                            "line": 330,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # except in the case of a client initial packet, when the\n"
                        },
                        {
                            "line": 331,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # destination cid may be the nonce cid chosen by the client for\n"
                        },
                        {
                            "line": 332,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # the given source cid.\n"
                        },
                        {
                            "line": 333,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 334,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    #require pkt.ptype = quic_packet_type.retry & is_client(scid) & dcid = nonce_cid(scid);\n"
                        },
                        {
                            "line": 335,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 336,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    #call show_pstats(scid,pkt.ptype,pkt.seq_num);\n"
                        },
                        {
                            "line": 337,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    #call show_pstats(scid,queued_level(scid),pkt.seq_num);\n"
                        },
                        {
                            "line": 338,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 339,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # The packet type must match the encryption level of the queued\n"
                        },
                        {
                            "line": 340,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # frames at the source. \n"
                        },
                        {
                            "line": 341,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 342,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 343,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    #require pkt.ptype = quic_packet_type.zero_rtt | pkt.ptype = quic_packet_type.one_rtt; # tODO\n"
                        },
                        {
                            "line": 344,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    require connected(dcid) -> connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 345,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    require conn_seen(scid) & pkt.long & is_client(scid) -> conn_requested(src,dst,scid);\n"
                        },
                        {
                            "line": 346,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 347,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # Packet must be sent to the endpoint from which the highest numbered\n"
                        },
                        {
                            "line": 348,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # packet has been received. ~queued_challenge(dcid) & \n"
                        },
                        {
                            "line": 349,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # call show_probing(dcid ,hi_non_probing(dcid));\n"
                        },
                        {
                            "line": 350,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # require  conn_seen(dcid) -> hi_non_probing_endpoint(dcid,dst);  # [10]\n"
                        },
                        {
                            "line": 351,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 352,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 353,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # QUESTION: THis sentence is from draft-18 section 13.1: \"An\n"
                        },
                        {
                            "line": 354,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    #   endpoint MUST NOT send a packet containing only an ACK frame\n"
                        },
                        {
                            "line": 355,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    #   in response to a packet containing only ACK or PADDING frames,\n"
                        },
                        {
                            "line": 356,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    #   even if there are packet gaps which precede the received\n"
                        },
                        {
                            "line": 357,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    #   packet.\" Do we interpret this to mean that an ack-only packet\n"
                        },
                        {
                            "line": 358,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    #   cannot ack *only* ack-only packets?  Or that an ack-only\n"
                        },
                        {
                            "line": 359,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    #   packet cannot ack *any* ack-only packets?\n"
                        },
                        {
                            "line": 360,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 361,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    ...\n"
                        },
                        {
                            "line": 362,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 363,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # Here, we have the updates to the packet protocol state.\n"
                        },
                        {
                            "line": 364,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 365,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # TEMPORARY: The following are repeated because currently locals defined in\n"
                        },
                        {
                            "line": 366,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # the \"before\" section cannot be accessed in the \"after\" section.\n"
                        },
                        {
                            "line": 367,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 368,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    var dcid := pkt.dst_cid;\n"
                        },
                        {
                            "line": 369,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    var scid := pkt.src_cid if pkt.long else connected_to(dcid);\n"
                        },
                        {
                            "line": 370,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 371,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    if cid_mapped(dcid) {\n"
                        },
                        {
                            "line": 372,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\t    dcid := cid_to_aid(dcid);\n"
                        },
                        {
                            "line": 373,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 374,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 375,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    if queued_ack_eliciting(scid) {\n"
                        },
                        {
                            "line": 376,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "       ack_credit(dcid) := ack_credit(dcid) + 1;\n"
                        },
                        {
                            "line": 377,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 378,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    if ~queued_non_ack(scid) {\n"
                        },
                        {
                            "line": 379,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "       ack_credit(scid) := ack_credit(scid) - 1;\n"
                        },
                        {
                            "line": 380,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 381,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 382,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 383,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # Record the packet number as latest seen\n"
                        },
                        {
                            "line": 384,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 385,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    last_pkt_num(scid,pkt.ptype) := pkt.seq_num;\n"
                        },
                        {
                            "line": 386,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    # TODO: the following should not be here\n"
                        },
                        {
                            "line": 387,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 388,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    if pkt.ptype = quic_packet_type.zero_rtt & ~_generating {\n"
                        },
                        {
                            "line": 389,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "        connected(the_cid) := true;\n"
                        },
                        {
                            "line": 390,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "        connected(scid) := true;\n"
                        },
                        {
                            "line": 391,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "        connected_to(the_cid) := scid;\n"
                        },
                        {
                            "line": 392,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "        connected_to(scid) := the_cid;\n"
                        },
                        {
                            "line": 393,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 394,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 395,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    zero_rtt_sent := true;\n"
                        },
                        {
                            "line": 396,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 397,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    queued_frames_rtt(scid) := frame.arr.empty;\n"
                        },
                        {
                            "line": 398,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    queued_non_probing(scid) := false;\n"
                        },
                        {
                            "line": 399,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    queued_non_ack(scid) := false;\n"
                        },
                        {
                            "line": 400,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    queued_close(scid) := false;\n"
                        },
                        {
                            "line": 401,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    num_queued_frames_rtt(scid) := 0;\n"
                        },
                        {
                            "line": 402,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "#Hamid\n"
                        },
                        {
                            "line": 403,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "    queued_ack_eliciting(scid) := false;\n"
                        },
                        {
                            "line": 404,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "#Hamid\n"
                        }
                    ]
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet_0rtt"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "net.send",
                        "component": "ivy_quic_shim_client.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [
                        {
                            "caller_func": "tls_client_0rtt_response",
                            "component": "quic_security.ivy"
                        }
                    ],
                    "assertions": [
                        {
                            "line": 302,
                            "file": "quic_packet_0rtt.ivy",
                            "assertion": "require pkt.ptype = quic_packet_type.zero_rtt;\n"
                        },
                        {
                            "line": 308,
                            "file": "quic_packet_0rtt.ivy",
                            "assertion": "require ~sent_pkt(scid,pn_app_space,pkt.seq_num);  # [4]\n"
                        },
                        {
                            "line": 312,
                            "file": "quic_packet_0rtt.ivy",
                            "assertion": "require scid = initial_scid & dcid = initial_dcid; # [2]\n"
                        },
                        {
                            "line": 317,
                            "file": "quic_packet_0rtt.ivy",
                            "assertion": "require num_queued_frames_rtt(scid) > 0;  # [7]\n"
                        },
                        {
                            "line": 321,
                            "file": "quic_packet_0rtt.ivy",
                            "assertion": "require pkt.payload = queued_frames_rtt(scid);\n"
                        },
                        {
                            "line": 345,
                            "file": "quic_packet_0rtt.ivy",
                            "assertion": "require connected(dcid) -> connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 346,
                            "file": "quic_packet_0rtt.ivy",
                            "assertion": "require conn_seen(scid) & pkt.long & is_client(scid) -> conn_requested(src,dst,scid);\n"
                        },
                        {
                            "line": 1237,
                            "file": "quic_frame.ivy",
                            "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 1238,
                            "file": "quic_frame.ivy",
                            "assertion": "require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);  # [3]\n"
                        },
                        {
                            "line": 1239,
                            "file": "quic_frame.ivy",
                            "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                        },
                        {
                            "line": 1240,
                            "file": "quic_frame.ivy",
                            "assertion": "require connected(scid) & connected_to(scid) = dcid;\n"
                        },
                        {
                            "line": 1244,
                            "file": "quic_frame.ivy",
                            "assertion": "require ~conn_closed(scid);  # [2]\n"
                        },
                        {
                            "line": 314,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require scid = the_cid;\n"
                        },
                        {
                            "line": 1569,
                            "file": "quic_frame.ivy",
                            "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 1570,
                            "file": "quic_frame.ivy",
                            "assertion": "require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                        },
                        {
                            "line": 1571,
                            "file": "quic_frame.ivy",
                            "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                        },
                        {
                            "line": 826,
                            "file": "quic_frame.ivy",
                            "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 828,
                            "file": "quic_frame.ivy",
                            "assertion": "require ~(e = quic_packet_type.initial) & ~(e = quic_packet_type.handshake); #& ~(e = quic_packet_type.handshake)\n"
                        },
                        {
                            "line": 831,
                            "file": "quic_frame.ivy",
                            "assertion": "require e = quic_packet_type.handshake -> established_handshake_keys(scid);  # [4]\n"
                        },
                        {
                            "line": 832,
                            "file": "quic_frame.ivy",
                            "assertion": "require e = quic_packet_type.one_rtt -> established_1rtt_keys(scid);  # [4]\n"
                        },
                        {
                            "line": 837,
                            "file": "quic_frame.ivy",
                            "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                        },
                        {
                            "line": 843,
                            "file": "quic_frame.ivy",
                            "assertion": "require f.ack_ranges.end > 0;\n"
                        },
                        {
                            "line": 847,
                            "file": "quic_frame.ivy",
                            "assertion": "require idx > 0 -> ack_range.gap < last - 1;\n"
                        },
                        {
                            "line": 849,
                            "file": "quic_frame.ivy",
                            "assertion": "require ack_range.ranges <= upper;\n"
                        },
                        {
                            "line": 853,
                            "file": "quic_frame.ivy",
                            "assertion": "require sent_pkt(dcid,e,jdx);  # [1]\n"
                        },
                        {
                            "line": 867,
                            "file": "quic_frame.ivy",
                            "assertion": "require some_new_ack;\n"
                        },
                        {
                            "line": 939,
                            "file": "quic_frame.ivy",
                            "assertion": "require tls_handshake_finished;\n"
                        },
                        {
                            "line": 940,
                            "file": "quic_frame.ivy",
                            "assertion": "require (connected(dcid) & connected_to(dcid) = scid); # | (e = quic_packet_type.zero_rtt & established_0rtt_keys(scid)); #e = quic_packet_type.zero_rtt & \n"
                        },
                        {
                            "line": 941,
                            "file": "quic_frame.ivy",
                            "assertion": "require (e = quic_packet_type.one_rtt & established_1rtt_keys(scid)); # | (e = quic_packet_type.zero_rtt & established_0rtt_keys(scid)); # | e = quic_packet_type.zero_rtt  | e = quic_packet_type.zero_rtt & established_0rtt_keys(scid)  \n"
                        },
                        {
                            "line": 944,
                            "file": "quic_frame.ivy",
                            "assertion": "require (e = quic_packet_type.one_rtt & established_1rtt_keys(scid)) | (e = quic_packet_type.zero_rtt & ~established_1rtt_keys(scid));\n"
                        },
                        {
                            "line": 954,
                            "file": "quic_frame.ivy",
                            "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                        },
                        {
                            "line": 962,
                            "file": "quic_frame.ivy",
                            "assertion": "require ~conn_closed(scid);  # [8]\n"
                        },
                        {
                            "line": 966,
                            "file": "quic_frame.ivy",
                            "assertion": "require ((offset) + (f.length)) <= stream_app_data_end(dcid,f.id);\n"
                        },
                        {
                            "line": 969,
                            "file": "quic_frame.ivy",
                            "assertion": "require f.data = stream_app_data(dcid,f.id).segment(offset,offset+f.length); # TODO\n"
                        },
                        {
                            "line": 970,
                            "file": "quic_frame.ivy",
                            "assertion": "require f.fin <-> (stream_app_data_finished(dcid,f.id) & offset+f.length = stream_app_data_end(dcid,f.id));\n"
                        },
                        {
                            "line": 979,
                            "file": "quic_frame.ivy",
                            "assertion": "require conn_seen(scid);  # [9]\n"
                        },
                        {
                            "line": 991,
                            "file": "quic_frame.ivy",
                            "assertion": "require stream_reset(dcid,f.id) ->\n"
                        },
                        {
                            "line": 996,
                            "file": "quic_frame.ivy",
                            "assertion": "require stream_id_allowed(dcid,f.id,e);  # [6]\n"
                        },
                        {
                            "line": 999,
                            "file": "quic_frame.ivy",
                            "assertion": "require  f.id = 4; #  f.id = 8 |f.id = 4 |\n"
                        },
                        {
                            "line": 245,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require scid = the_cid;\n"
                        },
                        {
                            "line": 247,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require connected(the_cid) & dcid = connected_to(the_cid);\n"
                        },
                        {
                            "line": 249,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require f.len & f.off; \n"
                        },
                        {
                            "line": 250,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require f.length > 0;\n"
                        },
                        {
                            "line": 251,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require f.offset = stream_length(dcid,f.id);\n"
                        },
                        {
                            "line": 252,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require f.length = (stream_app_data_end(dcid,f.id)) - f.offset;\n"
                        },
                        {
                            "line": 39,
                            "file": "quic_ack_frequency_extension.ivy",
                            "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 40,
                            "file": "quic_ack_frequency_extension.ivy",
                            "assertion": "require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                        },
                        {
                            "line": 41,
                            "file": "quic_ack_frequency_extension.ivy",
                            "assertion": "require (num_queued_frames(scid) > 0) -> e = queued_level(scid);\n"
                        },
                        {
                            "line": 42,
                            "file": "quic_ack_frequency_extension.ivy",
                            "assertion": "require e ~= quic_packet_type.zero_rtt;\n"
                        },
                        {
                            "line": 45,
                            "file": "quic_ack_frequency_extension.ivy",
                            "assertion": "require  min_ack_delay.is_set(tp) | max_ack_delay.is_set(tp2);\n"
                        },
                        {
                            "line": 48,
                            "file": "quic_ack_frequency_extension.ivy",
                            "assertion": "require f.ack_eliciting_threshold >= 0;\n"
                        },
                        {
                            "line": 49,
                            "file": "quic_ack_frequency_extension.ivy",
                            "assertion": "require f.request_max_ack_delay >= min; \n"
                        },
                        {
                            "line": 51,
                            "file": "quic_ack_frequency_extension.ivy",
                            "assertion": "require f.reordering_threshold >= 0;\n"
                        },
                        {
                            "line": 53,
                            "file": "quic_ack_frequency_extension.ivy",
                            "assertion": "require f.seq_num = 0;\n"
                        },
                        {
                            "line": 58,
                            "file": "quic_ack_frequency_extension.ivy",
                            "assertion": "require f.seq_num > last_ack_freq_seq(dcid);\n"
                        },
                        {
                            "line": 1669,
                            "file": "quic_frame.ivy",
                            "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 1670,
                            "file": "quic_frame.ivy",
                            "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                        },
                        {
                            "line": 1672,
                            "file": "quic_frame.ivy",
                            "assertion": "require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);            \n"
                        },
                        {
                            "line": 1675,
                            "file": "quic_frame.ivy",
                            "assertion": "require ~conn_closed(scid); \n"
                        },
                        {
                            "line": 134,
                            "file": "quic_endpoint.ivy",
                            "assertion": "require last_datagram_received_size + 8 > 1200; # 8 is for UDP datagram header\n"
                        },
                        {
                            "line": 1632,
                            "file": "quic_frame.ivy",
                            "assertion": "require e = quic_packet_type.one_rtt -> established_1rtt_keys(scid);\n"
                        },
                        {
                            "line": 1633,
                            "file": "quic_frame.ivy",
                            "assertion": "require e = quic_packet_type.handshake -> established_handshake_keys(scid);\n"
                        },
                        {
                            "line": 1634,
                            "file": "quic_frame.ivy",
                            "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                        },
                        {
                            "line": 1636,
                            "file": "quic_frame.ivy",
                            "assertion": "require ~(e = quic_packet_type.version_negociation) & ~(e = quic_packet_type.retry) & ~(e = quic_packet_type.zero_rtt);\n"
                        },
                        {
                            "line": 1637,
                            "file": "quic_frame.ivy",
                            "assertion": "require need_sent_ack_eliciting_application_packet | need_sent_ack_eliciting_handshake_packet | need_sent_ack_eliciting_initial_packet;\n"
                        }
                    ]
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "quic_packet_0rtt_name": "quic_packet_0rtt",
            "quic_packet_0rtt_object": [
                {
                    "name": "ptype",
                    "type": "quic_packet_type,"
                },
                {
                    "name": "pversion",
                    "type": "version,"
                },
                {
                    "name": "dst_cid",
                    "type": "cid,"
                },
                {
                    "name": "src_cid",
                    "type": "cid,"
                },
                {
                    "name": "seq_num",
                    "type": "pkt_num,"
                },
                {
                    "name": "payload",
                    "type": "frame.arr"
                }
            ],
            "quic_packet_0rtt_module": null,
            "actions": [
                {
                    "line": 68,
                    "action_name": "quic_packet_0rtt.long",
                    "implementation": [
                        {
                            "line": 67,
                            "file": "quic_packet_0rtt.ivy",
                            "instruction": "        res := pkt.ptype ~= quic_packet_type.one_rtt;\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "res",
                        "type": "bool"
                    },
                    "action_parameters": [
                        {
                            "name": "pkt",
                            "type": "this"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "quic_packet_0rtt.long",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "functions": [
                {
                    "name": "last_zrtt_pkt : stream_data\n",
                    "comment": "",
                    "line": 274,
                    "file": "quic_packet_0rtt.ivy"
                }
            ],
            "relations": [
                {
                    "name": "zrtt_pkt_set\n",
                    "comment": "",
                    "line": 275,
                    "file": "quic_packet_0rtt.ivy"
                },
                {
                    "name": "zrtt_pkt_process\n",
                    "comment": "",
                    "line": 276,
                    "file": "quic_packet_0rtt.ivy"
                }
            ]
        }
    ],
    "quic_packet_retry.ivy": [
        {
            "actions": {
                "line": 90,
                "action_name": "packet_event_retry",
                "implementation": [
                    {
                        "line": 90,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 91,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "# Packet protocol state\n"
                    },
                    {
                        "line": 92,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "# ---------------------\n"
                    },
                    {
                        "line": 93,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 94,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "# This section defines the history variables that track the state of\n"
                    },
                    {
                        "line": 95,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "# the packet protocol. Some of these variables are shared between\n"
                    },
                    {
                        "line": 96,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "# protocol layers, so that the allowed interleavings of events at\n"
                    },
                    {
                        "line": 97,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "# different layers can be specified.\n"
                    },
                    {
                        "line": 98,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#\n"
                    },
                    {
                        "line": 99,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 100,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "# Packet protocol state\n"
                    },
                    {
                        "line": 101,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "# ---------------------\n"
                    },
                    {
                        "line": 102,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 103,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "# Packet event specification\n"
                    },
                    {
                        "line": 104,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "# --------------------------\n"
                    },
                    {
                        "line": 105,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 106,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "# A packet event represents the transmision of a QUIC packet `pkt`\n"
                    },
                    {
                        "line": 107,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "# from source endpoint `src` to a QUIC destination endpoint `dst`\n"
                    },
                    {
                        "line": 108,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "# containing a sequence of queued frames.\n"
                    },
                    {
                        "line": 109,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#\n"
                    },
                    {
                        "line": 110,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "# ### Requirements\n"
                    },
                    {
                        "line": 111,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#\n"
                    },
                    {
                        "line": 112,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "# - The packet payload may not be empty [7].\n"
                    },
                    {
                        "line": 113,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#\n"
                    },
                    {
                        "line": 114,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#   An endpoint MUST treat the following as a connection error of type\n"
                    },
                    {
                        "line": 115,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#   TRANSPORT_PARAMETER_ERROR or PROTOCOL_VIOLATION:\n"
                    },
                    {
                        "line": 116,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#   *  absence of the retry_source_connection_id transport parameter from\n"
                    },
                    {
                        "line": 117,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#      the server after receiving a Retry packet, [1]\n"
                    },
                    {
                        "line": 118,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#   *  presence of the retry_source_connection_id transport parameter\n"
                    },
                    {
                        "line": 119,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#      when no Retry packet was received, or [3]\n"
                    },
                    {
                        "line": 120,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#   *  a mismatch between values received from a peer in these transport\n"
                    },
                    {
                        "line": 121,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#      parameters and the value sent in the corresponding Destination or\n"
                    },
                    {
                        "line": 122,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#      Source Connection ID fields of Initial packets. [2]\n"
                    },
                    {
                        "line": 123,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#   If a zero-length connection ID is selected, the corresponding\n"
                    },
                    {
                        "line": 124,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#   transport parameter is included with a zero-length value.\n"
                    },
                    {
                        "line": 125,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 126,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "# A server MUST NOT send more than one Retry\n"
                    },
                    {
                        "line": 127,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#    packet in response to a single UDP datagram.\n"
                    },
                    {
                        "line": 128,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 129,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "# Upon first receiving an Initial or Retry packet from the server, the\n"
                    },
                    {
                        "line": 130,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#    client uses the Source Connection ID supplied by the server as the\n"
                    },
                    {
                        "line": 131,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#    Destination Connection ID for subsequent packets, including any 0-RTT\n"
                    },
                    {
                        "line": 132,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#    packets.  This means that a client might have to change the\n"
                    },
                    {
                        "line": 133,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#    connection ID it sets in the Destination Connection ID field twice\n"
                    },
                    {
                        "line": 134,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#    during connection establishment: once in response to a Retry, and\n"
                    },
                    {
                        "line": 135,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#    once in response to an Initial packet from the server.  Once a client\n"
                    },
                    {
                        "line": 136,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#    has received a valid Initial packet from the server, it MUST discard\n"
                    },
                    {
                        "line": 137,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#    any subsequent packet it receives with a different Source Connection\n"
                    },
                    {
                        "line": 138,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#    ID.\n"
                    },
                    {
                        "line": 139,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 140,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#    A server MAY send Retry packets in response to Initial and 0-RTT\n"
                    },
                    {
                        "line": 141,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#    packets.  A server can either discard or buffer 0-RTT packets that it\n"
                    },
                    {
                        "line": 142,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#    receives.  A server can send multiple Retry packets as it receives\n"
                    },
                    {
                        "line": 143,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#    Initial or 0-RTT packets.  A server MUST NOT send more than one Retry\n"
                    },
                    {
                        "line": 144,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#    packet in response to a single UDP datagram.\n"
                    },
                    {
                        "line": 145,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 146,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "# A client MUST discard a Retry packet with a zero-length\n"
                    },
                    {
                        "line": 147,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#    Retry Token field. \n"
                    },
                    {
                        "line": 148,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 149,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#    A Retry packet does not include a packet number and cannot be\n"
                    },
                    {
                        "line": 150,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#    explicitly acknowledged by a client. TODO\n"
                    },
                    {
                        "line": 151,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 152,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "import action show_iretryb(v:stream_data)\n"
                    },
                    {
                        "line": 153,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "import action show_iretry(v:itoken)\n"
                    },
                    {
                        "line": 154,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 155,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "#### Retry config\n"
                    },
                    {
                        "line": 156,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 157,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "relation retry_sent(C:cid)\n"
                    },
                    {
                        "line": 158,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "relation retry_recv(C:cid)\n"
                    },
                    {
                        "line": 159,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "relation token_saved\n"
                    },
                    {
                        "line": 160,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "relation zero_length_token\n"
                    },
                    {
                        "line": 161,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "relation retry_response(C:cid)\n"
                    },
                    {
                        "line": 162,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "relation retry_client_test\n"
                    },
                    {
                        "line": 163,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "function retry_token(C:cid) : stream_data\n"
                    },
                    {
                        "line": 164,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "var header_retry : stream_pos\n"
                    },
                    {
                        "line": 165,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 166,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "after init {\n"
                    },
                    {
                        "line": 167,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    zero_length_token := false;\n"
                    },
                    {
                        "line": 168,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    token_saved := true;\n"
                    },
                    {
                        "line": 169,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    retry_sent(C) := false;\n"
                    },
                    {
                        "line": 170,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    retry_recv(C) := false;\n"
                    },
                    {
                        "line": 171,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    retry_response(C) := false;\n"
                    },
                    {
                        "line": 172,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    header_retry := 0xF6;\n"
                    },
                    {
                        "line": 173,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    retry_client_test := false;\n"
                    },
                    {
                        "line": 174,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "}\n"
                    },
                    {
                        "line": 175,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 176,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 177,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "around packet_event_retry(src:ip.endpoint,dst:ip.endpoint,pkt:quic_packet_retry) {    \n"
                    },
                    {
                        "line": 178,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    # Extract the source and destination cid's and packet number from the packet.\n"
                    },
                    {
                        "line": 179,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    var dcid := pkt.dst_cid;\n"
                    },
                    {
                        "line": 180,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    var scid := pkt.src_cid;\n"
                    },
                    {
                        "line": 181,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    if cid_mapped(dcid) {\n"
                    },
                    {
                        "line": 182,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\t    dcid := cid_to_aid(dcid);\n"
                    },
                    {
                        "line": 183,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 184,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 185,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    if src = client_alt | dst = client_alt {\n"
                    },
                    {
                        "line": 186,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\t    migration_done := true;\n"
                    },
                    {
                        "line": 187,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\t    #call net.close(endpoint_id.client,sock);\t# destroy connection ?\n"
                    },
                    {
                        "line": 188,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 189,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 190,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    if ~ _generating  { # TODO refactor with client test \n"
                    },
                    {
                        "line": 191,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        var expected_itoken := prot.retry_integrity_tag(8,server_cid,\n"
                    },
                    {
                        "line": 192,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "                                           pkt.pversion,\n"
                    },
                    {
                        "line": 193,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "                                           scid_size_pos(true),dcid,\n"
                    },
                    {
                        "line": 194,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "                                           dcid_size_pos(true),scid,\n"
                    },
                    {
                        "line": 195,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "                                           pkt.token, \n"
                    },
                    {
                        "line": 196,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "                                           last_pkt_num(scid,quic_packet_type.initial),\n"
                    },
                    {
                        "line": 197,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "                                           header_retry,\n"
                    },
                    {
                        "line": 198,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "                                           token_saved);\n"
                    },
                    {
                        "line": 199,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 200,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        require bytes_to_itoken(expected_itoken) = pkt.integrity_token;\n"
                    },
                    {
                        "line": 201,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 202,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    # Similarly, an endpoint MUST NOT reuse a connection ID when sending to\n"
                    },
                    {
                        "line": 203,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    # more than one destination address.  \n"
                    },
                    {
                        "line": 204,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        \n"
                    },
                    {
                        "line": 205,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    # The destination cid must represent an existing connection,\n"
                    },
                    {
                        "line": 206,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    # except in the case of a client initial packet, when the\n"
                    },
                    {
                        "line": 207,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    # destination cid may be the nonce cid chosen by the client for\n"
                    },
                    {
                        "line": 208,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    # the given source cid.\n"
                    },
                    {
                        "line": 209,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 210,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    require pkt.ptype = quic_packet_type.retry; # & is_client(scid) & dcid = nonce_cid(scid);\n"
                    },
                    {
                        "line": 211,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    ...\n"
                    },
                    {
                        "line": 212,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 213,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    # Here, we have the updates to the packet protocol state.\n"
                    },
                    {
                        "line": 214,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 215,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    # TEMPORARY: The following are repeated because currently locals defined in\n"
                    },
                    {
                        "line": 216,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    # the \"before\" section cannot be accessed in the \"after\" section.\n"
                    },
                    {
                        "line": 217,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 218,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    var dcid := pkt.dst_cid;\n"
                    },
                    {
                        "line": 219,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    var scid := pkt.src_cid;\n"
                    },
                    {
                        "line": 220,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 221,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    if cid_mapped(dcid) {\n"
                    },
                    {
                        "line": 222,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\t    dcid := cid_to_aid(dcid);\n"
                    },
                    {
                        "line": 223,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 224,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 225,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    # TODO: the following should not be here\n"
                    },
                    {
                        "line": 226,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 227,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    retry_token(scid) := pkt.token;\n"
                    },
                    {
                        "line": 228,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 229,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    if ~_generating {\n"
                    },
                    {
                        "line": 230,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        conn_requested(src,dst,scid) := false;\n"
                    },
                    {
                        "line": 231,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        conn_requested(src,dst,dcid) := false;\n"
                    },
                    {
                        "line": 232,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        connected(dcid) := false;\n"
                    },
                    {
                        "line": 233,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        connected(scid) := false;\n"
                    },
                    {
                        "line": 234,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        conn_seen(dcid) := false;\n"
                    },
                    {
                        "line": 235,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        conn_seen(scid) := false;\n"
                    },
                    {
                        "line": 236,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        \n"
                    },
                    {
                        "line": 237,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        require ~retry_recv(dcid);\n"
                    },
                    {
                        "line": 238,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        retry_recv(dcid) := true;   \n"
                    },
                    {
                        "line": 239,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        server_cid := scid; # 0x1;\n"
                    },
                    {
                        "line": 240,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 241,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        connected(the_cid)    := false;\n"
                    },
                    {
                        "line": 242,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        connected(server_cid) := false;\n"
                    },
                    {
                        "line": 243,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        conn_seen(server_cid) := false;\n"
                    },
                    {
                        "line": 244,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        conn_seen(the_cid)    := false;\n"
                    },
                    {
                        "line": 245,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        client_initial_rcid   := scid;\n"
                    },
                    {
                        "line": 246,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 247,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        var extns := tls_extensions.empty;\n"
                    },
                    {
                        "line": 248,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        extns := extns.append(make_transport_parameters);\n"
                    },
                    {
                        "line": 249,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        call tls_api.upper.destroy(0);\n"
                    },
                    {
                        "line": 250,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        call tls_api.upper.create(0,false,extns);  # false means this instance of tls is not a server\n"
                    },
                    {
                        "line": 251,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        conn_requested(dst,src,the_cid) := true;\n"
                    },
                    {
                        "line": 252,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 253,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    } else {\n"
                    },
                    {
                        "line": 254,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        retry_sent(scid) := true;\n"
                    },
                    {
                        "line": 255,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        retry_response(scid) := true;\n"
                    },
                    {
                        "line": 256,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        initial_keys_set(scid) := false;\n"
                    },
                    {
                        "line": 257,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        tp_client_set := false;\n"
                    },
                    {
                        "line": 258,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        conn_requested(src,dst,dcid) := false;\n"
                    },
                    {
                        "line": 259,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        conn_requested(src,dst,the_cid) := false;\n"
                    },
                    {
                        "line": 260,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        conn_seen(dcid) := false;\n"
                    },
                    {
                        "line": 261,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        conn_seen(the_cid) := false;\n"
                    },
                    {
                        "line": 262,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "        call tls_api.upper.destroy(src_tls_id(src)); # not totally freeing all parameter\n"
                    },
                    {
                        "line": 263,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "    };\n"
                    },
                    {
                        "line": 264,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "}\n"
                    },
                    {
                        "line": 265,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 266,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    },
                    {
                        "line": 267,
                        "file": "quic_packet_retry.ivy",
                        "instruction": "\n"
                    }
                ],
                "monitor": {
                    "before": [],
                    "after": [
                        {
                            "line": 64,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "    if _generating {  # & ~conn_closed(pkt.the_cid)\n"
                        },
                        {
                            "line": 65,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        var spkt := pkt_serdes_retry.to_bytes(pkt);\n"
                        },
                        {
                            "line": 66,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        var pkts := prot.arr.empty;\n"
                        },
                        {
                            "line": 67,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        pkts := pkts.append(spkt);\n"
                        },
                        {
                            "line": 68,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        total_data_sent := total_data_sent + spkt.size;\n"
                        },
                        {
                            "line": 69,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "        call net.send(endpoint_to_pid(src),endpoint_to_socket(src),dst,pkts);\n"
                        },
                        {
                            "line": 70,
                            "file": "ivy_quic_shim_client.ivy",
                            "instruction": "    }\n"
                        }
                    ],
                    "around": [
                        {
                            "line": 178,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    # Extract the source and destination cid's and packet number from the packet.\n"
                        },
                        {
                            "line": 179,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    var dcid := pkt.dst_cid;\n"
                        },
                        {
                            "line": 180,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    var scid := pkt.src_cid;\n"
                        },
                        {
                            "line": 181,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    if cid_mapped(dcid) {\n"
                        },
                        {
                            "line": 182,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "\t    dcid := cid_to_aid(dcid);\n"
                        },
                        {
                            "line": 183,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 184,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 185,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    if src = client_alt | dst = client_alt {\n"
                        },
                        {
                            "line": 186,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "\t    migration_done := true;\n"
                        },
                        {
                            "line": 187,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "\t    #call net.close(endpoint_id.client,sock);\t# destroy connection ?\n"
                        },
                        {
                            "line": 188,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 189,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 190,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    if ~ _generating  { # TODO refactor with client test \n"
                        },
                        {
                            "line": 191,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        var expected_itoken := prot.retry_integrity_tag(8,server_cid,\n"
                        },
                        {
                            "line": 192,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "                                           pkt.pversion,\n"
                        },
                        {
                            "line": 193,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "                                           scid_size_pos(true),dcid,\n"
                        },
                        {
                            "line": 194,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "                                           dcid_size_pos(true),scid,\n"
                        },
                        {
                            "line": 195,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "                                           pkt.token, \n"
                        },
                        {
                            "line": 196,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "                                           last_pkt_num(scid,quic_packet_type.initial),\n"
                        },
                        {
                            "line": 197,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "                                           header_retry,\n"
                        },
                        {
                            "line": 198,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "                                           token_saved);\n"
                        },
                        {
                            "line": 199,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 200,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        require bytes_to_itoken(expected_itoken) = pkt.integrity_token;\n"
                        },
                        {
                            "line": 201,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 202,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    # Similarly, an endpoint MUST NOT reuse a connection ID when sending to\n"
                        },
                        {
                            "line": 203,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    # more than one destination address.  \n"
                        },
                        {
                            "line": 204,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        \n"
                        },
                        {
                            "line": 205,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    # The destination cid must represent an existing connection,\n"
                        },
                        {
                            "line": 206,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    # except in the case of a client initial packet, when the\n"
                        },
                        {
                            "line": 207,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    # destination cid may be the nonce cid chosen by the client for\n"
                        },
                        {
                            "line": 208,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    # the given source cid.\n"
                        },
                        {
                            "line": 209,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 210,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    require pkt.ptype = quic_packet_type.retry; # & is_client(scid) & dcid = nonce_cid(scid);\n"
                        },
                        {
                            "line": 211,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    ...\n"
                        },
                        {
                            "line": 212,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 213,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    # Here, we have the updates to the packet protocol state.\n"
                        },
                        {
                            "line": 214,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 215,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    # TEMPORARY: The following are repeated because currently locals defined in\n"
                        },
                        {
                            "line": 216,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    # the \"before\" section cannot be accessed in the \"after\" section.\n"
                        },
                        {
                            "line": 217,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 218,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    var dcid := pkt.dst_cid;\n"
                        },
                        {
                            "line": 219,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    var scid := pkt.src_cid;\n"
                        },
                        {
                            "line": 220,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 221,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    if cid_mapped(dcid) {\n"
                        },
                        {
                            "line": 222,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "\t    dcid := cid_to_aid(dcid);\n"
                        },
                        {
                            "line": 223,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 224,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 225,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    # TODO: the following should not be here\n"
                        },
                        {
                            "line": 226,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 227,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    retry_token(scid) := pkt.token;\n"
                        },
                        {
                            "line": 228,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 229,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    if ~_generating {\n"
                        },
                        {
                            "line": 230,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        conn_requested(src,dst,scid) := false;\n"
                        },
                        {
                            "line": 231,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        conn_requested(src,dst,dcid) := false;\n"
                        },
                        {
                            "line": 232,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        connected(dcid) := false;\n"
                        },
                        {
                            "line": 233,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        connected(scid) := false;\n"
                        },
                        {
                            "line": 234,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        conn_seen(dcid) := false;\n"
                        },
                        {
                            "line": 235,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        conn_seen(scid) := false;\n"
                        },
                        {
                            "line": 236,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        \n"
                        },
                        {
                            "line": 237,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        require ~retry_recv(dcid);\n"
                        },
                        {
                            "line": 238,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        retry_recv(dcid) := true;   \n"
                        },
                        {
                            "line": 239,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        server_cid := scid; # 0x1;\n"
                        },
                        {
                            "line": 240,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 241,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        connected(the_cid)    := false;\n"
                        },
                        {
                            "line": 242,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        connected(server_cid) := false;\n"
                        },
                        {
                            "line": 243,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        conn_seen(server_cid) := false;\n"
                        },
                        {
                            "line": 244,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        conn_seen(the_cid)    := false;\n"
                        },
                        {
                            "line": 245,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        client_initial_rcid   := scid;\n"
                        },
                        {
                            "line": 246,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 247,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        var extns := tls_extensions.empty;\n"
                        },
                        {
                            "line": 248,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        extns := extns.append(make_transport_parameters);\n"
                        },
                        {
                            "line": 249,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        call tls_api.upper.destroy(0);\n"
                        },
                        {
                            "line": 250,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        call tls_api.upper.create(0,false,extns);  # false means this instance of tls is not a server\n"
                        },
                        {
                            "line": 251,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        conn_requested(dst,src,the_cid) := true;\n"
                        },
                        {
                            "line": 252,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 253,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    } else {\n"
                        },
                        {
                            "line": 254,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        retry_sent(scid) := true;\n"
                        },
                        {
                            "line": 255,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        retry_response(scid) := true;\n"
                        },
                        {
                            "line": 256,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        initial_keys_set(scid) := false;\n"
                        },
                        {
                            "line": 257,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        tp_client_set := false;\n"
                        },
                        {
                            "line": 258,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        conn_requested(src,dst,dcid) := false;\n"
                        },
                        {
                            "line": 259,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        conn_requested(src,dst,the_cid) := false;\n"
                        },
                        {
                            "line": 260,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        conn_seen(dcid) := false;\n"
                        },
                        {
                            "line": 261,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        conn_seen(the_cid) := false;\n"
                        },
                        {
                            "line": 262,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "        call tls_api.upper.destroy(src_tls_id(src)); # not totally freeing all parameter\n"
                        },
                        {
                            "line": 263,
                            "file": "quic_packet_retry.ivy",
                            "instruction": "    };\n"
                        }
                    ]
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "pkt",
                        "type": "quic_packet_retry"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "net.send",
                        "component": "ivy_quic_shim_client.ivy"
                    },
                    {
                        "caller_func": "bytes_to_itoken",
                        "component": "quic_packet_retry.ivy"
                    },
                    {
                        "caller_func": "src_tls_id",
                        "component": "quic_packet_retry.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [
                        {
                            "caller_func": "tls_client_retry_response",
                            "component": "quic_security.ivy"
                        }
                    ],
                    "assertions": [
                        {
                            "line": 201,
                            "file": "quic_packet_retry.ivy",
                            "assertion": "require bytes_to_itoken(expected_itoken) = pkt.integrity_token;\n"
                        },
                        {
                            "line": 211,
                            "file": "quic_packet_retry.ivy",
                            "assertion": "require pkt.ptype = quic_packet_type.retry; # & is_client(scid) & dcid = nonce_cid(scid);\n"
                        },
                        {
                            "line": 238,
                            "file": "quic_packet_retry.ivy",
                            "assertion": "require ~retry_recv(dcid);\n"
                        },
                        {
                            "line": 1761,
                            "file": "quic_frame.ivy",
                            "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 1762,
                            "file": "quic_frame.ivy",
                            "assertion": "require e = quic_packet_type.one_rtt & established_1rtt_keys(scid);\n"
                        },
                        {
                            "line": 1763,
                            "file": "quic_frame.ivy",
                            "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid); #Will change with implementing TODO\n"
                        },
                        {
                            "line": 1767,
                            "file": "quic_frame.ivy",
                            "assertion": "require ~issued_zero_length_cid; # [7]\n"
                        },
                        {
                            "line": 1770,
                            "file": "quic_frame.ivy",
                            "assertion": "require f.retire_prior_to <= f.seq_num; #[4]\n"
                        },
                        {
                            "line": 1772,
                            "file": "quic_frame.ivy",
                            "assertion": "require f.seq_num < max_rtp_num(scid) -> send_retire_cid(dcid); #[6] \n"
                        },
                        {
                            "line": 320,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require scid = the_cid;\n"
                        },
                        {
                            "line": 1790,
                            "file": "quic_frame.ivy",
                            "assertion": "require acti_coid_check(dcid,num_conn(dcid));\n"
                        }
                    ]
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "functions": [
                {
                    "name": "retry_token(C:cid) : stream_data\n",
                    "comment": "",
                    "line": 164,
                    "file": "quic_packet_retry.ivy"
                }
            ],
            "relations": [
                {
                    "name": "retry_sent(C:cid)\n",
                    "comment": "",
                    "line": 158,
                    "file": "quic_packet_retry.ivy"
                },
                {
                    "name": "retry_recv(C:cid)\n",
                    "comment": "",
                    "line": 159,
                    "file": "quic_packet_retry.ivy"
                },
                {
                    "name": "token_saved\n",
                    "comment": "",
                    "line": 160,
                    "file": "quic_packet_retry.ivy"
                },
                {
                    "name": "zero_length_token\n",
                    "comment": "",
                    "line": 161,
                    "file": "quic_packet_retry.ivy"
                },
                {
                    "name": "retry_response(C:cid)\n",
                    "comment": "",
                    "line": 162,
                    "file": "quic_packet_retry.ivy"
                },
                {
                    "name": "retry_client_test\n",
                    "comment": "",
                    "line": 163,
                    "file": "quic_packet_retry.ivy"
                }
            ]
        }
    ],
    "quic_protection.ivy": [
        {
            "prot_name": "prot",
            "prot_object": [],
            "prot_module": {
                "module_parameters": [],
                "module_attributes": []
            },
            "actions": [
                {
                    "line": 551,
                    "action_name": "prot.byte_xor",
                    "implementation": [
                        {
                            "line": 550,
                            "file": "quic_protection.ivy",
                            "instruction": "        <<<\n"
                        },
                        {
                            "line": 551,
                            "file": "quic_protection.ivy",
                            "instruction": "        z = x ^ y;\n"
                        },
                        {
                            "line": 552,
                            "file": "quic_protection.ivy",
                            "instruction": "        >>>\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "z",
                        "type": "byte"
                    },
                    "action_parameters": [
                        {
                            "name": "x",
                            "type": "byte"
                        },
                        {
                            "name": "y",
                            "type": "byte"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 543,
                    "action_name": "prot.bytes_to_cid",
                    "implementation": [
                        {
                            "line": 542,
                            "file": "quic_protection.ivy",
                            "instruction": "        <<<\n"
                        },
                        {
                            "line": 543,
                            "file": "quic_protection.ivy",
                            "instruction": "        val.val = 0;\n"
                        },
                        {
                            "line": 544,
                            "file": "quic_protection.ivy",
                            "instruction": "        for (unsigned i = 0; i < bytes.size(); i++)\n"
                        },
                        {
                            "line": 545,
                            "file": "quic_protection.ivy",
                            "instruction": "            val.val = (val.val << 8) + bytes[i];\n"
                        },
                        {
                            "line": 546,
                            "file": "quic_protection.ivy",
                            "instruction": "        >>>\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "val",
                        "type": "cid"
                    },
                    "action_parameters": [
                        {
                            "name": "bytes",
                            "type": "stream_data"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 460,
                    "action_name": "prot.correct_pnum",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "last",
                            "type": "pkt_num"
                        },
                        {
                            "name": "pnum",
                            "type": "pkt_num"
                        },
                        {
                            "name": "pnum_len",
                            "type": "stream_pos"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 282,
                    "action_name": "prot.decrypt",
                    "implementation": [
                        {
                            "line": 281,
                            "file": "quic_protection.ivy",
                            "instruction": "        var h := get_header_info(pkt,true);\n"
                        },
                        {
                            "line": 282,
                            "file": "quic_protection.ivy",
                            "instruction": "        call show_header(h);\n"
                        },
                        {
                            "line": 283,
                            "file": "quic_protection.ivy",
                            "instruction": "        var level := get_level(pkt);\n"
                        },
                        {
                            "line": 284,
                            "file": "quic_protection.ivy",
                            "instruction": "        if level = 1 & ~zrtt_pkt_set {\n"
                        },
                        {
                            "line": 285,
                            "file": "quic_protection.ivy",
                            "instruction": "            zrtt_pkt_set := true;\n"
                        },
                        {
                            "line": 286,
                            "file": "quic_protection.ivy",
                            "instruction": "            last_zrtt_pkt := pkt;\n"
                        },
                        {
                            "line": 287,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 288,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 289,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample_size := tls.iv_size(c,level);\n"
                        },
                        {
                            "line": 290,
                            "file": "quic_protection.ivy",
                            "instruction": "        if ~zrtt_pkt_process & level = 1 {\n"
                        },
                        {
                            "line": 291,
                            "file": "quic_protection.ivy",
                            "instruction": "            res.ok := false;\n"
                        },
                        {
                            "line": 292,
                            "file": "quic_protection.ivy",
                            "instruction": "        } else if sample_size = 0 {\n"
                        },
                        {
                            "line": 293,
                            "file": "quic_protection.ivy",
                            "instruction": "            res.ok := false;\n"
                        },
                        {
                            "line": 294,
                            "file": "quic_protection.ivy",
                            "instruction": "        } \n"
                        },
                        {
                            "line": 295,
                            "file": "quic_protection.ivy",
                            "instruction": "        else {\n"
                        },
                        {
                            "line": 296,
                            "file": "quic_protection.ivy",
                            "instruction": "            var pnum_pos := h.pkt_num_pos; #+ h.token_length;\n"
                        },
                        {
                            "line": 297,
                            "file": "quic_protection.ivy",
                            "instruction": "            var sample_pos := pnum_pos + 4; # + h.token_length;\n"
                        },
                        {
                            "line": 298,
                            "file": "quic_protection.ivy",
                            "instruction": "            if sample_pos + sample_size > pkt.end {\n"
                        },
                        {
                            "line": 299,
                            "file": "quic_protection.ivy",
                            "instruction": "                sample_pos := pkt.end - sample_size\n"
                        },
                        {
                            "line": 300,
                            "file": "quic_protection.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 301,
                            "file": "quic_protection.ivy",
                            "instruction": "            \n"
                        },
                        {
                            "line": 302,
                            "file": "quic_protection.ivy",
                            "instruction": "            var sample := pkt.segment(sample_pos,sample_pos+sample_size);\n"
                        },
                        {
                            "line": 303,
                            "file": "quic_protection.ivy",
                            "instruction": "            var pnum := pkt.segment(pnum_pos,pnum_pos+4);\n"
                        },
                        {
                            "line": 304,
                            "file": "quic_protection.ivy",
                            "instruction": "            var mask := stream_data.empty;\n"
                        },
                        {
                            "line": 305,
                            "file": "quic_protection.ivy",
                            "instruction": "            \n"
                        },
                        {
                            "line": 306,
                            "file": "quic_protection.ivy",
                            "instruction": "            # tricky: this encrypts with the receiving cipher\n"
                        },
                        {
                            "line": 307,
                            "file": "quic_protection.ivy",
                            "instruction": "            # mask = header_protection(hp_key, sample)\n"
                        },
                        {
                            "line": 308,
                            "file": "quic_protection.ivy",
                            "instruction": "            mask := tls.encrypt_cipher(c,level,mask.resize(5,0),sample,true);\n"
                        },
                        {
                            "line": 309,
                            "file": "quic_protection.ivy",
                            "instruction": "            \n"
                        },
                        {
                            "line": 310,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 311,
                            "file": "quic_protection.ivy",
                            "instruction": "            # if (packet[0] & 0x80) == 0x80:\n"
                        },
                        {
                            "line": 312,
                            "file": "quic_protection.ivy",
                            "instruction": "                # Long header: 4 bits masked\n"
                        },
                        {
                            "line": 313,
                            "file": "quic_protection.ivy",
                            "instruction": "            #     packet[0] ^= mask[0] & 0x0f\n"
                        },
                        {
                            "line": 314,
                            "file": "quic_protection.ivy",
                            "instruction": "            # else:\n"
                        },
                        {
                            "line": 315,
                            "file": "quic_protection.ivy",
                            "instruction": "                # Short header: 5 bits masked\n"
                        },
                        {
                            "line": 316,
                            "file": "quic_protection.ivy",
                            "instruction": "            #     packet[0] ^= mask[0] & 0x1f\n"
                        },
                        {
                            "line": 317,
                            "file": "quic_protection.ivy",
                            "instruction": "            var byte0_mask := bvand(mask.value(0), 0x0f if h.hdr_long else 0x1f);\n"
                        },
                        {
                            "line": 318,
                            "file": "quic_protection.ivy",
                            "instruction": "            \n"
                        },
                        {
                            "line": 319,
                            "file": "quic_protection.ivy",
                            "instruction": "            var hdr := pkt.segment(0,pnum_pos);\n"
                        },
                        {
                            "line": 320,
                            "file": "quic_protection.ivy",
                            "instruction": "            hdr := hdr.set(0,byte_xor(hdr.value(0),byte0_mask));\n"
                        },
                        {
                            "line": 321,
                            "file": "quic_protection.ivy",
                            "instruction": "            \n"
                        },
                        {
                            "line": 322,
                            "file": "quic_protection.ivy",
                            "instruction": "            var pnum_len := get_pnum_len_b(hdr);\n"
                        },
                        {
                            "line": 323,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 324,
                            "file": "quic_protection.ivy",
                            "instruction": "            last_datagram_received_size := last_datagram_received_size +  h.payload_length + h.pkt_num_pos + pnum_len;\n"
                        },
                        {
                            "line": 325,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 326,
                            "file": "quic_protection.ivy",
                            "instruction": "            call show_token_len(pnum_len);\n"
                        },
                        {
                            "line": 327,
                            "file": "quic_protection.ivy",
                            "instruction": "            pnum := stream_data_xor(pkt.segment(pnum_pos,pnum_pos+pnum_len),mask.segment(1,1+pnum_len));\n"
                        },
                        {
                            "line": 328,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 329,
                            "file": "quic_protection.ivy",
                            "instruction": "            hdr := hdr.extend(pnum);\n"
                        },
                        {
                            "line": 330,
                            "file": "quic_protection.ivy",
                            "instruction": "            var new_seq := get_pnum(pnum,0,pnum_len);\n"
                        },
                        {
                            "line": 331,
                            "file": "quic_protection.ivy",
                            "instruction": "            new_seq := correct_pnum(seq,new_seq,pnum_len);\n"
                        },
                        {
                            "line": 332,
                            "file": "quic_protection.ivy",
                            "instruction": "            var pyld := pkt.segment(pnum_pos+pnum_len,pkt.end);\n"
                        },
                        {
                            "line": 333,
                            "file": "quic_protection.ivy",
                            "instruction": "            res := tls.decrypt_aead(c,level,pyld,new_seq,hdr); #\n"
                        },
                        {
                            "line": 334,
                            "file": "quic_protection.ivy",
                            "instruction": "            if res.ok {\n"
                        },
                        {
                            "line": 335,
                            "file": "quic_protection.ivy",
                            "instruction": "                # fix up the length field to account for removal of checksum\n"
                        },
                        {
                            "line": 336,
                            "file": "quic_protection.ivy",
                            "instruction": "                if h.hdr_long {\n"
                        },
                        {
                            "line": 337,
                            "file": "quic_protection.ivy",
                            "instruction": "                    var new_len := to_var_int_16(h.payload_length-16);\n"
                        },
                        {
                            "line": 338,
                            "file": "quic_protection.ivy",
                            "instruction": "                    hdr := hdr.resize(h.payload_length_pos,0);\n"
                        },
                        {
                            "line": 339,
                            "file": "quic_protection.ivy",
                            "instruction": "                    hdr := hdr.extend(new_len);\n"
                        },
                        {
                            "line": 340,
                            "file": "quic_protection.ivy",
                            "instruction": "                    hdr := hdr.extend(pnum);\n"
                        },
                        {
                            "line": 341,
                            "file": "quic_protection.ivy",
                            "instruction": "                };\n"
                        },
                        {
                            "line": 342,
                            "file": "quic_protection.ivy",
                            "instruction": "                res.payload := res.data;\n"
                        },
                        {
                            "line": 343,
                            "file": "quic_protection.ivy",
                            "instruction": "                res.data := hdr.extend(res.data);\n"
                        },
                        {
                            "line": 344,
                            "file": "quic_protection.ivy",
                            "instruction": "            }\n"
                        },
                        {
                            "line": 345,
                            "file": "quic_protection.ivy",
                            "instruction": "        }\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "c",
                            "type": "tls_id"
                        },
                        {
                            "name": "seq",
                            "type": "pkt_num"
                        },
                        {
                            "name": "pkt",
                            "type": "stream_data"
                        },
                        {
                            "name": "pkt",
                            "type": "stream_data"
                        },
                        {
                            "name": "decrypt",
                            "type": "bool"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 53,
                    "action_name": "prot.encrypt",
                    "implementation": [
                        {
                            "line": 52,
                            "file": "quic_protection.ivy",
                            "instruction": "        var h := get_header_info(pkt,false);\n"
                        },
                        {
                            "line": 53,
                            "file": "quic_protection.ivy",
                            "instruction": "        var level := get_level(pkt);\n"
                        },
                        {
                            "line": 54,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample_size : stream_pos := tls.iv_size(c,level);\n"
                        },
                        {
                            "line": 55,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pnum_pos := h.pkt_num_pos;\n"
                        },
                        {
                            "line": 56,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pnum_len := get_pnum_len(pkt);\n"
                        },
                        {
                            "line": 57,
                            "file": "quic_protection.ivy",
                            "instruction": "        var hdr_len := pnum_pos + pnum_len;\n"
                        },
                        {
                            "line": 58,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 59,
                            "file": "quic_protection.ivy",
                            "instruction": "        # Tricky: before encrypting the payload, we need to adjust the length field\n"
                        },
                        {
                            "line": 60,
                            "file": "quic_protection.ivy",
                            "instruction": "        # so that it includes the AEAD checksum. Of course, we don't know what\n"
                        },
                        {
                            "line": 61,
                            "file": "quic_protection.ivy",
                            "instruction": "        # that actually is. Here we assume it is 16 bytes. Even worse, the length of\n"
                        },
                        {
                            "line": 62,
                            "file": "quic_protection.ivy",
                            "instruction": "        # the length field could grow. Here, we assume the length field format is\n"
                        },
                        {
                            "line": 63,
                            "file": "quic_protection.ivy",
                            "instruction": "        # always two bytes. \n"
                        },
                        {
                            "line": 64,
                            "file": "quic_protection.ivy",
                            "instruction": "        if h.hdr_long {\n"
                        },
                        {
                            "line": 65,
                            "file": "quic_protection.ivy",
                            "instruction": "            var new_len := to_var_int_16(h.payload_length+16);\n"
                        },
                        {
                            "line": 66,
                            "file": "quic_protection.ivy",
                            "instruction": "            pkt := pkt.set(pnum_pos-2,new_len.value(0));\n"
                        },
                        {
                            "line": 67,
                            "file": "quic_protection.ivy",
                            "instruction": "            pkt := pkt.set(pnum_pos-1,new_len.value(1));\n"
                        },
                        {
                            "line": 68,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 69,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 70,
                            "file": "quic_protection.ivy",
                            "instruction": "        var hdr  := pkt.segment(0,pnum_pos);\n"
                        },
                        {
                            "line": 71,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pnum := pkt.segment(pnum_pos,hdr_len);\n"
                        },
                        {
                            "line": 72,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pyld := pkt.segment(hdr_len,pkt.end);\n"
                        },
                        {
                            "line": 73,
                            "file": "quic_protection.ivy",
                            "instruction": "        var auth := pkt.segment(0,hdr_len);\n"
                        },
                        {
                            "line": 74,
                            "file": "quic_protection.ivy",
                            "instruction": "        var new_seq := get_pnum(pnum,0,pnum_len);\n"
                        },
                        {
                            "line": 75,
                            "file": "quic_protection.ivy",
                            "instruction": "        new_seq := correct_pnum(seq,new_seq,pnum_len);\n"
                        },
                        {
                            "line": 76,
                            "file": "quic_protection.ivy",
                            "instruction": "        pyld := tls.encrypt_aead(c,level,pyld,new_seq,auth);\n"
                        },
                        {
                            "line": 77,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 78,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 79,
                            "file": "quic_protection.ivy",
                            "instruction": "        # call show_aead(level,pyld,new_seq,auth);\n"
                        },
                        {
                            "line": 80,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 81,
                            "file": "quic_protection.ivy",
                            "instruction": "        # start l 3Computing the sample position is a bit tricky. First we\n"
                        },
                        {
                            "line": 82,
                            "file": "quic_protection.ivy",
                            "instruction": "        # assume the length of the pnum is 4, which means the offset\n"
                        },
                        {
                            "line": 83,
                            "file": "quic_protection.ivy",
                            "instruction": "        # of the sample withing the payload is `4 -\n"
                        },
                        {
                            "line": 84,
                            "file": "quic_protection.ivy",
                            "instruction": "        # pnum_len`. However, if there are not enough bytes in the\n"
                        },
                        {
                            "line": 85,
                            "file": "quic_protection.ivy",
                            "instruction": "        # payload, we change it to `payld.end - sample`. Note,\n"
                        },
                        {
                            "line": 86,
                            "file": "quic_protection.ivy",
                            "instruction": "        # however, that we are using natural numbers, so if the\n"
                        },
                        {
                            "line": 87,
                            "file": "quic_protection.ivy",
                            "instruction": "        # position would be negative, it saturates to zero. This is\n"
                        },
                        {
                            "line": 88,
                            "file": "quic_protection.ivy",
                            "instruction": "        # consistent with the statement that you should never sample\n"
                        },
                        {
                            "line": 89,
                            "file": "quic_protection.ivy",
                            "instruction": "        # any bytes from the packet number itself. This leaves the\n"
                        },
                        {
                            "line": 90,
                            "file": "quic_protection.ivy",
                            "instruction": "        # possibility that there are not enough bytes to sample, that\n"
                        },
                        {
                            "line": 91,
                            "file": "quic_protection.ivy",
                            "instruction": "        # is, in the sample, there will be some trailing\n"
                        },
                        {
                            "line": 92,
                            "file": "quic_protection.ivy",
                            "instruction": "        # zeros. Nonetheless, the spec says that the sample size will\n"
                        },
                        {
                            "line": 93,
                            "file": "quic_protection.ivy",
                            "instruction": "        # never be larger than the smallest encrypted payload, so we\n"
                        },
                        {
                            "line": 94,
                            "file": "quic_protection.ivy",
                            "instruction": "        # should be OK.\n"
                        },
                        {
                            "line": 95,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 96,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pn_offset : stream_pos := 0;\n"
                        },
                        {
                            "line": 97,
                            "file": "quic_protection.ivy",
                            "instruction": "        if h.hdr_long {\n"
                        },
                        {
                            "line": 98,
                            "file": "quic_protection.ivy",
                            "instruction": "            pn_offset := hdr_len - pnum_pos;\n"
                        },
                        {
                            "line": 99,
                            "file": "quic_protection.ivy",
                            "instruction": "        } else {\n"
                        },
                        {
                            "line": 100,
                            "file": "quic_protection.ivy",
                            "instruction": "            pn_offset := 1 + 4;\n"
                        },
                        {
                            "line": 101,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 102,
                            "file": "quic_protection.ivy",
                            "instruction": "\t\n"
                        },
                        {
                            "line": 103,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample_pos : stream_pos :=  4 - pnum_len;  #- pnum_len;\n"
                        },
                        {
                            "line": 104,
                            "file": "quic_protection.ivy",
                            "instruction": "        var new_pyld := pyld;\n"
                        },
                        {
                            "line": 105,
                            "file": "quic_protection.ivy",
                            "instruction": "        if sample_pos + sample_size > pkt.end { #MC\n"
                        },
                        {
                            "line": 106,
                            "file": "quic_protection.ivy",
                            "instruction": "            var diff := (sample_pos + sample_size) - pyld.end;\n"
                        },
                        {
                            "line": 107,
                            "file": "quic_protection.ivy",
                            "instruction": "            var i : stream_pos := 0;\n"
                        },
                        {
                            "line": 108,
                            "file": "quic_protection.ivy",
                            "instruction": "            while i < diff {\n"
                        },
                        {
                            "line": 109,
                            "file": "quic_protection.ivy",
                            "instruction": "                new_pyld := new_pyld.append(0x00);\n"
                        },
                        {
                            "line": 110,
                            "file": "quic_protection.ivy",
                            "instruction": "                i := i + 1\n"
                        },
                        {
                            "line": 111,
                            "file": "quic_protection.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 112,
                            "file": "quic_protection.ivy",
                            "instruction": "            #sample_pos := pyld.end - sample_size #MC shift vs padding ? #[*1*]\n"
                        },
                        {
                            "line": 113,
                            "file": "quic_protection.ivy",
                            "instruction": "            #check with mcmillan vs maxime piraux\n"
                        },
                        {
                            "line": 114,
                            "file": "quic_protection.ivy",
                            "instruction": "            pyld := new_pyld;  #[*2*]\n"
                        },
                        {
                            "line": 115,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 116,
                            "file": "quic_protection.ivy",
                            "instruction": "\t \n"
                        },
                        {
                            "line": 117,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample := pyld.segment(sample_pos,sample_pos+sample_size); \n"
                        },
                        {
                            "line": 118,
                            "file": "quic_protection.ivy",
                            "instruction": "        var mask := stream_data.empty;\n"
                        },
                        {
                            "line": 119,
                            "file": "quic_protection.ivy",
                            "instruction": "        mask := tls.encrypt_cipher(c,level,mask.resize(5,0),sample,false);\n"
                        },
                        {
                            "line": 120,
                            "file": "quic_protection.ivy",
                            "instruction": "        var byte0_mask := bvand(mask.value(0), 0x0f if h.hdr_long else 0x1f);\n"
                        },
                        {
                            "line": 121,
                            "file": "quic_protection.ivy",
                            "instruction": "        hdr := hdr.set(0,byte_xor(pkt.value(0),byte0_mask));\n"
                        },
                        {
                            "line": 122,
                            "file": "quic_protection.ivy",
                            "instruction": "        pnum := stream_data_xor(pkt.segment(pnum_pos,pnum_pos+pnum_len),mask.segment(1,1+pnum_len));        \n"
                        },
                        {
                            "line": 123,
                            "file": "quic_protection.ivy",
                            "instruction": "        pkt := hdr.extend(pnum).extend(pyld);\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "c",
                            "type": "tls_id"
                        },
                        {
                            "name": "seq",
                            "type": "pkt_num"
                        },
                        {
                            "name": "pkt",
                            "type": "stream_data"
                        },
                        {
                            "name": "c",
                            "type": "tls_id"
                        },
                        {
                            "name": "seq",
                            "type": "pkt_num"
                        },
                        {
                            "name": "pkt",
                            "type": "stream_data"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "prot.encrypt",
                            "component": "quic_packet.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 128,
                    "action_name": "prot.encrypt_rtt",
                    "implementation": [
                        {
                            "line": 127,
                            "file": "quic_protection.ivy",
                            "instruction": "        var h := get_header_info(pkt,false);\n"
                        },
                        {
                            "line": 128,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pkt_rtt := pkt.segment(h.payload_length,pkt.end);\n"
                        },
                        {
                            "line": 129,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pkt_init := pkt.segment(0,h.payload_length);\n"
                        },
                        {
                            "line": 130,
                            "file": "quic_protection.ivy",
                            "instruction": "        var h_rtt := get_header_info(pkt_rtt,false);\n"
                        },
                        {
                            "line": 131,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 132,
                            "file": "quic_protection.ivy",
                            "instruction": "        # ----------------------------------------------------------------------\n"
                        },
                        {
                            "line": 133,
                            "file": "quic_protection.ivy",
                            "instruction": "       \n"
                        },
                        {
                            "line": 134,
                            "file": "quic_protection.ivy",
                            "instruction": "        var level := get_level(pkt_init);\n"
                        },
                        {
                            "line": 135,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample_size : stream_pos := tls.iv_size(c,level);        \n"
                        },
                        {
                            "line": 136,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pnum_pos := h.pkt_num_pos;\n"
                        },
                        {
                            "line": 137,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pnum_len := get_pnum_len(pkt_init);\n"
                        },
                        {
                            "line": 138,
                            "file": "quic_protection.ivy",
                            "instruction": "        var hdr_len := pnum_pos + pnum_len;\n"
                        },
                        {
                            "line": 139,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 140,
                            "file": "quic_protection.ivy",
                            "instruction": "        # Tricky: before encrypting the payload, we need to adjust the length field\n"
                        },
                        {
                            "line": 141,
                            "file": "quic_protection.ivy",
                            "instruction": "        # so that it includes the AEAD checksum. Of course, we don't know what\n"
                        },
                        {
                            "line": 142,
                            "file": "quic_protection.ivy",
                            "instruction": "        # that actually is. Here we assume it is 16 bytes. Even worse, the length of\n"
                        },
                        {
                            "line": 143,
                            "file": "quic_protection.ivy",
                            "instruction": "        # the length field could grow. Here, we assume the length field format is\n"
                        },
                        {
                            "line": 144,
                            "file": "quic_protection.ivy",
                            "instruction": "        # always two bytes. \n"
                        },
                        {
                            "line": 145,
                            "file": "quic_protection.ivy",
                            "instruction": "        if h.hdr_long {\n"
                        },
                        {
                            "line": 146,
                            "file": "quic_protection.ivy",
                            "instruction": "            var new_len := to_var_int_16(h.payload_length-10); # 16 vs 10 -10 +16\n"
                        },
                        {
                            "line": 147,
                            "file": "quic_protection.ivy",
                            "instruction": "            pkt_init := pkt_init.set(pnum_pos-2,new_len.value(0));\n"
                        },
                        {
                            "line": 148,
                            "file": "quic_protection.ivy",
                            "instruction": "            pkt_init := pkt_init.set(pnum_pos-1,new_len.value(1));\n"
                        },
                        {
                            "line": 149,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 150,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 151,
                            "file": "quic_protection.ivy",
                            "instruction": "        var hdr  := pkt_init.segment(0,pnum_pos);\n"
                        },
                        {
                            "line": 152,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pnum := pkt_init.segment(pnum_pos,hdr_len);\n"
                        },
                        {
                            "line": 153,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pyld_i := pkt_init.segment(hdr_len,pkt.end); \n"
                        },
                        {
                            "line": 154,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 155,
                            "file": "quic_protection.ivy",
                            "instruction": "        var auth := pkt_init.segment(0,hdr_len);\n"
                        },
                        {
                            "line": 156,
                            "file": "quic_protection.ivy",
                            "instruction": "        var new_seq := get_pnum(pnum,0,pnum_len);\n"
                        },
                        {
                            "line": 157,
                            "file": "quic_protection.ivy",
                            "instruction": "        new_seq := correct_pnum(seq,new_seq,pnum_len);\n"
                        },
                        {
                            "line": 158,
                            "file": "quic_protection.ivy",
                            "instruction": "        pyld_i := tls.encrypt_aead(c,level,pyld_i,new_seq,auth);\n"
                        },
                        {
                            "line": 159,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 160,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 161,
                            "file": "quic_protection.ivy",
                            "instruction": "        # start l 3Computing the sample position is a bit tricky. First we\n"
                        },
                        {
                            "line": 162,
                            "file": "quic_protection.ivy",
                            "instruction": "        # assume the length of the pnum is 4, which means the offset\n"
                        },
                        {
                            "line": 163,
                            "file": "quic_protection.ivy",
                            "instruction": "        # of the sample withing the payload is `4 -\n"
                        },
                        {
                            "line": 164,
                            "file": "quic_protection.ivy",
                            "instruction": "        # pnum_len`. However, if there are not enough bytes in the\n"
                        },
                        {
                            "line": 165,
                            "file": "quic_protection.ivy",
                            "instruction": "        # payload, we change it to `payld.end - sample`. Note,\n"
                        },
                        {
                            "line": 166,
                            "file": "quic_protection.ivy",
                            "instruction": "        # however, that we are using natural numbers, so if the\n"
                        },
                        {
                            "line": 167,
                            "file": "quic_protection.ivy",
                            "instruction": "        # position would be negative, it saturates to zero. This is\n"
                        },
                        {
                            "line": 168,
                            "file": "quic_protection.ivy",
                            "instruction": "        # consistent with the statement that you should never sample\n"
                        },
                        {
                            "line": 169,
                            "file": "quic_protection.ivy",
                            "instruction": "        # any bytes from the packet number itself. This leaves the\n"
                        },
                        {
                            "line": 170,
                            "file": "quic_protection.ivy",
                            "instruction": "        # possibility that there are not enough bytes to sample, that\n"
                        },
                        {
                            "line": 171,
                            "file": "quic_protection.ivy",
                            "instruction": "        # is, in the sample, there will be some trailing\n"
                        },
                        {
                            "line": 172,
                            "file": "quic_protection.ivy",
                            "instruction": "        # zeros. Nonetheless, the spec says that the sample size will\n"
                        },
                        {
                            "line": 173,
                            "file": "quic_protection.ivy",
                            "instruction": "        # never be larger than the smallest encrypted payload, so we\n"
                        },
                        {
                            "line": 174,
                            "file": "quic_protection.ivy",
                            "instruction": "        # should be OK.\n"
                        },
                        {
                            "line": 175,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 176,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pn_offset : stream_pos := 0;\n"
                        },
                        {
                            "line": 177,
                            "file": "quic_protection.ivy",
                            "instruction": "        if h.hdr_long {\n"
                        },
                        {
                            "line": 178,
                            "file": "quic_protection.ivy",
                            "instruction": "            pn_offset := hdr_len - pnum_pos;\n"
                        },
                        {
                            "line": 179,
                            "file": "quic_protection.ivy",
                            "instruction": "        } else {\n"
                        },
                        {
                            "line": 180,
                            "file": "quic_protection.ivy",
                            "instruction": "            pn_offset := 1 + 4;\n"
                        },
                        {
                            "line": 181,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 182,
                            "file": "quic_protection.ivy",
                            "instruction": "\t\n"
                        },
                        {
                            "line": 183,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample_pos : stream_pos :=  4 - pnum_len;  #- pnum_len;\n"
                        },
                        {
                            "line": 184,
                            "file": "quic_protection.ivy",
                            "instruction": "        var new_pyld := pyld_i;\n"
                        },
                        {
                            "line": 185,
                            "file": "quic_protection.ivy",
                            "instruction": "        if sample_pos + sample_size > pkt_init.end { #MC\n"
                        },
                        {
                            "line": 186,
                            "file": "quic_protection.ivy",
                            "instruction": "            var diff := (sample_pos + sample_size) - pyld_i.end;\n"
                        },
                        {
                            "line": 187,
                            "file": "quic_protection.ivy",
                            "instruction": "            var i : stream_pos := 0;\n"
                        },
                        {
                            "line": 188,
                            "file": "quic_protection.ivy",
                            "instruction": "            while i < diff {\n"
                        },
                        {
                            "line": 189,
                            "file": "quic_protection.ivy",
                            "instruction": "                new_pyld := new_pyld.append(0x00);\n"
                        },
                        {
                            "line": 190,
                            "file": "quic_protection.ivy",
                            "instruction": "                i := i + 1\n"
                        },
                        {
                            "line": 191,
                            "file": "quic_protection.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 192,
                            "file": "quic_protection.ivy",
                            "instruction": "            #sample_pos := pyld.end - sample_size #MC shift vs padding ? #[*1*]\n"
                        },
                        {
                            "line": 193,
                            "file": "quic_protection.ivy",
                            "instruction": "            #check with mcmillan vs maxime piraux\n"
                        },
                        {
                            "line": 194,
                            "file": "quic_protection.ivy",
                            "instruction": "            pyld_i := new_pyld;  #[*2*]\n"
                        },
                        {
                            "line": 195,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 196,
                            "file": "quic_protection.ivy",
                            "instruction": "\t\n"
                        },
                        {
                            "line": 197,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample := pyld_i.segment(sample_pos,sample_pos+sample_size); \n"
                        },
                        {
                            "line": 198,
                            "file": "quic_protection.ivy",
                            "instruction": "        var mask := stream_data.empty;\n"
                        },
                        {
                            "line": 199,
                            "file": "quic_protection.ivy",
                            "instruction": "        mask := tls.encrypt_cipher(c,level,mask.resize(5,0),sample,false);\n"
                        },
                        {
                            "line": 200,
                            "file": "quic_protection.ivy",
                            "instruction": "        var byte0_mask := bvand(mask.value(0), 0x0f if h.hdr_long else 0x1f);\n"
                        },
                        {
                            "line": 201,
                            "file": "quic_protection.ivy",
                            "instruction": "        hdr := hdr.set(0,byte_xor(pkt_init.value(0),byte0_mask));\n"
                        },
                        {
                            "line": 202,
                            "file": "quic_protection.ivy",
                            "instruction": "        pnum := stream_data_xor(pkt_init.segment(pnum_pos,pnum_pos+pnum_len),mask.segment(1,1+pnum_len));        \n"
                        },
                        {
                            "line": 203,
                            "file": "quic_protection.ivy",
                            "instruction": "        pkt_init := hdr.extend(pnum).extend(pyld_i);\n"
                        },
                        {
                            "line": 204,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 205,
                            "file": "quic_protection.ivy",
                            "instruction": "        # ----------------------------------------------------------\n"
                        },
                        {
                            "line": 206,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 207,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample_size_rtt : stream_pos := tls.iv_size(c,1);\n"
                        },
                        {
                            "line": 208,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pnum_pos_rtt := h_rtt.pkt_num_pos;\n"
                        },
                        {
                            "line": 209,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pnum_len_rtt := get_pnum_len_b(pkt_rtt); \n"
                        },
                        {
                            "line": 210,
                            "file": "quic_protection.ivy",
                            "instruction": "        var hdr_len_rtt := pnum_pos_rtt + pnum_len_rtt;\n"
                        },
                        {
                            "line": 211,
                            "file": "quic_protection.ivy",
                            "instruction": "        \n"
                        },
                        {
                            "line": 212,
                            "file": "quic_protection.ivy",
                            "instruction": "        # Tricky: before encrypting the payload, we need to adjust the length field\n"
                        },
                        {
                            "line": 213,
                            "file": "quic_protection.ivy",
                            "instruction": "        # so that it includes the AEAD checksum. Of course, we don't know what\n"
                        },
                        {
                            "line": 214,
                            "file": "quic_protection.ivy",
                            "instruction": "        # that actually is. Here we assume it is 16 bytes. Even worse, the length of\n"
                        },
                        {
                            "line": 215,
                            "file": "quic_protection.ivy",
                            "instruction": "        # the length field could grow. Here, we assume the length field format is\n"
                        },
                        {
                            "line": 216,
                            "file": "quic_protection.ivy",
                            "instruction": "        # always two bytes. \n"
                        },
                        {
                            "line": 217,
                            "file": "quic_protection.ivy",
                            "instruction": "        if h_rtt.hdr_long {\n"
                        },
                        {
                            "line": 218,
                            "file": "quic_protection.ivy",
                            "instruction": "            var new_len := to_var_int_16(h_rtt.payload_length+16);\n"
                        },
                        {
                            "line": 219,
                            "file": "quic_protection.ivy",
                            "instruction": "            pkt_rtt := pkt_rtt.set(pnum_pos_rtt-2,new_len.value(0));\n"
                        },
                        {
                            "line": 220,
                            "file": "quic_protection.ivy",
                            "instruction": "            pkt_rtt := pkt_rtt.set(pnum_pos_rtt-1,new_len.value(1));\n"
                        },
                        {
                            "line": 221,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 222,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 223,
                            "file": "quic_protection.ivy",
                            "instruction": "        var hdr_rtt  := pkt_rtt.segment(0,pnum_pos_rtt);\n"
                        },
                        {
                            "line": 224,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pnum_rtt := pkt_rtt.segment(pnum_pos_rtt,hdr_len_rtt);\n"
                        },
                        {
                            "line": 225,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pyld_rtt := pkt_rtt.segment(hdr_len_rtt,pkt_rtt.end);\n"
                        },
                        {
                            "line": 226,
                            "file": "quic_protection.ivy",
                            "instruction": "        var auth_rtt := pkt_rtt.segment(0,hdr_len_rtt);\n"
                        },
                        {
                            "line": 227,
                            "file": "quic_protection.ivy",
                            "instruction": "        var new_seq_rtt := get_pnum(pnum_rtt,0,pnum_len_rtt);\n"
                        },
                        {
                            "line": 228,
                            "file": "quic_protection.ivy",
                            "instruction": "        new_seq_rtt := correct_pnum(seq,new_seq_rtt,pnum_len_rtt);\n"
                        },
                        {
                            "line": 229,
                            "file": "quic_protection.ivy",
                            "instruction": "        pyld_rtt := tls.encrypt_aead(c,1,pyld_rtt,new_seq_rtt,auth_rtt);\n"
                        },
                        {
                            "line": 230,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 231,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 232,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 233,
                            "file": "quic_protection.ivy",
                            "instruction": "        # start l 3Computing the sample position is a bit tricky. First we\n"
                        },
                        {
                            "line": 234,
                            "file": "quic_protection.ivy",
                            "instruction": "        # assume the length of the pnum is 4, which means the offset\n"
                        },
                        {
                            "line": 235,
                            "file": "quic_protection.ivy",
                            "instruction": "        # of the sample withing the payload is `4 -\n"
                        },
                        {
                            "line": 236,
                            "file": "quic_protection.ivy",
                            "instruction": "        # pnum_len`. However, if there are not enough bytes in the\n"
                        },
                        {
                            "line": 237,
                            "file": "quic_protection.ivy",
                            "instruction": "        # payload, we change it to `payld.end - sample`. Note,\n"
                        },
                        {
                            "line": 238,
                            "file": "quic_protection.ivy",
                            "instruction": "        # however, that we are using natural numbers, so if the\n"
                        },
                        {
                            "line": 239,
                            "file": "quic_protection.ivy",
                            "instruction": "        # position would be negative, it saturates to zero. This is\n"
                        },
                        {
                            "line": 240,
                            "file": "quic_protection.ivy",
                            "instruction": "        # consistent with the statement that you should never sample\n"
                        },
                        {
                            "line": 241,
                            "file": "quic_protection.ivy",
                            "instruction": "        # any bytes from the packet number itself. This leaves the\n"
                        },
                        {
                            "line": 242,
                            "file": "quic_protection.ivy",
                            "instruction": "        # possibility that there are not enough bytes to sample, that\n"
                        },
                        {
                            "line": 243,
                            "file": "quic_protection.ivy",
                            "instruction": "        # is, in the sample, there will be some trailing\n"
                        },
                        {
                            "line": 244,
                            "file": "quic_protection.ivy",
                            "instruction": "        # zeros. Nonetheless, the spec says that the sample size will\n"
                        },
                        {
                            "line": 245,
                            "file": "quic_protection.ivy",
                            "instruction": "        # never be larger than the smallest encrypted payload, so we\n"
                        },
                        {
                            "line": 246,
                            "file": "quic_protection.ivy",
                            "instruction": "        # should be OK.\n"
                        },
                        {
                            "line": 247,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 248,
                            "file": "quic_protection.ivy",
                            "instruction": "        var pn_offset_rtt : stream_pos := 0;\n"
                        },
                        {
                            "line": 249,
                            "file": "quic_protection.ivy",
                            "instruction": "        if h_rtt.hdr_long {\n"
                        },
                        {
                            "line": 250,
                            "file": "quic_protection.ivy",
                            "instruction": "            pn_offset_rtt := hdr_len_rtt - pnum_pos_rtt;\n"
                        },
                        {
                            "line": 251,
                            "file": "quic_protection.ivy",
                            "instruction": "        } else {\n"
                        },
                        {
                            "line": 252,
                            "file": "quic_protection.ivy",
                            "instruction": "            pn_offset_rtt := 1 + 4;\n"
                        },
                        {
                            "line": 253,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 254,
                            "file": "quic_protection.ivy",
                            "instruction": "\t\n"
                        },
                        {
                            "line": 255,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample_pos_rtt : stream_pos :=  4 - pnum_len_rtt;  #- pnum_len;\n"
                        },
                        {
                            "line": 256,
                            "file": "quic_protection.ivy",
                            "instruction": "        var new_pyld_rtt := pyld_rtt;\n"
                        },
                        {
                            "line": 257,
                            "file": "quic_protection.ivy",
                            "instruction": "        if sample_pos_rtt + sample_size_rtt > pkt_rtt.end  { #MC CHECK\n"
                        },
                        {
                            "line": 258,
                            "file": "quic_protection.ivy",
                            "instruction": "            var diff := (sample_pos_rtt + sample_size_rtt) - pyld_rtt.end;\n"
                        },
                        {
                            "line": 259,
                            "file": "quic_protection.ivy",
                            "instruction": "            var i : stream_pos := 0;\n"
                        },
                        {
                            "line": 260,
                            "file": "quic_protection.ivy",
                            "instruction": "            while i < diff {\n"
                        },
                        {
                            "line": 261,
                            "file": "quic_protection.ivy",
                            "instruction": "                new_pyld_rtt := new_pyld_rtt.append(0x00);\n"
                        },
                        {
                            "line": 262,
                            "file": "quic_protection.ivy",
                            "instruction": "                i := i + 1\n"
                        },
                        {
                            "line": 263,
                            "file": "quic_protection.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 264,
                            "file": "quic_protection.ivy",
                            "instruction": "            #check with mcmillan vs maxime piraux\n"
                        },
                        {
                            "line": 265,
                            "file": "quic_protection.ivy",
                            "instruction": "            pyld_rtt := new_pyld_rtt;  #[*2*]\n"
                        },
                        {
                            "line": 266,
                            "file": "quic_protection.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 267,
                            "file": "quic_protection.ivy",
                            "instruction": "\t\n"
                        },
                        {
                            "line": 268,
                            "file": "quic_protection.ivy",
                            "instruction": "        var sample_rtt := pyld_rtt.segment(sample_pos_rtt,sample_pos_rtt+sample_size_rtt); \n"
                        },
                        {
                            "line": 269,
                            "file": "quic_protection.ivy",
                            "instruction": "        var mask_rtt := stream_data.empty;\n"
                        },
                        {
                            "line": 270,
                            "file": "quic_protection.ivy",
                            "instruction": "        mask_rtt := tls.encrypt_cipher(c,1,mask_rtt.resize(5,0),sample_rtt,false); # TODO\n"
                        },
                        {
                            "line": 271,
                            "file": "quic_protection.ivy",
                            "instruction": "        var byte0_mask_rtt := bvand(mask_rtt.value(0), 0x0f if h_rtt.hdr_long else 0x1f);\n"
                        },
                        {
                            "line": 272,
                            "file": "quic_protection.ivy",
                            "instruction": "        hdr_rtt := hdr_rtt.set(0,byte_xor(pkt_rtt.value(0),byte0_mask_rtt));\n"
                        },
                        {
                            "line": 273,
                            "file": "quic_protection.ivy",
                            "instruction": "        pnum_rtt := stream_data_xor(pkt_rtt.segment(pnum_pos_rtt,pnum_pos_rtt+pnum_len_rtt),mask_rtt.segment(1,1+pnum_len_rtt));        \n"
                        },
                        {
                            "line": 274,
                            "file": "quic_protection.ivy",
                            "instruction": "        pkt_rtt := hdr_rtt.extend(pnum_rtt).extend(pyld_rtt);\n"
                        },
                        {
                            "line": 275,
                            "file": "quic_protection.ivy",
                            "instruction": "        # ----------------------------------------------------------\n"
                        },
                        {
                            "line": 276,
                            "file": "quic_protection.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 277,
                            "file": "quic_protection.ivy",
                            "instruction": "        pkt := pkt_init.extend(pkt_rtt);\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "c",
                            "type": "tls_id"
                        },
                        {
                            "name": "seq",
                            "type": "pkt_num"
                        },
                        {
                            "name": "pkt",
                            "type": "stream_data"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 411,
                    "action_name": "prot.get_header_info",
                    "implementation": [
                        {
                            "line": 411,
                            "file": "quic_protection.ivy",
                            "instruction": "        h.hdr_long := bvand(0x80,pkt.value(0)) ~= 0;\n"
                        },
                        {
                            "line": 412,
                            "file": "quic_protection.ivy",
                            "instruction": "        h.hdr_type := bfe[0][6](pkt.value(0));\n"
                        },
                        {
                            "line": 413,
                            "file": "quic_protection.ivy",
                            "instruction": "        if h.hdr_long {\n"
                        },
                        {
                            "line": 414,
                            "file": "quic_protection.ivy",
                            "instruction": "            var dcil : stream_pos := bfe[0][7](pkt.value(5));\n"
                        },
                        {
                            "line": 415,
                            "file": "quic_protection.ivy",
                            "instruction": "            h.dcid := bytes_to_cid(pkt.segment(6,6+dcil));\n"
                        },
                        {
                            "line": 416,
                            "file": "quic_protection.ivy",
                            "instruction": "            var scil : stream_pos := bfe[0][7](pkt.value(6+dcil));\n"
                        },
                        {
                            "line": 417,
                            "file": "quic_protection.ivy",
                            "instruction": "            h.scid := bytes_to_cid(pkt.segment(7+dcil,7+dcil+scil));\n"
                        },
                        {
                            "line": 418,
                            "file": "quic_protection.ivy",
                            "instruction": "            if decrypt {\n"
                        },
                        {
                            "line": 419,
                            "file": "quic_protection.ivy",
                            "instruction": "                client_initial_scil := scil;\n"
                        },
                        {
                            "line": 420,
                            "file": "quic_protection.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 421,
                            "file": "quic_protection.ivy",
                            "instruction": "            var pos := 1 + 4 + 1 + dcil + 1 + scil; #7 + dcil + scil;\n"
                        },
                        {
                            "line": 422,
                            "file": "quic_protection.ivy",
                            "instruction": "            var tlen : stream_pos := 0;\n"
                        },
                        {
                            "line": 423,
                            "file": "quic_protection.ivy",
                            "instruction": "            var retry_token_len : stream_pos := 0;\n"
                        },
                        {
                            "line": 424,
                            "file": "quic_protection.ivy",
                            "instruction": "            if bvand(h.hdr_type,0x30) = 0x00 {\n"
                        },
                        {
                            "line": 425,
                            "file": "quic_protection.ivy",
                            "instruction": "                #Initial packet\n"
                        },
                        {
                            "line": 426,
                            "file": "quic_protection.ivy",
                            "instruction": "                tlen := get_var_int_len(pkt,pos);\n"
                        },
                        {
                            "line": 427,
                            "file": "quic_protection.ivy",
                            "instruction": "                retry_token_len := get_var_int(pkt,pos,tlen);\n"
                        },
                        {
                            "line": 428,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.token_length := retry_token_len;\n"
                        },
                        {
                            "line": 429,
                            "file": "quic_protection.ivy",
                            "instruction": "                pos := pos + tlen + retry_token_len;\n"
                        },
                        {
                            "line": 430,
                            "file": "quic_protection.ivy",
                            "instruction": "            } else {\n"
                        },
                        {
                            "line": 431,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.token_length := 0;\n"
                        },
                        {
                            "line": 432,
                            "file": "quic_protection.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 433,
                            "file": "quic_protection.ivy",
                            "instruction": "            var len := get_var_int_len(pkt,pos);\n"
                        },
                        {
                            "line": 434,
                            "file": "quic_protection.ivy",
                            "instruction": "            h.payload_length := get_var_int(pkt,pos,len);\n"
                        },
                        {
                            "line": 435,
                            "file": "quic_protection.ivy",
                            "instruction": "            h.payload_length_pos := pos;\n"
                        },
                        {
                            "line": 436,
                            "file": "quic_protection.ivy",
                            "instruction": "            h.pkt_num_pos := pos + len;\n"
                        },
                        {
                            "line": 437,
                            "file": "quic_protection.ivy",
                            "instruction": "        }\n"
                        },
                        {
                            "line": 438,
                            "file": "quic_protection.ivy",
                            "instruction": "        else {\n"
                        },
                        {
                            "line": 439,
                            "file": "quic_protection.ivy",
                            "instruction": "            #todo check if good for client test too\n"
                        },
                        {
                            "line": 440,
                            "file": "quic_protection.ivy",
                            "instruction": "            if ~decrypt {\n"
                        },
                        {
                            "line": 441,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.dcid := bytes_to_cid(pkt.segment(1,1+client_initial_scil));\n"
                        },
                        {
                            "line": 442,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.payload_length_pos := 1+client_initial_scil;\n"
                        },
                        {
                            "line": 443,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.pkt_num_pos := 1+client_initial_scil;\n"
                        },
                        {
                            "line": 444,
                            "file": "quic_protection.ivy",
                            "instruction": "            } else {\n"
                        },
                        {
                            "line": 445,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.dcid := bytes_to_cid(pkt.segment(1,1+8));\n"
                        },
                        {
                            "line": 446,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.payload_length_pos := 1+8;\n"
                        },
                        {
                            "line": 447,
                            "file": "quic_protection.ivy",
                            "instruction": "                h.pkt_num_pos := 1+8;\n"
                        },
                        {
                            "line": 448,
                            "file": "quic_protection.ivy",
                            "instruction": "            }\n"
                        },
                        {
                            "line": 449,
                            "file": "quic_protection.ivy",
                            "instruction": "        }\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "h",
                        "type": "header_info"
                    },
                    "action_parameters": [
                        {
                            "name": "pkt",
                            "type": "stream_data"
                        },
                        {
                            "name": "decrypt",
                            "type": "bool"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "prot.get_header_info",
                            "component": "quic_shim.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 369,
                    "action_name": "prot.get_level",
                    "implementation": [
                        {
                            "line": 368,
                            "file": "quic_protection.ivy",
                            "instruction": "        if bvand(pkt.value(0),0x80) ~= 0 {\n"
                        },
                        {
                            "line": 369,
                            "file": "quic_protection.ivy",
                            "instruction": "            var hdr_type := bvand(pkt.value(0),0x30); #  : type_bits :=  bfe[0][6](pkt.value(0)); # \n"
                        },
                        {
                            "line": 370,
                            "file": "quic_protection.ivy",
                            "instruction": "            #call show_htype(hdr_type);\n"
                        },
                        {
                            "line": 371,
                            "file": "quic_protection.ivy",
                            "instruction": "            if hdr_type = 0x00 | hdr_type = 0x30 { # | hdr_type = 0x20\n"
                        },
                        {
                            "line": 372,
                            "file": "quic_protection.ivy",
                            "instruction": "                level := 0;\n"
                        },
                        {
                            "line": 373,
                            "file": "quic_protection.ivy",
                            "instruction": "            } \n"
                        },
                        {
                            "line": 374,
                            "file": "quic_protection.ivy",
                            "instruction": "            else if hdr_type = 0x10 {\n"
                        },
                        {
                            "line": 375,
                            "file": "quic_protection.ivy",
                            "instruction": "                # 0RTT\n"
                        },
                        {
                            "line": 376,
                            "file": "quic_protection.ivy",
                            "instruction": "                level := 1;\n"
                        },
                        {
                            "line": 377,
                            "file": "quic_protection.ivy",
                            "instruction": "            } \n"
                        },
                        {
                            "line": 378,
                            "file": "quic_protection.ivy",
                            "instruction": "            else  { # if hdr_type = 0x20, TODO: other packet types\n"
                        },
                        {
                            "line": 379,
                            "file": "quic_protection.ivy",
                            "instruction": "                level := 2;\n"
                        },
                        {
                            "line": 380,
                            "file": "quic_protection.ivy",
                            "instruction": "            }\n"
                        },
                        {
                            "line": 381,
                            "file": "quic_protection.ivy",
                            "instruction": "        } else {\n"
                        },
                        {
                            "line": 382,
                            "file": "quic_protection.ivy",
                            "instruction": "            level := 3;\n"
                        },
                        {
                            "line": 383,
                            "file": "quic_protection.ivy",
                            "instruction": "        }\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "level",
                        "type": "tls.level"
                    },
                    "action_parameters": [
                        {
                            "name": "pkt",
                            "type": "stream_data"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 483,
                    "action_name": "prot.get_pnum",
                    "implementation": [
                        {
                            "line": 482,
                            "file": "quic_protection.ivy",
                            "instruction": "        var data := pkt.segment(pnum_pos,pnum_pos + pnum_len);\n"
                        },
                        {
                            "line": 483,
                            "file": "quic_protection.ivy",
                            "instruction": "        seq := 0;\n"
                        },
                        {
                            "line": 484,
                            "file": "quic_protection.ivy",
                            "instruction": "        var idx:stream_pos := 0;\n"
                        },
                        {
                            "line": 485,
                            "file": "quic_protection.ivy",
                            "instruction": "        while idx < data.end {\n"
                        },
                        {
                            "line": 486,
                            "file": "quic_protection.ivy",
                            "instruction": "            seq := 256 * seq + bfe[0][7](data.value(idx));\n"
                        },
                        {
                            "line": 487,
                            "file": "quic_protection.ivy",
                            "instruction": "            idx := idx.next;\n"
                        },
                        {
                            "line": 488,
                            "file": "quic_protection.ivy",
                            "instruction": "        }\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "seq",
                        "type": "pkt_num"
                    },
                    "action_parameters": [
                        {
                            "name": "pkt",
                            "type": "stream_data"
                        },
                        {
                            "name": "pnum_pos",
                            "type": "stream_pos"
                        },
                        {
                            "name": "pnum_len",
                            "type": "stream_pos"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 476,
                    "action_name": "prot.get_pnum_len",
                    "implementation": [
                        {
                            "line": 475,
                            "file": "quic_protection.ivy",
                            "instruction": "        var len_minus_one : stream_pos := bfe[0][1](pkt.value(0));\n"
                        },
                        {
                            "line": 476,
                            "file": "quic_protection.ivy",
                            "instruction": "        pnum_len := len_minus_one + 1;\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "pnum_len",
                        "type": "stream_pos"
                    },
                    "action_parameters": [
                        {
                            "name": "pkt",
                            "type": "stream_data"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 470,
                    "action_name": "prot.get_pnum_len_b",
                    "implementation": [
                        {
                            "line": 469,
                            "file": "quic_protection.ivy",
                            "instruction": "        <<<\n"
                        },
                        {
                            "line": 470,
                            "file": "quic_protection.ivy",
                            "instruction": "        pnum_len = (pkt[0] & 0x3) + 1;\n"
                        },
                        {
                            "line": 471,
                            "file": "quic_protection.ivy",
                            "instruction": "        >>>\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "pnum_len",
                        "type": "stream_pos"
                    },
                    "action_parameters": [
                        {
                            "name": "pkt",
                            "type": "stream_data"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 511,
                    "action_name": "prot.get_var_int",
                    "implementation": [
                        {
                            "line": 510,
                            "file": "quic_protection.ivy",
                            "instruction": "        var idx:stream_pos := pos;\n"
                        },
                        {
                            "line": 511,
                            "file": "quic_protection.ivy",
                            "instruction": "        val := 0;\n"
                        },
                        {
                            "line": 512,
                            "file": "quic_protection.ivy",
                            "instruction": "        while idx < pos + len {\n"
                        },
                        {
                            "line": 513,
                            "file": "quic_protection.ivy",
                            "instruction": "            var byte := pkt.value(idx);\n"
                        },
                        {
                            "line": 514,
                            "file": "quic_protection.ivy",
                            "instruction": "            if idx = pos {\n"
                        },
                        {
                            "line": 515,
                            "file": "quic_protection.ivy",
                            "instruction": "                byte := bvand(byte,0x3f);\n"
                        },
                        {
                            "line": 516,
                            "file": "quic_protection.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 517,
                            "file": "quic_protection.ivy",
                            "instruction": "            val := 256 * val + bfe[0][7](byte);\n"
                        },
                        {
                            "line": 518,
                            "file": "quic_protection.ivy",
                            "instruction": "            idx := idx.next;\n"
                        },
                        {
                            "line": 519,
                            "file": "quic_protection.ivy",
                            "instruction": "        }\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "val",
                        "type": "stream_pos"
                    },
                    "action_parameters": [
                        {
                            "name": "pkt",
                            "type": "stream_data"
                        },
                        {
                            "name": "pos",
                            "type": "stream_pos"
                        },
                        {
                            "name": "len",
                            "type": "stream_pos"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 495,
                    "action_name": "prot.get_var_int_len",
                    "implementation": [
                        {
                            "line": 494,
                            "file": "quic_protection.ivy",
                            "instruction": "        var code := bvand(0xc0,pkt.value(pos));\n"
                        },
                        {
                            "line": 495,
                            "file": "quic_protection.ivy",
                            "instruction": "        if code = 0 {\n"
                        },
                        {
                            "line": 496,
                            "file": "quic_protection.ivy",
                            "instruction": "            len := 1;\n"
                        },
                        {
                            "line": 497,
                            "file": "quic_protection.ivy",
                            "instruction": "        } else if code = 0x40 {\n"
                        },
                        {
                            "line": 498,
                            "file": "quic_protection.ivy",
                            "instruction": "            len := 2;\n"
                        },
                        {
                            "line": 499,
                            "file": "quic_protection.ivy",
                            "instruction": "        } else if code = 0x80 {\n"
                        },
                        {
                            "line": 500,
                            "file": "quic_protection.ivy",
                            "instruction": "            len := 4;\n"
                        },
                        {
                            "line": 501,
                            "file": "quic_protection.ivy",
                            "instruction": "        } else {\n"
                        },
                        {
                            "line": 502,
                            "file": "quic_protection.ivy",
                            "instruction": "            len := 8;\n"
                        },
                        {
                            "line": 503,
                            "file": "quic_protection.ivy",
                            "instruction": "        }\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "len",
                        "type": "stream_pos"
                    },
                    "action_parameters": [
                        {
                            "name": "pkt",
                            "type": "stream_data"
                        },
                        {
                            "name": "pos",
                            "type": "stream_pos"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 353,
                    "action_name": "prot.retry_integrity_tag",
                    "implementation": [
                        {
                            "line": 351,
                            "file": "quic_protection.ivy",
                            "instruction": "        # TODO useless, call directly  tls.compute_retry_integrity_tag\n"
                        },
                        {
                            "line": 352,
                            "file": "quic_protection.ivy",
                            "instruction": "        var rt := tls.compute_retry_integrity_tag(\n"
                        },
                        {
                            "line": 353,
                            "file": "quic_protection.ivy",
                            "instruction": "                                odcil, cid_to_us(odcid),\n"
                        },
                        {
                            "line": 354,
                            "file": "quic_protection.ivy",
                            "instruction": "                                pversion,\n"
                        },
                        {
                            "line": 355,
                            "file": "quic_protection.ivy",
                            "instruction": "                                dcil, cid_to_us(dcid),\n"
                        },
                        {
                            "line": 356,
                            "file": "quic_protection.ivy",
                            "instruction": "                                scil, cid_to_us(scid),\n"
                        },
                        {
                            "line": 357,
                            "file": "quic_protection.ivy",
                            "instruction": "                                token,seq,h,b);\n"
                        },
                        {
                            "line": 358,
                            "file": "quic_protection.ivy",
                            "instruction": "         cipher := rt;\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "odcil",
                            "type": "stream_pos"
                        },
                        {
                            "name": "odcid",
                            "type": "cid"
                        },
                        {
                            "name": "pversion",
                            "type": "version"
                        },
                        {
                            "name": "dcil",
                            "type": "stream_pos"
                        },
                        {
                            "name": "dcid",
                            "type": "cid"
                        },
                        {
                            "name": "scil",
                            "type": "stream_pos"
                        },
                        {
                            "name": "scid",
                            "type": "cid"
                        },
                        {
                            "name": "token",
                            "type": "stream_data"
                        },
                        {
                            "name": "seq",
                            "type": "pkt_num"
                        },
                        {
                            "name": "h",
                            "type": "stream_pos"
                        },
                        {
                            "name": "b",
                            "type": "bool"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "prot.retry_integrity_tag",
                            "component": "quic_packet_retry.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 565,
                    "action_name": "prot.show_header",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "h",
                            "type": "header_info"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 564,
                    "action_name": "prot.show_token_len",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "ver",
                            "type": "stream_pos"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 557,
                    "action_name": "prot.stream_data_xor",
                    "implementation": [
                        {
                            "line": 556,
                            "file": "quic_protection.ivy",
                            "instruction": "        var idx := x.begin;\n"
                        },
                        {
                            "line": 557,
                            "file": "quic_protection.ivy",
                            "instruction": "        while idx < x.end {\n"
                        },
                        {
                            "line": 558,
                            "file": "quic_protection.ivy",
                            "instruction": "            x := x.set(idx,byte_xor(x.value(idx),y.value(idx)));\n"
                        },
                        {
                            "line": 559,
                            "file": "quic_protection.ivy",
                            "instruction": "            idx := idx.next\n"
                        },
                        {
                            "line": 560,
                            "file": "quic_protection.ivy",
                            "instruction": "        }\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "x",
                        "type": "stream_data"
                    },
                    "action_parameters": [
                        {
                            "name": "x",
                            "type": "stream_data"
                        },
                        {
                            "name": "y",
                            "type": "stream_data"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 524,
                    "action_name": "prot.to_var_int_16",
                    "implementation": [
                        {
                            "line": 523,
                            "file": "quic_protection.ivy",
                            "instruction": "        <<<\n"
                        },
                        {
                            "line": 524,
                            "file": "quic_protection.ivy",
                            "instruction": "        bytes.push_back(0x40 | (val >> 8) & 0x3f);\n"
                        },
                        {
                            "line": 525,
                            "file": "quic_protection.ivy",
                            "instruction": "        bytes.push_back(val & 0xff);\n"
                        },
                        {
                            "line": 526,
                            "file": "quic_protection.ivy",
                            "instruction": "        >>>\n"
                        }
                    ],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": {
                        "name": "bytes",
                        "type": "stream_data"
                    },
                    "action_parameters": [
                        {
                            "name": "val",
                            "type": "stream_pos"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "functions": [],
            "relations": []
        }
    ],
    "quic_security.ivy": [
        {
            "actions": {
                "line": 359,
                "action_name": "set_encryption_level",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [
                        {
                            "line": 361,
                            "file": "quic_security.ivy",
                            "instruction": "    conn_enc_level(src,scid) := e;\n"
                        }
                    ],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "set_encryption_level",
                        "component": "quic_infer.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 252,
                "action_name": "show_test",
                "action_return": null,
                "exported": false,
                "action_parameters": null,
                "called_from": [],
                "events": true
            }
        },
        {
            "actions": {
                "line": 355,
                "action_name": "show_tls_keys_established_event",
                "action_return": null,
                "exported": false,
                "action_parameters": [
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    }
                ],
                "called_from": [
                    {
                        "caller_func": "show_tls_keys_established_event",
                        "component": "quic_security.ivy"
                    },
                    {
                        "caller_func": "on_pn_space_discarded",
                        "component": "quic_security.ivy"
                    }
                ],
                "events": true
            }
        },
        {
            "actions": {
                "line": 158,
                "action_name": "tls_client_0rtt_response",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [
                        {
                            "line": 751,
                            "file": "quic_shim.ivy",
                            "instruction": "    if nclients > 1 {\n"
                        },
                        {
                            "line": 752,
                            "file": "quic_shim.ivy",
                            "instruction": "        var cdx := clients.clients.begin;\n"
                        },
                        {
                            "line": 753,
                            "file": "quic_shim.ivy",
                            "instruction": "        while cdx < clients.clients.end {\n"
                        },
                        {
                            "line": 754,
                            "file": "quic_shim.ivy",
                            "instruction": "            var cc := clients.clients.value(cdx);\n"
                        },
                        {
                            "line": 755,
                            "file": "quic_shim.ivy",
                            "instruction": "            # call cc.set_ep(src);\n"
                        },
                        {
                            "line": 756,
                            "file": "quic_shim.ivy",
                            "instruction": "            # if some(cf:endpoint) cc *> cf {\n"
                        },
                        {
                            "line": 757,
                            "file": "quic_shim.ivy",
                            "instruction": "            #     cf.set_ep(src); # TODO: migration?\n"
                        },
                        {
                            "line": 758,
                            "file": "quic_shim.ivy",
                            "instruction": "            # }\n"
                        },
                        {
                            "line": 759,
                            "file": "quic_shim.ivy",
                            "instruction": "            cdx := cdx.next;\n"
                        },
                        {
                            "line": 760,
                            "file": "quic_shim.ivy",
                            "instruction": "        }\n"
                        },
                        {
                            "line": 761,
                            "file": "quic_shim.ivy",
                            "instruction": "    } else {\n"
                        },
                        {
                            "line": 762,
                            "file": "quic_shim.ivy",
                            "instruction": "        #client.set_ep(src); # TODO: migration?\n"
                        },
                        {
                            "line": 763,
                            "file": "quic_shim.ivy",
                            "instruction": "        #if ~endpoint_to_pid(src) = endpoint_id.mim {\n"
                        },
                        {
                            "line": 764,
                            "file": "quic_shim.ivy",
                            "instruction": "        call client.set_ep(src);\n"
                        },
                        {
                            "line": 765,
                            "file": "quic_shim.ivy",
                            "instruction": "        #}\n"
                        },
                        {
                            "line": 766,
                            "file": "quic_shim.ivy",
                            "instruction": "    }\n"
                        },
                        {
                            "line": 767,
                            "file": "quic_shim.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 768,
                            "file": "quic_shim.ivy",
                            "instruction": "\tvar ver := bytes_to_version(spkt.segment(1,5));\n"
                        },
                        {
                            "line": 769,
                            "file": "quic_shim.ivy",
                            "instruction": "    var lens := spkt.value(5);\n"
                        },
                        {
                            "line": 770,
                            "file": "quic_shim.ivy",
                            "instruction": "    var dcil : stream_pos := bfe[0][7](spkt.value(5));\n"
                        },
                        {
                            "line": 771,
                            "file": "quic_shim.ivy",
                            "instruction": "    var ikm := cid_to_bytes(0,1); # dcid\n"
                        },
                        {
                            "line": 772,
                            "file": "quic_shim.ivy",
                            "instruction": "\tif(~dcil = 0) {\n"
                        },
                        {
                            "line": 773,
                            "file": "quic_shim.ivy",
                            "instruction": "        client_initial_dcil := dcil;\n"
                        },
                        {
                            "line": 774,
                            "file": "quic_shim.ivy",
                            "instruction": "\t    ikm := spkt.segment(6,6+dcil); # dcid\n"
                        },
                        {
                            "line": 775,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 776,
                            "file": "quic_shim.ivy",
                            "instruction": "    var scil : stream_pos := bfe[0][7](spkt.value(6+dcil));\n"
                        },
                        {
                            "line": 777,
                            "file": "quic_shim.ivy",
                            "instruction": "    var skm := cid_to_bytes(0,1); # scid\n"
                        },
                        {
                            "line": 778,
                            "file": "quic_shim.ivy",
                            "instruction": "    if(~scil = 0) {\n"
                        },
                        {
                            "line": 779,
                            "file": "quic_shim.ivy",
                            "instruction": "        client_initial_scil := scil;\n"
                        },
                        {
                            "line": 780,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tclient_non_zero_scil := true;\t\n"
                        },
                        {
                            "line": 781,
                            "file": "quic_shim.ivy",
                            "instruction": "\t    skm := spkt.segment(6+dcil+1,6+dcil+1+scil); # scid\n"
                        },
                        {
                            "line": 782,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 783,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 784,
                            "file": "quic_shim.ivy",
                            "instruction": "    #  When an Initial packet is sent by a client that has not previously\n"
                        },
                        {
                            "line": 785,
                            "file": "quic_shim.ivy",
                            "instruction": "    #    received an Initial or Retry packet from the server, the client\n"
                        },
                        {
                            "line": 786,
                            "file": "quic_shim.ivy",
                            "instruction": "    #    populates the Destination Connection ID field with an unpredictable\n"
                        },
                        {
                            "line": 787,
                            "file": "quic_shim.ivy",
                            "instruction": "    #    value.  This Destination Connection ID MUST be at least 8 bytes in\n"
                        },
                        {
                            "line": 788,
                            "file": "quic_shim.ivy",
                            "instruction": "    #    length\n"
                        },
                        {
                            "line": 789,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 790,
                            "file": "quic_shim.ivy",
                            "instruction": "    require dcil >= 8;\n"
                        },
                        {
                            "line": 791,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 792,
                            "file": "quic_shim.ivy",
                            "instruction": "    client_initial_dcid := bytes_to_cid(ikm);\n"
                        },
                        {
                            "line": 793,
                            "file": "quic_shim.ivy",
                            "instruction": "    client_initial_scid := bytes_to_cid(skm); # skm\n"
                        },
                        {
                            "line": 794,
                            "file": "quic_shim.ivy",
                            "instruction": "    call export_length_cid_extension(scil,dcil);\n"
                        },
                        {
                            "line": 795,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 796,
                            "file": "quic_shim.ivy",
                            "instruction": "    var pkt := pkt_serdes_0rtt.from_bytes(spkt);\n"
                        },
                        {
                            "line": 797,
                            "file": "quic_shim.ivy",
                            "instruction": "    pkt.ptype := quic_packet_type.zero_rtt;\n"
                        },
                        {
                            "line": 798,
                            "file": "quic_shim.ivy",
                            "instruction": "    call recv_0rtt_pkt(src,dst,pkt);\n"
                        },
                        {
                            "line": 799,
                            "file": "quic_shim.ivy",
                            "instruction": "    call infer_tls_events_0rtt(src,dst,pkt);\n"
                        },
                        {
                            "line": 800,
                            "file": "quic_shim.ivy",
                            "instruction": "    #conn_enc_level(src,scid) := quic_packet_type.initial;\n"
                        },
                        {
                            "line": 801,
                            "file": "quic_shim.ivy",
                            "instruction": "    call packet_event_0rtt(src,dst,pkt);       # also an inferred event\n"
                        }
                    ],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "ppkt",
                        "type": "stream_data"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "client.set_ep",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "export_length_cid_extension",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "recv_0rtt_pkt",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "infer_tls_events_0rtt",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "packet_event_0rtt",
                        "component": "quic_shim.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 87,
                "action_name": "tls_client_initial_request",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [
                        {
                            "line": 380,
                            "file": "quic_shim.ivy",
                            "instruction": "    client_initial_scil := scid_size_pos(false);\n"
                        },
                        {
                            "line": 381,
                            "file": "quic_shim.ivy",
                            "instruction": "    var ikm := cid_to_bytes(nonce,dcid_size_cl(retry_response(the_cid))); \n"
                        },
                        {
                            "line": 382,
                            "file": "quic_shim.ivy",
                            "instruction": "    call show_set_initial_keys(ikm, id);\n"
                        },
                        {
                            "line": 383,
                            "file": "quic_shim.ivy",
                            "instruction": "    # call show_version(pversion);\n"
                        },
                        {
                            "line": 384,
                            "file": "quic_shim.ivy",
                            "instruction": "    var salt : stream_data := stream_data.empty;\n"
                        },
                        {
                            "line": 385,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 386,
                            "file": "quic_shim.ivy",
                            "instruction": "    #0xc3 0xee 0xf7 0x12 0xc7 0x2e 0xbb 0x5a 0x11 0xa7 0xd2 0x43 0x2b 0xb4 0x63 0x65 0xbe 0xf9 0xf5 0x02 QUIC-27\n"
                        },
                        {
                            "line": 387,
                            "file": "quic_shim.ivy",
                            "instruction": "\tif pversion = 0xfaceb002 | pversion = 0xff00001b  | pversion = 0xff00001c {\n"
                        },
                        {
                            "line": 388,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xc3);\n"
                        },
                        {
                            "line": 389,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xee);\n"
                        },
                        {
                            "line": 390,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xf7);\n"
                        },
                        {
                            "line": 391,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x12);\n"
                        },
                        {
                            "line": 392,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xc7);\n"
                        },
                        {
                            "line": 393,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x2e);\n"
                        },
                        {
                            "line": 394,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xbb);\n"
                        },
                        {
                            "line": 395,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x5a);\n"
                        },
                        {
                            "line": 396,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x11);\n"
                        },
                        {
                            "line": 397,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xa7);\n"
                        },
                        {
                            "line": 398,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xd2);\n"
                        },
                        {
                            "line": 399,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x43);\n"
                        },
                        {
                            "line": 400,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x2b);\n"
                        },
                        {
                            "line": 401,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xb4);\n"
                        },
                        {
                            "line": 402,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x63);\n"
                        },
                        {
                            "line": 403,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x65);\n"
                        },
                        {
                            "line": 404,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xbe);\n"
                        },
                        {
                            "line": 405,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xf9);\n"
                        },
                        {
                            "line": 406,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xf5);\n"
                        },
                        {
                            "line": 407,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x02);\n"
                        },
                        {
                            "line": 408,
                            "file": "quic_shim.ivy",
                            "instruction": "\t}\n"
                        },
                        {
                            "line": 409,
                            "file": "quic_shim.ivy",
                            "instruction": "    #0xaf bf ec 28 99 93 d2 4c 9e 97 86 f1 9c 61 11 e0 43 90 a8 99 QUIC-29\n"
                        },
                        {
                            "line": 410,
                            "file": "quic_shim.ivy",
                            "instruction": "\telse if pversion = 0xff00001d {\n"
                        },
                        {
                            "line": 411,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xaf);\n"
                        },
                        {
                            "line": 412,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xbf);\n"
                        },
                        {
                            "line": 413,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xec);\n"
                        },
                        {
                            "line": 414,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x28);\n"
                        },
                        {
                            "line": 415,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x99);\n"
                        },
                        {
                            "line": 416,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x93);\n"
                        },
                        {
                            "line": 417,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xd2);\n"
                        },
                        {
                            "line": 418,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x4c);\n"
                        },
                        {
                            "line": 419,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x9e);\n"
                        },
                        {
                            "line": 420,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x97);\n"
                        },
                        {
                            "line": 421,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x86);\n"
                        },
                        {
                            "line": 422,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xf1);\n"
                        },
                        {
                            "line": 423,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x9c);\n"
                        },
                        {
                            "line": 424,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x61);\n"
                        },
                        {
                            "line": 425,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x11);\n"
                        },
                        {
                            "line": 426,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xe0);\n"
                        },
                        {
                            "line": 427,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x43);\n"
                        },
                        {
                            "line": 428,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x90);\n"
                        },
                        {
                            "line": 429,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xa8);\n"
                        },
                        {
                            "line": 430,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x99);\n"
                        },
                        {
                            "line": 431,
                            "file": "quic_shim.ivy",
                            "instruction": "\t}\n"
                        },
                        {
                            "line": 432,
                            "file": "quic_shim.ivy",
                            "instruction": "    # 0x38 0x76 0x2c 0xf7 0xf5 0x59 0x34 0xb3 0x4d 0x17 0x9a 0xe6 0xa4 0xc8 0x0c 0xad 0xcc 0xbb 0x7f 0x0a\n"
                        },
                        {
                            "line": 433,
                            "file": "quic_shim.ivy",
                            "instruction": "    else if pversion = 0x00000001 | pversion = 0xff000022 {\n"
                        },
                        {
                            "line": 434,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x38);\n"
                        },
                        {
                            "line": 435,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x76);\n"
                        },
                        {
                            "line": 436,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x2c);\n"
                        },
                        {
                            "line": 437,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xf7);\n"
                        },
                        {
                            "line": 438,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xf5);\n"
                        },
                        {
                            "line": 439,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x59);\n"
                        },
                        {
                            "line": 440,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x34);\n"
                        },
                        {
                            "line": 441,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xb3);\n"
                        },
                        {
                            "line": 442,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x4d);\n"
                        },
                        {
                            "line": 443,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x17);\n"
                        },
                        {
                            "line": 444,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x9a);\n"
                        },
                        {
                            "line": 445,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xe6);\n"
                        },
                        {
                            "line": 446,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xa4);\n"
                        },
                        {
                            "line": 447,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xc8);\n"
                        },
                        {
                            "line": 448,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x0c);\n"
                        },
                        {
                            "line": 449,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xad);\n"
                        },
                        {
                            "line": 450,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xcc);\n"
                        },
                        {
                            "line": 451,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xbb);\n"
                        },
                        {
                            "line": 452,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x7f);\n"
                        },
                        {
                            "line": 453,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x0a);\n"
                        },
                        {
                            "line": 454,
                            "file": "quic_shim.ivy",
                            "instruction": "\t};\n"
                        },
                        {
                            "line": 455,
                            "file": "quic_shim.ivy",
                            "instruction": "    call tls_api.upper.set_initial_keys(id,salt,ikm); ## WTF TODO error id tls_api.upper.set_initial_keys(id,salt,ikm);\n"
                        }
                    ],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "nonce",
                        "type": "cid"
                    },
                    {
                        "name": "pversion",
                        "type": "version"
                    },
                    {
                        "name": "id",
                        "type": "tls_api.id"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "tls_client_initial_request",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "tls_client_initial_request",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "tls_client_initial_request",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "tls_client_initial_request",
                        "component": "quic_packet.ivy"
                    },
                    {
                        "caller_func": "show_set_initial_keys",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "tls_api.upper.set_initial_keys",
                        "component": "quic_shim.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 100,
                "action_name": "tls_client_initial_response",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [
                        {
                            "line": 474,
                            "file": "quic_shim.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 475,
                            "file": "quic_shim.ivy",
                            "instruction": "    if nclients > 1 {\n"
                        },
                        {
                            "line": 476,
                            "file": "quic_shim.ivy",
                            "instruction": "        var cdx := clients.clients.begin;\n"
                        },
                        {
                            "line": 477,
                            "file": "quic_shim.ivy",
                            "instruction": "        while cdx < clients.clients.end {\n"
                        },
                        {
                            "line": 478,
                            "file": "quic_shim.ivy",
                            "instruction": "            var cc := clients.clients.value(cdx);\n"
                        },
                        {
                            "line": 479,
                            "file": "quic_shim.ivy",
                            "instruction": "            # call cc.set_ep(src);\n"
                        },
                        {
                            "line": 480,
                            "file": "quic_shim.ivy",
                            "instruction": "            # cc.ep := src;\n"
                        },
                        {
                            "line": 481,
                            "file": "quic_shim.ivy",
                            "instruction": "            # if some(cf:endpoint) cc *> cf {\n"
                        },
                        {
                            "line": 482,
                            "file": "quic_shim.ivy",
                            "instruction": "            #     cf.set_ep(src); # TODO: migration?\n"
                        },
                        {
                            "line": 483,
                            "file": "quic_shim.ivy",
                            "instruction": "            # }\n"
                        },
                        {
                            "line": 484,
                            "file": "quic_shim.ivy",
                            "instruction": "            cdx := cdx.next;\n"
                        },
                        {
                            "line": 485,
                            "file": "quic_shim.ivy",
                            "instruction": "        }\n"
                        },
                        {
                            "line": 486,
                            "file": "quic_shim.ivy",
                            "instruction": "    } else {\n"
                        },
                        {
                            "line": 487,
                            "file": "quic_shim.ivy",
                            "instruction": "        # client.set_ep(src); # TODO: migration?\n"
                        },
                        {
                            "line": 488,
                            "file": "quic_shim.ivy",
                            "instruction": "        #if ~endpoint_to_pid(src) = endpoint_id.mim {\n"
                        },
                        {
                            "line": 489,
                            "file": "quic_shim.ivy",
                            "instruction": "        call client.set_ep(src);\n"
                        },
                        {
                            "line": 490,
                            "file": "quic_shim.ivy",
                            "instruction": "        #client.ep.interface := ip.lo;\n"
                        },
                        {
                            "line": 491,
                            "file": "quic_shim.ivy",
                            "instruction": "        #}\n"
                        },
                        {
                            "line": 492,
                            "file": "quic_shim.ivy",
                            "instruction": "    }\n"
                        },
                        {
                            "line": 493,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 494,
                            "file": "quic_shim.ivy",
                            "instruction": "    # call show_kk;\n"
                        },
                        {
                            "line": 495,
                            "file": "quic_shim.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 496,
                            "file": "quic_shim.ivy",
                            "instruction": "\tvar version := bytes_to_version(spkt.segment(1,5));\n"
                        },
                        {
                            "line": 497,
                            "file": "quic_shim.ivy",
                            "instruction": "    var lens := spkt.value(5);\n"
                        },
                        {
                            "line": 498,
                            "file": "quic_shim.ivy",
                            "instruction": "    var dcil : stream_pos := bfe[0][7](spkt.value(5));\n"
                        },
                        {
                            "line": 499,
                            "file": "quic_shim.ivy",
                            "instruction": "    var ikm := cid_to_bytes(0,1); # dcid\n"
                        },
                        {
                            "line": 500,
                            "file": "quic_shim.ivy",
                            "instruction": "\tif(~dcil = 0) {\n"
                        },
                        {
                            "line": 501,
                            "file": "quic_shim.ivy",
                            "instruction": "        client_initial_dcil := dcil;\n"
                        },
                        {
                            "line": 502,
                            "file": "quic_shim.ivy",
                            "instruction": "\t    ikm := spkt.segment(6,6+dcil); # dcid\n"
                        },
                        {
                            "line": 503,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 504,
                            "file": "quic_shim.ivy",
                            "instruction": "    var dcid : cid := bytes_to_cid(ikm);\n"
                        },
                        {
                            "line": 505,
                            "file": "quic_shim.ivy",
                            "instruction": "    var scil : stream_pos := bfe[0][7](spkt.value(6+dcil));\n"
                        },
                        {
                            "line": 506,
                            "file": "quic_shim.ivy",
                            "instruction": "    var skm := cid_to_bytes(0,1); # scid\n"
                        },
                        {
                            "line": 507,
                            "file": "quic_shim.ivy",
                            "instruction": "    if(~scil = 0) {\n"
                        },
                        {
                            "line": 508,
                            "file": "quic_shim.ivy",
                            "instruction": "        client_initial_scil := scil;\n"
                        },
                        {
                            "line": 509,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tclient_non_zero_scil := true;\t\n"
                        },
                        {
                            "line": 510,
                            "file": "quic_shim.ivy",
                            "instruction": "\t    skm := spkt.segment(6+dcil+1,6+dcil+1+scil); # scid\n"
                        },
                        {
                            "line": 511,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 512,
                            "file": "quic_shim.ivy",
                            "instruction": "    var scid : cid := bytes_to_cid(skm);\n"
                        },
                        {
                            "line": 513,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 514,
                            "file": "quic_shim.ivy",
                            "instruction": "    if scil = 0 | dcil = 0 {\n"
                        },
                        {
                            "line": 515,
                            "file": "quic_shim.ivy",
                            "instruction": "        issued_zero_length_cid := true;\n"
                        },
                        {
                            "line": 516,
                            "file": "quic_shim.ivy",
                            "instruction": "    }\n"
                        },
                        {
                            "line": 517,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 518,
                            "file": "quic_shim.ivy",
                            "instruction": "    #  When an Initial packet is sent by a client that has not previously\n"
                        },
                        {
                            "line": 519,
                            "file": "quic_shim.ivy",
                            "instruction": "    #    received an Initial or Retry packet from the server, the client\n"
                        },
                        {
                            "line": 520,
                            "file": "quic_shim.ivy",
                            "instruction": "    #    populates the Destination Connection ID field with an unpredictable\n"
                        },
                        {
                            "line": 521,
                            "file": "quic_shim.ivy",
                            "instruction": "    #    value.  This Destination Connection ID MUST be at least 8 bytes in\n"
                        },
                        {
                            "line": 522,
                            "file": "quic_shim.ivy",
                            "instruction": "    #    length\n"
                        },
                        {
                            "line": 523,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 524,
                            "file": "quic_shim.ivy",
                            "instruction": "    require dcil >= 8;\n"
                        },
                        {
                            "line": 525,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 526,
                            "file": "quic_shim.ivy",
                            "instruction": "    if ~retry_sent(dcid) {\n"
                        },
                        {
                            "line": 527,
                            "file": "quic_shim.ivy",
                            "instruction": "        client_initial_dcid := dcid;\n"
                        },
                        {
                            "line": 528,
                            "file": "quic_shim.ivy",
                            "instruction": "        client_initial_scid := scid; # skm\n"
                        },
                        {
                            "line": 529,
                            "file": "quic_shim.ivy",
                            "instruction": "        call export_length_cid_extension(dcil,scil);\n"
                        },
                        {
                            "line": 530,
                            "file": "quic_shim.ivy",
                            "instruction": "        call export_length_cid(dcil,scil);\n"
                        },
                        {
                            "line": 531,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 532,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 533,
                            "file": "quic_shim.ivy",
                            "instruction": "    if ~tp_client_set | negocation_of_version(src) {\n"
                        },
                        {
                            "line": 534,
                            "file": "quic_shim.ivy",
                            "instruction": "        var extns := tls_extensions.empty;\n"
                        },
                        {
                            "line": 535,
                            "file": "quic_shim.ivy",
                            "instruction": "        extns := extns.append(make_transport_parameters);\n"
                        },
                        {
                            "line": 536,
                            "file": "quic_shim.ivy",
                            "instruction": "        if zero_rtt_client_test {\n"
                        },
                        {
                            "line": 537,
                            "file": "quic_shim.ivy",
                            "instruction": "            call tls_api.upper.create_0rtt_client(0,true,extns);  \n"
                        },
                        {
                            "line": 538,
                            "file": "quic_shim.ivy",
                            "instruction": "        } else {\n"
                        },
                        {
                            "line": 539,
                            "file": "quic_shim.ivy",
                            "instruction": "            call tls_api.upper.create(0,true,extns);  \n"
                        },
                        {
                            "line": 540,
                            "file": "quic_shim.ivy",
                            "instruction": "        }\n"
                        },
                        {
                            "line": 541,
                            "file": "quic_shim.ivy",
                            "instruction": "        # 'true' means this instance of tls is a server\n"
                        },
                        {
                            "line": 542,
                            "file": "quic_shim.ivy",
                            "instruction": "        tp_client_set := true;\n"
                        },
                        {
                            "line": 543,
                            "file": "quic_shim.ivy",
                            "instruction": "\t}; \n"
                        },
                        {
                            "line": 544,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 545,
                            "file": "quic_shim.ivy",
                            "instruction": "    client_initial_version := version;\n"
                        },
                        {
                            "line": 546,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 547,
                            "file": "quic_shim.ivy",
                            "instruction": "    if client_initial_version ~= initial_version & client_initial_version ~= 0xfaceb002 { #initial_version todo\n"
                        },
                        {
                            "line": 548,
                            "file": "quic_shim.ivy",
                            "instruction": "        negocation_of_version(src) := true;\n"
                        },
                        {
                            "line": 549,
                            "file": "quic_shim.ivy",
                            "instruction": "    } \n"
                        },
                        {
                            "line": 550,
                            "file": "quic_shim.ivy",
                            "instruction": "    else if (~initial_keys_set(dcid) & retry_client_test -> retry_sent(dcid)) | negocation_of_version(src) { \n"
                        },
                        {
                            "line": 551,
                            "file": "quic_shim.ivy",
                            "instruction": "        call export_length_cid_extension(dcil,scil);\n"
                        },
                        {
                            "line": 552,
                            "file": "quic_shim.ivy",
                            "instruction": "        negocation_of_version(src) := false;\n"
                        },
                        {
                            "line": 553,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 554,
                            "file": "quic_shim.ivy",
                            "instruction": "        var salt : stream_data := stream_data.empty;\n"
                        },
                        {
                            "line": 555,
                            "file": "quic_shim.ivy",
                            "instruction": "        \n"
                        },
                        {
                            "line": 556,
                            "file": "quic_shim.ivy",
                            "instruction": "        #0xc3 ee f7 12 c7 2e bb 5a 11 a7 d2 43 2b b4 63 65 be f9 f5 02 QUIC-27\n"
                        },
                        {
                            "line": 557,
                            "file": "quic_shim.ivy",
                            "instruction": "\t    if client_initial_version = 0xfaceb002  \n"
                        },
                        {
                            "line": 558,
                            "file": "quic_shim.ivy",
                            "instruction": "         | client_initial_version = 0xff00001b \n"
                        },
                        {
                            "line": 559,
                            "file": "quic_shim.ivy",
                            "instruction": "         | client_initial_version = 0xff00001c {\n"
                        },
                        {
                            "line": 560,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xc3);\n"
                        },
                        {
                            "line": 561,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xee);\n"
                        },
                        {
                            "line": 562,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xf7);\n"
                        },
                        {
                            "line": 563,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x12);\n"
                        },
                        {
                            "line": 564,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xc7);\n"
                        },
                        {
                            "line": 565,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x2e);\n"
                        },
                        {
                            "line": 566,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xbb);\n"
                        },
                        {
                            "line": 567,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x5a);\n"
                        },
                        {
                            "line": 568,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x11);\n"
                        },
                        {
                            "line": 569,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xa7);\n"
                        },
                        {
                            "line": 570,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xd2);\n"
                        },
                        {
                            "line": 571,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x43);\n"
                        },
                        {
                            "line": 572,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x2b);\n"
                        },
                        {
                            "line": 573,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xb4);\n"
                        },
                        {
                            "line": 574,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x63);\n"
                        },
                        {
                            "line": 575,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x65);\n"
                        },
                        {
                            "line": 576,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xbe);\n"
                        },
                        {
                            "line": 577,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xf9);\n"
                        },
                        {
                            "line": 578,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xf5);\n"
                        },
                        {
                            "line": 579,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x02);\n"
                        },
                        {
                            "line": 580,
                            "file": "quic_shim.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 581,
                            "file": "quic_shim.ivy",
                            "instruction": "        #0xaf bf ec 28 99 93 d2 4c 9e 97 86 f1 9c 61 11 e0 43 90 a8 99 QUIC-29\n"
                        },
                        {
                            "line": 582,
                            "file": "quic_shim.ivy",
                            "instruction": "        if client_initial_version = 0xff00001d  {\n"
                        },
                        {
                            "line": 583,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xaf);\n"
                        },
                        {
                            "line": 584,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xbf);\n"
                        },
                        {
                            "line": 585,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xec);\n"
                        },
                        {
                            "line": 586,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x28);\n"
                        },
                        {
                            "line": 587,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x99);\n"
                        },
                        {
                            "line": 588,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x93);\n"
                        },
                        {
                            "line": 589,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xd2);\n"
                        },
                        {
                            "line": 590,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x4c);\n"
                        },
                        {
                            "line": 591,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x9e);\n"
                        },
                        {
                            "line": 592,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x97);\n"
                        },
                        {
                            "line": 593,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x86);\n"
                        },
                        {
                            "line": 594,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xf1);\n"
                        },
                        {
                            "line": 595,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x9c);\n"
                        },
                        {
                            "line": 596,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x61);\n"
                        },
                        {
                            "line": 597,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x11);\n"
                        },
                        {
                            "line": 598,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xe0);\n"
                        },
                        {
                            "line": 599,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x43);\n"
                        },
                        {
                            "line": 600,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x90);\n"
                        },
                        {
                            "line": 601,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xa8);\n"
                        },
                        {
                            "line": 602,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x99);\n"
                        },
                        {
                            "line": 603,
                            "file": "quic_shim.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 604,
                            "file": "quic_shim.ivy",
                            "instruction": "        if client_initial_version = 0x00000001 | client_initial_version = 0xff000022 {\n"
                        },
                        {
                            "line": 605,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x38);\n"
                        },
                        {
                            "line": 606,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x76);\n"
                        },
                        {
                            "line": 607,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x2c);\n"
                        },
                        {
                            "line": 608,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xf7);\n"
                        },
                        {
                            "line": 609,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xf5);\n"
                        },
                        {
                            "line": 610,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x59);\n"
                        },
                        {
                            "line": 611,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x34);\n"
                        },
                        {
                            "line": 612,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xb3);\n"
                        },
                        {
                            "line": 613,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x4d);\n"
                        },
                        {
                            "line": 614,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x17);\n"
                        },
                        {
                            "line": 615,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x9a);\n"
                        },
                        {
                            "line": 616,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xe6);\n"
                        },
                        {
                            "line": 617,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xa4);\n"
                        },
                        {
                            "line": 618,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xc8);\n"
                        },
                        {
                            "line": 619,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x0c);\n"
                        },
                        {
                            "line": 620,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xad);\n"
                        },
                        {
                            "line": 621,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xcc);\n"
                        },
                        {
                            "line": 622,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xbb);\n"
                        },
                        {
                            "line": 623,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x7f);\n"
                        },
                        {
                            "line": 624,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x0a);\n"
                        },
                        {
                            "line": 625,
                            "file": "quic_shim.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 626,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 627,
                            "file": "quic_shim.ivy",
                            "instruction": "        call show_set_initial_keys(ikm, 0);\n"
                        },
                        {
                            "line": 628,
                            "file": "quic_shim.ivy",
                            "instruction": "        call tls_api.upper.set_initial_keys(0,salt,ikm);\n"
                        },
                        {
                            "line": 629,
                            "file": "quic_shim.ivy",
                            "instruction": "        \n"
                        },
                        {
                            "line": 630,
                            "file": "quic_shim.ivy",
                            "instruction": "        initial_keys_set(dcid) := true;\n"
                        },
                        {
                            "line": 631,
                            "file": "quic_shim.ivy",
                            "instruction": "    }\n"
                        }
                    ],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "ppkt",
                        "type": "stream_data"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "client.set_ep",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "export_length_cid_extension",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "export_length_cid",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "tls_api.upper.create_0rtt_client",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "tls_api.upper.create",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "export_length_cid_extension",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "show_set_initial_keys",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "tls_api.upper.set_initial_keys",
                        "component": "quic_shim.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 144,
                "action_name": "tls_client_retry_response",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [
                        {
                            "line": 730,
                            "file": "quic_shim.ivy",
                            "instruction": "    header_retry := bfe[0][7](spkt.value(0));\n"
                        },
                        {
                            "line": 731,
                            "file": "quic_shim.ivy",
                            "instruction": "    var dcil : stream_pos := bfe[0][7](spkt.value(5));\n"
                        },
                        {
                            "line": 732,
                            "file": "quic_shim.ivy",
                            "instruction": "    var dcid := prot.bytes_to_cid(spkt.segment(6,6+dcil));\n"
                        },
                        {
                            "line": 733,
                            "file": "quic_shim.ivy",
                            "instruction": "    var scil : stream_pos := bfe[0][7](spkt.value(6+dcil));\n"
                        },
                        {
                            "line": 734,
                            "file": "quic_shim.ivy",
                            "instruction": "    var scid := prot.bytes_to_cid(spkt.segment(7+dcil,7+dcil+scil));\n"
                        },
                        {
                            "line": 735,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 736,
                            "file": "quic_shim.ivy",
                            "instruction": "    call export_length_cid_extension(scil,dcil);\n"
                        },
                        {
                            "line": 737,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 738,
                            "file": "quic_shim.ivy",
                            "instruction": "    var pkt := pkt_serdes_retry.from_bytes(spkt);\n"
                        },
                        {
                            "line": 739,
                            "file": "quic_shim.ivy",
                            "instruction": "    pkt.ptype := quic_packet_type.retry;\n"
                        },
                        {
                            "line": 740,
                            "file": "quic_shim.ivy",
                            "instruction": "    call recv_retry_pkt(src,dst,pkt);\n"
                        },
                        {
                            "line": 741,
                            "file": "quic_shim.ivy",
                            "instruction": "    call infer_tls_events_retry(src,dst,pkt);\n"
                        },
                        {
                            "line": 742,
                            "file": "quic_shim.ivy",
                            "instruction": "    retry_token(dcid) := pkt.token;\n"
                        },
                        {
                            "line": 743,
                            "file": "quic_shim.ivy",
                            "instruction": "    if pkt.token.end = 0 {\n"
                        },
                        {
                            "line": 744,
                            "file": "quic_shim.ivy",
                            "instruction": "        zero_length_token := true;\n"
                        },
                        {
                            "line": 745,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 746,
                            "file": "quic_shim.ivy",
                            "instruction": "    retry_response(dcid) := true;\n"
                        },
                        {
                            "line": 747,
                            "file": "quic_shim.ivy",
                            "instruction": "    call packet_event_retry(src,dst,pkt);       # also an inferred event\n"
                        }
                    ],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "ppkt",
                        "type": "stream_data"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "export_length_cid_extension",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "recv_retry_pkt",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "infer_tls_events_retry",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "packet_event_retry",
                        "component": "quic_shim.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 131,
                "action_name": "tls_client_version_response",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [
                        {
                            "line": 666,
                            "file": "quic_shim.ivy",
                            "instruction": "    var tls_id := src_tls_id(src);\n"
                        },
                        {
                            "line": 667,
                            "file": "quic_shim.ivy",
                            "instruction": "    var dcil : stream_pos := bfe[0][7](spkt.value(5));\n"
                        },
                        {
                            "line": 668,
                            "file": "quic_shim.ivy",
                            "instruction": "    var dcid := prot.bytes_to_cid(spkt.segment(6,6+dcil));\n"
                        },
                        {
                            "line": 669,
                            "file": "quic_shim.ivy",
                            "instruction": "    var scil : stream_pos := bfe[0][7](spkt.value(6+dcil));\n"
                        },
                        {
                            "line": 670,
                            "file": "quic_shim.ivy",
                            "instruction": "    var scid := prot.bytes_to_cid(spkt.segment(7+dcil,7+dcil+scil));\n"
                        },
                        {
                            "line": 671,
                            "file": "quic_shim.ivy",
                            "instruction": "    var versions_vn := spkt.segment(3 +  4  + dcil + scil,spkt.end);\n"
                        },
                        {
                            "line": 672,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 673,
                            "file": "quic_shim.ivy",
                            "instruction": "    call export_length_cid_extension(dcil,scil);\n"
                        },
                        {
                            "line": 674,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 675,
                            "file": "quic_shim.ivy",
                            "instruction": "    if version_not_found(src) {\n"
                        },
                        {
                            "line": 676,
                            "file": "quic_shim.ivy",
                            "instruction": "        versions_vn := spkt.segment(0,spkt.end);\n"
                        },
                        {
                            "line": 677,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 678,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 679,
                            "file": "quic_shim.ivy",
                            "instruction": "    var sv := versions.empty;\n"
                        },
                        {
                            "line": 680,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 681,
                            "file": "quic_shim.ivy",
                            "instruction": "    var idx := versions_vn.begin;\n"
                        },
                        {
                            "line": 682,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 683,
                            "file": "quic_shim.ivy",
                            "instruction": "    while (~versions_vn.value(idx) =  0xff | ~versions_vn.value(idx) =  0x00) &  version_not_found(src) {\n"
                        },
                        {
                            "line": 684,
                            "file": "quic_shim.ivy",
                            "instruction": "        idx := idx.next;\n"
                        },
                        {
                            "line": 685,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 686,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 687,
                            "file": "quic_shim.ivy",
                            "instruction": "    while idx < versions_vn.end {\n"
                        },
                        {
                            "line": 688,
                            "file": "quic_shim.ivy",
                            "instruction": "        var i : stream_pos := 0;\n"
                        },
                        {
                            "line": 689,
                            "file": "quic_shim.ivy",
                            "instruction": "        var v := stream_data.empty;\n"
                        },
                        {
                            "line": 690,
                            "file": "quic_shim.ivy",
                            "instruction": "        while i < 4 {\n"
                        },
                        {
                            "line": 691,
                            "file": "quic_shim.ivy",
                            "instruction": "            v := v.append(versions_vn.value(idx));\n"
                        },
                        {
                            "line": 692,
                            "file": "quic_shim.ivy",
                            "instruction": "            i := i + 1;\n"
                        },
                        {
                            "line": 693,
                            "file": "quic_shim.ivy",
                            "instruction": "            idx := idx.next;\n"
                        },
                        {
                            "line": 694,
                            "file": "quic_shim.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 695,
                            "file": "quic_shim.ivy",
                            "instruction": "        sv := sv.append(v);\n"
                        },
                        {
                            "line": 696,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 697,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 698,
                            "file": "quic_shim.ivy",
                            "instruction": "    var idxx : index := 0;\n"
                        },
                        {
                            "line": 699,
                            "file": "quic_shim.ivy",
                            "instruction": "    var idxx_bv : index := 0;\n"
                        },
                        {
                            "line": 700,
                            "file": "quic_shim.ivy",
                            "instruction": "    while idxx < sv.end {\n"
                        },
                        {
                            "line": 701,
                            "file": "quic_shim.ivy",
                            "instruction": "        var ii : index := 0 ;\n"
                        },
                        {
                            "line": 702,
                            "file": "quic_shim.ivy",
                            "instruction": "        while ii < supported_versions.end {\n"
                        },
                        {
                            "line": 703,
                            "file": "quic_shim.ivy",
                            "instruction": "            if sv.value(idxx) = supported_versions.value(ii) {\n"
                        },
                        {
                            "line": 704,
                            "file": "quic_shim.ivy",
                            "instruction": "                #call recv_vn_packet_nn(src,dst,spkt);\n"
                        },
                        {
                            "line": 705,
                            "file": "quic_shim.ivy",
                            "instruction": "                #take the most recent supported version\n"
                        },
                        {
                            "line": 706,
                            "file": "quic_shim.ivy",
                            "instruction": "                final_version := supported_versions_bv.value(idxx_bv);\n"
                        },
                        {
                            "line": 707,
                            "file": "quic_shim.ivy",
                            "instruction": "                idxx_bv := idxx_bv.next;\n"
                        },
                        {
                            "line": 708,
                            "file": "quic_shim.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 709,
                            "file": "quic_shim.ivy",
                            "instruction": "            ii := ii.next;\n"
                        },
                        {
                            "line": 710,
                            "file": "quic_shim.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 711,
                            "file": "quic_shim.ivy",
                            "instruction": "        idxx := idxx.next;\n"
                        },
                        {
                            "line": 712,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 713,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 714,
                            "file": "quic_shim.ivy",
                            "instruction": "    if final_version ~= 0x00000000 {\n"
                        },
                        {
                            "line": 715,
                            "file": "quic_shim.ivy",
                            "instruction": "        version_negociated := true;\n"
                        },
                        {
                            "line": 716,
                            "file": "quic_shim.ivy",
                            "instruction": "        var pkt := pkt_serdes_vn.from_bytes(spkt);\n"
                        },
                        {
                            "line": 717,
                            "file": "quic_shim.ivy",
                            "instruction": "        pkt.ptype := quic_packet_type.version_negociation; # no real type so hardcode\n"
                        },
                        {
                            "line": 718,
                            "file": "quic_shim.ivy",
                            "instruction": "        call recv_vn_pkt(src,dst,pkt);\n"
                        },
                        {
                            "line": 719,
                            "file": "quic_shim.ivy",
                            "instruction": "        call infer_tls_events_vn(src,dst,pkt);\n"
                        },
                        {
                            "line": 720,
                            "file": "quic_shim.ivy",
                            "instruction": "        call packet_event_vn(src,dst,pkt);       # also an inferred event\n"
                        },
                        {
                            "line": 721,
                            "file": "quic_shim.ivy",
                            "instruction": "    } else {\n"
                        },
                        {
                            "line": 722,
                            "file": "quic_shim.ivy",
                            "instruction": "        version_not_found(src) := true;\n"
                        },
                        {
                            "line": 723,
                            "file": "quic_shim.ivy",
                            "instruction": "        call version_not_found_event;\n"
                        },
                        {
                            "line": 724,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        }
                    ],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "ppkt",
                        "type": "stream_data"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "export_length_cid_extension",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "recv_vn_pkt",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "infer_tls_events_vn",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "packet_event_vn",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "version_not_found_event;",
                        "component": "quic_shim.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 69,
                "action_name": "tls_keys_established_event",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [
                        {
                            "line": 343,
                            "file": "quic_security.ivy",
                            "instruction": "    call show_tls_keys_established_event(scid,e);\n"
                        },
                        {
                            "line": 344,
                            "file": "quic_security.ivy",
                            "instruction": "    if e = quic_packet_type.zero_rtt {\n"
                        },
                        {
                            "line": 345,
                            "file": "quic_security.ivy",
                            "instruction": "        established_0rtt_keys(scid) := true\n"
                        },
                        {
                            "line": 346,
                            "file": "quic_security.ivy",
                            "instruction": "    } else if e = quic_packet_type.handshake {\n"
                        },
                        {
                            "line": 347,
                            "file": "quic_security.ivy",
                            "instruction": "        established_handshake_keys(scid) := true\n"
                        },
                        {
                            "line": 348,
                            "file": "quic_security.ivy",
                            "instruction": "    } else if e = quic_packet_type.one_rtt {\n"
                        },
                        {
                            "line": 349,
                            "file": "quic_security.ivy",
                            "instruction": "        call on_pn_space_discarded(dst_endpoint,scid,e);\n"
                        },
                        {
                            "line": 350,
                            "file": "quic_security.ivy",
                            "instruction": "        established_1rtt_keys(scid) := true\n"
                        },
                        {
                            "line": 351,
                            "file": "quic_security.ivy",
                            "instruction": "    } \n"
                        }
                    ],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "tls_keys_established_event",
                        "component": "quic_infer.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "actions": {
                "line": 54,
                "action_name": "tls_recv_event",
                "implementation": [],
                "monitor": {
                    "before": [],
                    "after": [],
                    "around": [
                        {
                            "line": 323,
                            "file": "quic_security.ivy",
                            "instruction": "    require connected(dcid) & connected_to(dcid) = scid;  # [1]\n"
                        },
                        {
                            "line": 324,
                            "file": "quic_security.ivy",
                            "instruction": "    require lo < hi & lo = crypto_pos(dcid,e) & hi <= crypto_length(scid,e);  # [2]\n"
                        },
                        {
                            "line": 325,
                            "file": "quic_security.ivy",
                            "instruction": "    ... \n"
                        },
                        {
                            "line": 326,
                            "file": "quic_security.ivy",
                            "instruction": "    crypto_pos(dcid,e) := hi;  # [3]\n"
                        }
                    ]
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "lo",
                        "type": "stream_pos"
                    },
                    {
                        "name": "hi",
                        "type": "stream_pos"
                    }
                ],
                "exported": true,
                "events": false,
                "called_from": [],
                "assertions_as_guarantees": {
                    "called_from": [],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [
                        {
                            "caller_func": "Environment",
                            "component": "Environment"
                        }
                    ],
                    "assertions": [
                        {
                            "line": 324,
                            "file": "quic_security.ivy",
                            "assertion": "require connected(dcid) & connected_to(dcid) = scid;  # [1]\n"
                        },
                        {
                            "line": 325,
                            "file": "quic_security.ivy",
                            "assertion": "require lo < hi & lo = crypto_pos(dcid,e) & hi <= crypto_length(scid,e);  # [2]\n"
                        },
                        {
                            "line": 721,
                            "file": "quic_frame.ivy",
                            "assertion": "require connected(dcid) & connected_to(dcid) = scid;\n"
                        },
                        {
                            "line": 723,
                            "file": "quic_frame.ivy",
                            "assertion": "require ~(e = quic_packet_type.initial) & ~(e = quic_packet_type.handshake); #& ~(e = quic_packet_type.handshake)\n"
                        },
                        {
                            "line": 724,
                            "file": "quic_frame.ivy",
                            "assertion": "require ~conn_closed(scid);\n"
                        },
                        {
                            "line": 739,
                            "file": "quic_frame.ivy",
                            "assertion": "require e = quic_packet_type.handshake -> established_handshake_keys(scid);  # [4]\n"
                        },
                        {
                            "line": 740,
                            "file": "quic_frame.ivy",
                            "assertion": "require e = quic_packet_type.one_rtt -> established_1rtt_keys(scid);  # [4]\n"
                        },
                        {
                            "line": 743,
                            "file": "quic_frame.ivy",
                            "assertion": "require ~(e = quic_packet_type.version_negociation) & ~(e = quic_packet_type.retry) & ~(e = quic_packet_type.zero_rtt);\n"
                        },
                        {
                            "line": 745,
                            "file": "quic_frame.ivy",
                            "assertion": "require num_queued_frames(scid) > 0 -> e = queued_level(scid);\n"
                        },
                        {
                            "line": 761,
                            "file": "quic_frame.ivy",
                            "assertion": "require f.ack_ranges.end > 0;\n"
                        },
                        {
                            "line": 765,
                            "file": "quic_frame.ivy",
                            "assertion": "require idx > 0 -> ack_range.gap < last - 1;\n"
                        },
                        {
                            "line": 767,
                            "file": "quic_frame.ivy",
                            "assertion": "require ack_range.ranges <= upper;\n"
                        },
                        {
                            "line": 771,
                            "file": "quic_frame.ivy",
                            "assertion": "require sent_pkt(dcid,e,jdx);  # [1]\n"
                        },
                        {
                            "line": 793,
                            "file": "quic_frame.ivy",
                            "assertion": "require some_new_ack;\n"
                        },
                        {
                            "line": 794,
                            "file": "quic_frame.ivy",
                            "assertion": "require f.largest_acked = max_acked(dcid,e);\n"
                        },
                        {
                            "line": 275,
                            "file": "ivy_quic_client_behavior.ivy",
                            "assertion": "require scid = the_cid;\n"
                        }
                    ]
                }
            }
        },
        {
            "actions": {
                "line": 33,
                "action_name": "tls_send_event",
                "implementation": [],
                "monitor": {
                    "before": [
                        {
                            "line": 254,
                            "file": "quic_security.ivy",
                            "instruction": "    # is_not_sleeping := time_api.c_timer.is_sleep_fake_timeout;\n"
                        },
                        {
                            "line": 255,
                            "file": "quic_security.ivy",
                            "instruction": "    # if _generating {\n"
                        },
                        {
                            "line": 256,
                            "file": "quic_security.ivy",
                            "instruction": "        \n"
                        },
                        {
                            "line": 257,
                            "file": "quic_security.ivy",
                            "instruction": "    # };\n"
                        },
                        {
                            "line": 258,
                            "file": "quic_security.ivy",
                            "instruction": "    var jdx := data.begin;\n"
                        },
                        {
                            "line": 259,
                            "file": "quic_security.ivy",
                            "instruction": "    if retry_sent(scid) & ~crypto_reset(dcid) { # TODO retest\n"
                        },
                        {
                            "line": 260,
                            "file": "quic_security.ivy",
                            "instruction": "        call show_test;\n"
                        },
                        {
                            "line": 261,
                            "file": "quic_security.ivy",
                            "instruction": "        crypto_handler_pos(C,L) := 0;\n"
                        },
                        {
                            "line": 262,
                            "file": "quic_security.ivy",
                            "instruction": "        crypto_data(scid,e) := stream_data.empty;\n"
                        },
                        {
                            "line": 263,
                            "file": "quic_security.ivy",
                            "instruction": "        while jdx < data.end {\n"
                        },
                        {
                            "line": 264,
                            "file": "quic_security.ivy",
                            "instruction": "            var cpos := pos+jdx;\n"
                        },
                        {
                            "line": 265,
                            "file": "quic_security.ivy",
                            "instruction": "            crypto_data_present(scid,e,cpos) := false;\n"
                        },
                        {
                            "line": 266,
                            "file": "quic_security.ivy",
                            "instruction": "            jdx := jdx.next\n"
                        },
                        {
                            "line": 267,
                            "file": "quic_security.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 268,
                            "file": "quic_security.ivy",
                            "instruction": "        crypto_reset(dcid) := true;\n"
                        },
                        {
                            "line": 269,
                            "file": "quic_security.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 270,
                            "file": "quic_security.ivy",
                            "instruction": "    var end := pos + data.end;\n"
                        },
                        {
                            "line": 271,
                            "file": "quic_security.ivy",
                            "instruction": "    if end > crypto_data(scid,e).end {\n"
                        },
                        {
                            "line": 272,
                            "file": "quic_security.ivy",
                            "instruction": "        crypto_data(scid,e) := crypto_data(scid,e).resize(end,0);\n"
                        },
                        {
                            "line": 273,
                            "file": "quic_security.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 274,
                            "file": "quic_security.ivy",
                            "instruction": "    jdx := data.begin;\n"
                        },
                        {
                            "line": 275,
                            "file": "quic_security.ivy",
                            "instruction": "    while jdx < data.end {\n"
                        },
                        {
                            "line": 276,
                            "file": "quic_security.ivy",
                            "instruction": "        var cpos := pos+jdx;\n"
                        },
                        {
                            "line": 277,
                            "file": "quic_security.ivy",
                            "instruction": "        var byte := data.value(jdx);\n"
                        },
                        {
                            "line": 278,
                            "file": "quic_security.ivy",
                            "instruction": "        require crypto_data_present(scid,e,cpos) -> crypto_data(scid,e).value(cpos) = byte;\n"
                        },
                        {
                            "line": 279,
                            "file": "quic_security.ivy",
                            "instruction": "        crypto_data_end(scid,e) := end;\n"
                        },
                        {
                            "line": 280,
                            "file": "quic_security.ivy",
                            "instruction": "\t    crypto_data(scid,e) := crypto_data(scid,e).set(cpos,byte);  # [4]\n"
                        },
                        {
                            "line": 281,
                            "file": "quic_security.ivy",
                            "instruction": "        crypto_data_present(scid,e,cpos) := true;\n"
                        },
                        {
                            "line": 282,
                            "file": "quic_security.ivy",
                            "instruction": "\t    jdx := jdx.next\n"
                        },
                        {
                            "line": 283,
                            "file": "quic_security.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 284,
                            "file": "quic_security.ivy",
                            "instruction": "    crypto_data_end(scid,e) := crypto_data(scid,e).end; # - 1;\n"
                        },
                        {
                            "line": 285,
                            "file": "quic_security.ivy",
                            "instruction": "    var max_present : stream_pos := 0;\n"
                        },
                        {
                            "line": 286,
                            "file": "quic_security.ivy",
                            "instruction": "    while max_present < crypto_data_end(scid,e) & crypto_data_present(scid,e,max_present) {\n"
                        },
                        {
                            "line": 287,
                            "file": "quic_security.ivy",
                            "instruction": "        max_present := max_present.next\n"
                        },
                        {
                            "line": 288,
                            "file": "quic_security.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 289,
                            "file": "quic_security.ivy",
                            "instruction": "    #require conn_open(src,dcid);  # [3]\n"
                        },
                        {
                            "line": 290,
                            "file": "quic_security.ivy",
                            "instruction": "    var avail := crypto_data(scid,e).segment(crypto_handler_pos(scid,e),max_present);\n"
                        },
                        {
                            "line": 291,
                            "file": "quic_security.ivy",
                            "instruction": "    var res := tls.handshake_parser.deserialize(avail,0); #quicgo\n"
                        },
                        {
                            "line": 292,
                            "file": "quic_security.ivy",
                            "instruction": "    var hs := res.value;\n"
                        },
                        {
                            "line": 293,
                            "file": "quic_security.ivy",
                            "instruction": "    call tls.handshake_data_event(src,dst,avail.segment(0,res.pos));\n"
                        },
                        {
                            "line": 294,
                            "file": "quic_security.ivy",
                            "instruction": "    crypto_handler_pos(scid,e) := crypto_handler_pos(scid,e) + res.pos;\n"
                        },
                        {
                            "line": 295,
                            "file": "quic_security.ivy",
                            "instruction": "    var idx := hs.begin;\n"
                        },
                        {
                            "line": 296,
                            "file": "quic_security.ivy",
                            "instruction": "    while idx < hs.end {\n"
                        },
                        {
                            "line": 297,
                            "file": "quic_security.ivy",
                            "instruction": "        var h := hs.value(idx);\n"
                        },
                        {
                            "line": 298,
                            "file": "quic_security.ivy",
                            "instruction": "        call tls.handshake_event(src,dst,h);\n"
                        },
                        {
                            "line": 299,
                            "file": "quic_security.ivy",
                            "instruction": "        call handle_tls_handshake(src,dst,scid,dcid,h);  #[2]\n"
                        },
                        {
                            "line": 300,
                            "file": "quic_security.ivy",
                            "instruction": "        idx := idx.next\n"
                        },
                        {
                            "line": 301,
                            "file": "quic_security.ivy",
                            "instruction": "    };\n"
                        }
                    ],
                    "after": [
                        {
                            "line": 324,
                            "file": "quic_shim.ivy",
                            "instruction": "                     pos:stream_pos, e:quic_packet_type, tls_id:tls_api.id) {\n"
                        },
                        {
                            "line": 325,
                            "file": "quic_shim.ivy",
                            "instruction": "    call show_tls_send_event(src,dst,scid,dcid,data,pos,e, tls_id);\n"
                        },
                        {
                            "line": 326,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 327,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 328,
                            "file": "quic_shim.ivy",
                            "instruction": "# TLS keys established event shim\n"
                        },
                        {
                            "line": 329,
                            "file": "quic_shim.ivy",
                            "instruction": "# ===============================\n"
                        },
                        {
                            "line": 330,
                            "file": "quic_shim.ivy",
                            "instruction": "#\n"
                        },
                        {
                            "line": 331,
                            "file": "quic_shim.ivy",
                            "instruction": "# This occurs when a TLS instance establishes the encryption keys for an encryption\n"
                        },
                        {
                            "line": 332,
                            "file": "quic_shim.ivy",
                            "instruction": "# level. This is translated into a `tls_keys_established_event` at the security layer.\n"
                        },
                        {
                            "line": 333,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 334,
                            "file": "quic_shim.ivy",
                            "instruction": "implement tls_api.upper.keys_established(tls_id:tls_api.id,lev:tls_api.upper.level) {\n"
                        },
                        {
                            "line": 335,
                            "file": "quic_shim.ivy",
                            "instruction": "    # var e := quic_packet_type.handshake if lev = 2 else quic_packet_type.one_rtt;\n"
                        },
                        {
                            "line": 336,
                            "file": "quic_shim.ivy",
                            "instruction": "    # if zero_rtt_allowed {\n"
                        },
                        {
                            "line": 337,
                            "file": "quic_shim.ivy",
                            "instruction": "    var e := quic_packet_type.handshake if lev = 2 else quic_packet_type.zero_rtt;\n"
                        },
                        {
                            "line": 338,
                            "file": "quic_shim.ivy",
                            "instruction": "    # };\n"
                        },
                        {
                            "line": 339,
                            "file": "quic_shim.ivy",
                            "instruction": "    call tls_keys_established_event(tls_id_to_cid(tls_id),e); #tls_id = server.tls_id  for client ?\n"
                        },
                        {
                            "line": 340,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 341,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 342,
                            "file": "quic_shim.ivy",
                            "instruction": "import action show_tls_id_to_cid(ver:cid)\n"
                        },
                        {
                            "line": 343,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 344,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 345,
                            "file": "quic_shim.ivy",
                            "instruction": "# TLS handshake data event shim\n"
                        },
                        {
                            "line": 346,
                            "file": "quic_shim.ivy",
                            "instruction": "# =============================\n"
                        },
                        {
                            "line": 347,
                            "file": "quic_shim.ivy",
                            "instruction": "#\n"
                        },
                        {
                            "line": 348,
                            "file": "quic_shim.ivy",
                            "instruction": "# When TLS handshake data is conceputally generated by the peer, we\n"
                        },
                        {
                            "line": 349,
                            "file": "quic_shim.ivy",
                            "instruction": "# feed it to the real TLS.\n"
                        },
                        {
                            "line": 350,
                            "file": "quic_shim.ivy",
                            "instruction": "#\n"
                        },
                        {
                            "line": 351,
                            "file": "quic_shim.ivy",
                            "instruction": "# TODO: We do it at this point because we may need it to generate the\n"
                        },
                        {
                            "line": 352,
                            "file": "quic_shim.ivy",
                            "instruction": "# keys for the next packet to be decrypted. This should really happen\n"
                        },
                        {
                            "line": 353,
                            "file": "quic_shim.ivy",
                            "instruction": "# on a `tls_recv_event`, but that would be too late. Of course, this could\n"
                        },
                        {
                            "line": 354,
                            "file": "quic_shim.ivy",
                            "instruction": "# happen in reality. That is, a 1-rtt packet could arrive before the\n"
                        },
                        {
                            "line": 355,
                            "file": "quic_shim.ivy",
                            "instruction": "# handshake that establishes the keys. The trouble is this will happen too\n"
                        },
                        {
                            "line": 356,
                            "file": "quic_shim.ivy",
                            "instruction": "# frequently if we delay the TLS reception event. Perhaps the solution to\n"
                        },
                        {
                            "line": 357,
                            "file": "quic_shim.ivy",
                            "instruction": "# this is to infer a TLC reception event after an incoming packet if there\n"
                        },
                        {
                            "line": 358,
                            "file": "quic_shim.ivy",
                            "instruction": "# were any crypto frames.\n"
                        },
                        {
                            "line": 359,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 360,
                            "file": "quic_shim.ivy",
                            "instruction": "after tls.handshake_data_event(src : ip.endpoint, dst : ip.endpoint, data:stream_data) {\n"
                        },
                        {
                            "line": 361,
                            "file": "quic_shim.ivy",
                            "instruction": "    if dst_is_generated_tls(dst) {\n"
                        },
                        {
                            "line": 362,
                            "file": "quic_shim.ivy",
                            "instruction": "        call tls_api.lower.recv(src_tls_id(dst),data,0); # TODO: fill in the encryption level\n"
                        },
                        {
                            "line": 363,
                            "file": "quic_shim.ivy",
                            "instruction": "    }\n"
                        },
                        {
                            "line": 364,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 365,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 366,
                            "file": "quic_shim.ivy",
                            "instruction": "# TLS client initial request shim\n"
                        },
                        {
                            "line": 367,
                            "file": "quic_shim.ivy",
                            "instruction": "# ===============================\n"
                        },
                        {
                            "line": 368,
                            "file": "quic_shim.ivy",
                            "instruction": "#\n"
                        },
                        {
                            "line": 369,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 370,
                            "file": "quic_shim.ivy",
                            "instruction": "# This event corresponds to the client creating a new connection. We\n"
                        },
                        {
                            "line": 371,
                            "file": "quic_shim.ivy",
                            "instruction": "# set up the initial keys based on the nonce cid, which is used as\n"
                        },
                        {
                            "line": 372,
                            "file": "quic_shim.ivy",
                            "instruction": "# initial key material. Note, the \"salt\" is specified in the QUIC-TLS\n"
                        },
                        {
                            "line": 373,
                            "file": "quic_shim.ivy",
                            "instruction": "# document.\n"
                        },
                        {
                            "line": 374,
                            "file": "quic_shim.ivy",
                            "instruction": "#\n"
                        },
                        {
                            "line": 375,
                            "file": "quic_shim.ivy",
                            "instruction": "# TODO: this assumes the cid length is 8 bytes. Also, the ikm and salt\n"
                        },
                        {
                            "line": 376,
                            "file": "quic_shim.ivy",
                            "instruction": "# should really be computed in the protection layer and passed to\n"
                        },
                        {
                            "line": 377,
                            "file": "quic_shim.ivy",
                            "instruction": "# TLS here in the shim.\n"
                        },
                        {
                            "line": 378,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 379,
                            "file": "quic_shim.ivy",
                            "instruction": "after tls_client_initial_request(src:ip.endpoint,dst:ip.endpoint,nonce:cid, pversion:version, id:tls_api.id) {\n"
                        },
                        {
                            "line": 380,
                            "file": "quic_shim.ivy",
                            "instruction": "    client_initial_scil := scid_size_pos(false);\n"
                        },
                        {
                            "line": 381,
                            "file": "quic_shim.ivy",
                            "instruction": "    var ikm := cid_to_bytes(nonce,dcid_size_cl(retry_response(the_cid))); \n"
                        },
                        {
                            "line": 382,
                            "file": "quic_shim.ivy",
                            "instruction": "    call show_set_initial_keys(ikm, id);\n"
                        },
                        {
                            "line": 383,
                            "file": "quic_shim.ivy",
                            "instruction": "    # call show_version(pversion);\n"
                        },
                        {
                            "line": 384,
                            "file": "quic_shim.ivy",
                            "instruction": "    var salt : stream_data := stream_data.empty;\n"
                        },
                        {
                            "line": 385,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 386,
                            "file": "quic_shim.ivy",
                            "instruction": "    #0xc3 0xee 0xf7 0x12 0xc7 0x2e 0xbb 0x5a 0x11 0xa7 0xd2 0x43 0x2b 0xb4 0x63 0x65 0xbe 0xf9 0xf5 0x02 QUIC-27\n"
                        },
                        {
                            "line": 387,
                            "file": "quic_shim.ivy",
                            "instruction": "\tif pversion = 0xfaceb002 | pversion = 0xff00001b  | pversion = 0xff00001c {\n"
                        },
                        {
                            "line": 388,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xc3);\n"
                        },
                        {
                            "line": 389,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xee);\n"
                        },
                        {
                            "line": 390,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xf7);\n"
                        },
                        {
                            "line": 391,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x12);\n"
                        },
                        {
                            "line": 392,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xc7);\n"
                        },
                        {
                            "line": 393,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x2e);\n"
                        },
                        {
                            "line": 394,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xbb);\n"
                        },
                        {
                            "line": 395,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x5a);\n"
                        },
                        {
                            "line": 396,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x11);\n"
                        },
                        {
                            "line": 397,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xa7);\n"
                        },
                        {
                            "line": 398,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xd2);\n"
                        },
                        {
                            "line": 399,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x43);\n"
                        },
                        {
                            "line": 400,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x2b);\n"
                        },
                        {
                            "line": 401,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xb4);\n"
                        },
                        {
                            "line": 402,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x63);\n"
                        },
                        {
                            "line": 403,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x65);\n"
                        },
                        {
                            "line": 404,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xbe);\n"
                        },
                        {
                            "line": 405,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xf9);\n"
                        },
                        {
                            "line": 406,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xf5);\n"
                        },
                        {
                            "line": 407,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x02);\n"
                        },
                        {
                            "line": 408,
                            "file": "quic_shim.ivy",
                            "instruction": "\t}\n"
                        },
                        {
                            "line": 409,
                            "file": "quic_shim.ivy",
                            "instruction": "    #0xaf bf ec 28 99 93 d2 4c 9e 97 86 f1 9c 61 11 e0 43 90 a8 99 QUIC-29\n"
                        },
                        {
                            "line": 410,
                            "file": "quic_shim.ivy",
                            "instruction": "\telse if pversion = 0xff00001d {\n"
                        },
                        {
                            "line": 411,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xaf);\n"
                        },
                        {
                            "line": 412,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xbf);\n"
                        },
                        {
                            "line": 413,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xec);\n"
                        },
                        {
                            "line": 414,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x28);\n"
                        },
                        {
                            "line": 415,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x99);\n"
                        },
                        {
                            "line": 416,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x93);\n"
                        },
                        {
                            "line": 417,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xd2);\n"
                        },
                        {
                            "line": 418,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x4c);\n"
                        },
                        {
                            "line": 419,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x9e);\n"
                        },
                        {
                            "line": 420,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x97);\n"
                        },
                        {
                            "line": 421,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x86);\n"
                        },
                        {
                            "line": 422,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xf1);\n"
                        },
                        {
                            "line": 423,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x9c);\n"
                        },
                        {
                            "line": 424,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x61);\n"
                        },
                        {
                            "line": 425,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x11);\n"
                        },
                        {
                            "line": 426,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xe0);\n"
                        },
                        {
                            "line": 427,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x43);\n"
                        },
                        {
                            "line": 428,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x90);\n"
                        },
                        {
                            "line": 429,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xa8);\n"
                        },
                        {
                            "line": 430,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x99);\n"
                        },
                        {
                            "line": 431,
                            "file": "quic_shim.ivy",
                            "instruction": "\t}\n"
                        },
                        {
                            "line": 432,
                            "file": "quic_shim.ivy",
                            "instruction": "    # 0x38 0x76 0x2c 0xf7 0xf5 0x59 0x34 0xb3 0x4d 0x17 0x9a 0xe6 0xa4 0xc8 0x0c 0xad 0xcc 0xbb 0x7f 0x0a\n"
                        },
                        {
                            "line": 433,
                            "file": "quic_shim.ivy",
                            "instruction": "    else if pversion = 0x00000001 | pversion = 0xff000022 {\n"
                        },
                        {
                            "line": 434,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x38);\n"
                        },
                        {
                            "line": 435,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x76);\n"
                        },
                        {
                            "line": 436,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x2c);\n"
                        },
                        {
                            "line": 437,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xf7);\n"
                        },
                        {
                            "line": 438,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xf5);\n"
                        },
                        {
                            "line": 439,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x59);\n"
                        },
                        {
                            "line": 440,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x34);\n"
                        },
                        {
                            "line": 441,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xb3);\n"
                        },
                        {
                            "line": 442,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x4d);\n"
                        },
                        {
                            "line": 443,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x17);\n"
                        },
                        {
                            "line": 444,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x9a);\n"
                        },
                        {
                            "line": 445,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xe6);\n"
                        },
                        {
                            "line": 446,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xa4);\n"
                        },
                        {
                            "line": 447,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xc8);\n"
                        },
                        {
                            "line": 448,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x0c);\n"
                        },
                        {
                            "line": 449,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xad);\n"
                        },
                        {
                            "line": 450,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xcc);\n"
                        },
                        {
                            "line": 451,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0xbb);\n"
                        },
                        {
                            "line": 452,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x7f);\n"
                        },
                        {
                            "line": 453,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tsalt := salt.append(0x0a);\n"
                        },
                        {
                            "line": 454,
                            "file": "quic_shim.ivy",
                            "instruction": "\t};\n"
                        },
                        {
                            "line": 455,
                            "file": "quic_shim.ivy",
                            "instruction": "    call tls_api.upper.set_initial_keys(id,salt,ikm); ## WTF TODO error id tls_api.upper.set_initial_keys(id,salt,ikm);\n"
                        },
                        {
                            "line": 456,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 457,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 458,
                            "file": "quic_shim.ivy",
                            "instruction": "import action show_l(ver:stream_pos)\n"
                        },
                        {
                            "line": 459,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 460,
                            "file": "quic_shim.ivy",
                            "instruction": "# TLS client initial response shim\n"
                        },
                        {
                            "line": 461,
                            "file": "quic_shim.ivy",
                            "instruction": "# ================================\n"
                        },
                        {
                            "line": 462,
                            "file": "quic_shim.ivy",
                            "instruction": "#\n"
                        },
                        {
                            "line": 463,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 464,
                            "file": "quic_shim.ivy",
                            "instruction": "# This event corresponds to the server responding to client\n"
                        },
                        {
                            "line": 465,
                            "file": "quic_shim.ivy",
                            "instruction": "# creating a new connection. We set up the initial keys based on \n"
                        },
                        {
                            "line": 466,
                            "file": "quic_shim.ivy",
                            "instruction": "# the destination cid, which is used as initial key material. \n"
                        },
                        {
                            "line": 467,
                            "file": "quic_shim.ivy",
                            "instruction": "# Note, the \"salt\" is specified in the QUIC-TLS document.\n"
                        },
                        {
                            "line": 468,
                            "file": "quic_shim.ivy",
                            "instruction": "#\n"
                        },
                        {
                            "line": 469,
                            "file": "quic_shim.ivy",
                            "instruction": "# TODO: this assumes the cid length is 8 bytes. Also, the ikm and salt\n"
                        },
                        {
                            "line": 470,
                            "file": "quic_shim.ivy",
                            "instruction": "# should really be computed in the protection layer and passed to\n"
                        },
                        {
                            "line": 471,
                            "file": "quic_shim.ivy",
                            "instruction": "# TLS here in the shim.\n"
                        },
                        {
                            "line": 472,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 473,
                            "file": "quic_shim.ivy",
                            "instruction": "after tls_client_initial_response(src:ip.endpoint,dst:ip.endpoint,spkt: stream_data) {\n"
                        },
                        {
                            "line": 474,
                            "file": "quic_shim.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 475,
                            "file": "quic_shim.ivy",
                            "instruction": "    if nclients > 1 {\n"
                        },
                        {
                            "line": 476,
                            "file": "quic_shim.ivy",
                            "instruction": "        var cdx := clients.clients.begin;\n"
                        },
                        {
                            "line": 477,
                            "file": "quic_shim.ivy",
                            "instruction": "        while cdx < clients.clients.end {\n"
                        },
                        {
                            "line": 478,
                            "file": "quic_shim.ivy",
                            "instruction": "            var cc := clients.clients.value(cdx);\n"
                        },
                        {
                            "line": 479,
                            "file": "quic_shim.ivy",
                            "instruction": "            # call cc.set_ep(src);\n"
                        },
                        {
                            "line": 480,
                            "file": "quic_shim.ivy",
                            "instruction": "            # cc.ep := src;\n"
                        },
                        {
                            "line": 481,
                            "file": "quic_shim.ivy",
                            "instruction": "            # if some(cf:endpoint) cc *> cf {\n"
                        },
                        {
                            "line": 482,
                            "file": "quic_shim.ivy",
                            "instruction": "            #     cf.set_ep(src); # TODO: migration?\n"
                        },
                        {
                            "line": 483,
                            "file": "quic_shim.ivy",
                            "instruction": "            # }\n"
                        },
                        {
                            "line": 484,
                            "file": "quic_shim.ivy",
                            "instruction": "            cdx := cdx.next;\n"
                        },
                        {
                            "line": 485,
                            "file": "quic_shim.ivy",
                            "instruction": "        }\n"
                        },
                        {
                            "line": 486,
                            "file": "quic_shim.ivy",
                            "instruction": "    } else {\n"
                        },
                        {
                            "line": 487,
                            "file": "quic_shim.ivy",
                            "instruction": "        # client.set_ep(src); # TODO: migration?\n"
                        },
                        {
                            "line": 488,
                            "file": "quic_shim.ivy",
                            "instruction": "        #if ~endpoint_to_pid(src) = endpoint_id.mim {\n"
                        },
                        {
                            "line": 489,
                            "file": "quic_shim.ivy",
                            "instruction": "        call client.set_ep(src);\n"
                        },
                        {
                            "line": 490,
                            "file": "quic_shim.ivy",
                            "instruction": "        #client.ep.interface := ip.lo;\n"
                        },
                        {
                            "line": 491,
                            "file": "quic_shim.ivy",
                            "instruction": "        #}\n"
                        },
                        {
                            "line": 492,
                            "file": "quic_shim.ivy",
                            "instruction": "    }\n"
                        },
                        {
                            "line": 493,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 494,
                            "file": "quic_shim.ivy",
                            "instruction": "    # call show_kk;\n"
                        },
                        {
                            "line": 495,
                            "file": "quic_shim.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 496,
                            "file": "quic_shim.ivy",
                            "instruction": "\tvar version := bytes_to_version(spkt.segment(1,5));\n"
                        },
                        {
                            "line": 497,
                            "file": "quic_shim.ivy",
                            "instruction": "    var lens := spkt.value(5);\n"
                        },
                        {
                            "line": 498,
                            "file": "quic_shim.ivy",
                            "instruction": "    var dcil : stream_pos := bfe[0][7](spkt.value(5));\n"
                        },
                        {
                            "line": 499,
                            "file": "quic_shim.ivy",
                            "instruction": "    var ikm := cid_to_bytes(0,1); # dcid\n"
                        },
                        {
                            "line": 500,
                            "file": "quic_shim.ivy",
                            "instruction": "\tif(~dcil = 0) {\n"
                        },
                        {
                            "line": 501,
                            "file": "quic_shim.ivy",
                            "instruction": "        client_initial_dcil := dcil;\n"
                        },
                        {
                            "line": 502,
                            "file": "quic_shim.ivy",
                            "instruction": "\t    ikm := spkt.segment(6,6+dcil); # dcid\n"
                        },
                        {
                            "line": 503,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 504,
                            "file": "quic_shim.ivy",
                            "instruction": "    var dcid : cid := bytes_to_cid(ikm);\n"
                        },
                        {
                            "line": 505,
                            "file": "quic_shim.ivy",
                            "instruction": "    var scil : stream_pos := bfe[0][7](spkt.value(6+dcil));\n"
                        },
                        {
                            "line": 506,
                            "file": "quic_shim.ivy",
                            "instruction": "    var skm := cid_to_bytes(0,1); # scid\n"
                        },
                        {
                            "line": 507,
                            "file": "quic_shim.ivy",
                            "instruction": "    if(~scil = 0) {\n"
                        },
                        {
                            "line": 508,
                            "file": "quic_shim.ivy",
                            "instruction": "        client_initial_scil := scil;\n"
                        },
                        {
                            "line": 509,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tclient_non_zero_scil := true;\t\n"
                        },
                        {
                            "line": 510,
                            "file": "quic_shim.ivy",
                            "instruction": "\t    skm := spkt.segment(6+dcil+1,6+dcil+1+scil); # scid\n"
                        },
                        {
                            "line": 511,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 512,
                            "file": "quic_shim.ivy",
                            "instruction": "    var scid : cid := bytes_to_cid(skm);\n"
                        },
                        {
                            "line": 513,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 514,
                            "file": "quic_shim.ivy",
                            "instruction": "    if scil = 0 | dcil = 0 {\n"
                        },
                        {
                            "line": 515,
                            "file": "quic_shim.ivy",
                            "instruction": "        issued_zero_length_cid := true;\n"
                        },
                        {
                            "line": 516,
                            "file": "quic_shim.ivy",
                            "instruction": "    }\n"
                        },
                        {
                            "line": 517,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 518,
                            "file": "quic_shim.ivy",
                            "instruction": "    #  When an Initial packet is sent by a client that has not previously\n"
                        },
                        {
                            "line": 519,
                            "file": "quic_shim.ivy",
                            "instruction": "    #    received an Initial or Retry packet from the server, the client\n"
                        },
                        {
                            "line": 520,
                            "file": "quic_shim.ivy",
                            "instruction": "    #    populates the Destination Connection ID field with an unpredictable\n"
                        },
                        {
                            "line": 521,
                            "file": "quic_shim.ivy",
                            "instruction": "    #    value.  This Destination Connection ID MUST be at least 8 bytes in\n"
                        },
                        {
                            "line": 522,
                            "file": "quic_shim.ivy",
                            "instruction": "    #    length\n"
                        },
                        {
                            "line": 523,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 524,
                            "file": "quic_shim.ivy",
                            "instruction": "    require dcil >= 8;\n"
                        },
                        {
                            "line": 525,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 526,
                            "file": "quic_shim.ivy",
                            "instruction": "    if ~retry_sent(dcid) {\n"
                        },
                        {
                            "line": 527,
                            "file": "quic_shim.ivy",
                            "instruction": "        client_initial_dcid := dcid;\n"
                        },
                        {
                            "line": 528,
                            "file": "quic_shim.ivy",
                            "instruction": "        client_initial_scid := scid; # skm\n"
                        },
                        {
                            "line": 529,
                            "file": "quic_shim.ivy",
                            "instruction": "        call export_length_cid_extension(dcil,scil);\n"
                        },
                        {
                            "line": 530,
                            "file": "quic_shim.ivy",
                            "instruction": "        call export_length_cid(dcil,scil);\n"
                        },
                        {
                            "line": 531,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 532,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 533,
                            "file": "quic_shim.ivy",
                            "instruction": "    if ~tp_client_set | negocation_of_version(src) {\n"
                        },
                        {
                            "line": 534,
                            "file": "quic_shim.ivy",
                            "instruction": "        var extns := tls_extensions.empty;\n"
                        },
                        {
                            "line": 535,
                            "file": "quic_shim.ivy",
                            "instruction": "        extns := extns.append(make_transport_parameters);\n"
                        },
                        {
                            "line": 536,
                            "file": "quic_shim.ivy",
                            "instruction": "        if zero_rtt_client_test {\n"
                        },
                        {
                            "line": 537,
                            "file": "quic_shim.ivy",
                            "instruction": "            call tls_api.upper.create_0rtt_client(0,true,extns);  \n"
                        },
                        {
                            "line": 538,
                            "file": "quic_shim.ivy",
                            "instruction": "        } else {\n"
                        },
                        {
                            "line": 539,
                            "file": "quic_shim.ivy",
                            "instruction": "            call tls_api.upper.create(0,true,extns);  \n"
                        },
                        {
                            "line": 540,
                            "file": "quic_shim.ivy",
                            "instruction": "        }\n"
                        },
                        {
                            "line": 541,
                            "file": "quic_shim.ivy",
                            "instruction": "        # 'true' means this instance of tls is a server\n"
                        },
                        {
                            "line": 542,
                            "file": "quic_shim.ivy",
                            "instruction": "        tp_client_set := true;\n"
                        },
                        {
                            "line": 543,
                            "file": "quic_shim.ivy",
                            "instruction": "\t}; \n"
                        },
                        {
                            "line": 544,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 545,
                            "file": "quic_shim.ivy",
                            "instruction": "    client_initial_version := version;\n"
                        },
                        {
                            "line": 546,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 547,
                            "file": "quic_shim.ivy",
                            "instruction": "    if client_initial_version ~= initial_version & client_initial_version ~= 0xfaceb002 { #initial_version todo\n"
                        },
                        {
                            "line": 548,
                            "file": "quic_shim.ivy",
                            "instruction": "        negocation_of_version(src) := true;\n"
                        },
                        {
                            "line": 549,
                            "file": "quic_shim.ivy",
                            "instruction": "    } \n"
                        },
                        {
                            "line": 550,
                            "file": "quic_shim.ivy",
                            "instruction": "    else if (~initial_keys_set(dcid) & retry_client_test -> retry_sent(dcid)) | negocation_of_version(src) { \n"
                        },
                        {
                            "line": 551,
                            "file": "quic_shim.ivy",
                            "instruction": "        call export_length_cid_extension(dcil,scil);\n"
                        },
                        {
                            "line": 552,
                            "file": "quic_shim.ivy",
                            "instruction": "        negocation_of_version(src) := false;\n"
                        },
                        {
                            "line": 553,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 554,
                            "file": "quic_shim.ivy",
                            "instruction": "        var salt : stream_data := stream_data.empty;\n"
                        },
                        {
                            "line": 555,
                            "file": "quic_shim.ivy",
                            "instruction": "        \n"
                        },
                        {
                            "line": 556,
                            "file": "quic_shim.ivy",
                            "instruction": "        #0xc3 ee f7 12 c7 2e bb 5a 11 a7 d2 43 2b b4 63 65 be f9 f5 02 QUIC-27\n"
                        },
                        {
                            "line": 557,
                            "file": "quic_shim.ivy",
                            "instruction": "\t    if client_initial_version = 0xfaceb002  \n"
                        },
                        {
                            "line": 558,
                            "file": "quic_shim.ivy",
                            "instruction": "         | client_initial_version = 0xff00001b \n"
                        },
                        {
                            "line": 559,
                            "file": "quic_shim.ivy",
                            "instruction": "         | client_initial_version = 0xff00001c {\n"
                        },
                        {
                            "line": 560,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xc3);\n"
                        },
                        {
                            "line": 561,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xee);\n"
                        },
                        {
                            "line": 562,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xf7);\n"
                        },
                        {
                            "line": 563,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x12);\n"
                        },
                        {
                            "line": 564,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xc7);\n"
                        },
                        {
                            "line": 565,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x2e);\n"
                        },
                        {
                            "line": 566,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xbb);\n"
                        },
                        {
                            "line": 567,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x5a);\n"
                        },
                        {
                            "line": 568,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x11);\n"
                        },
                        {
                            "line": 569,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xa7);\n"
                        },
                        {
                            "line": 570,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xd2);\n"
                        },
                        {
                            "line": 571,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x43);\n"
                        },
                        {
                            "line": 572,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x2b);\n"
                        },
                        {
                            "line": 573,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xb4);\n"
                        },
                        {
                            "line": 574,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x63);\n"
                        },
                        {
                            "line": 575,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x65);\n"
                        },
                        {
                            "line": 576,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xbe);\n"
                        },
                        {
                            "line": 577,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xf9);\n"
                        },
                        {
                            "line": 578,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xf5);\n"
                        },
                        {
                            "line": 579,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x02);\n"
                        },
                        {
                            "line": 580,
                            "file": "quic_shim.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 581,
                            "file": "quic_shim.ivy",
                            "instruction": "        #0xaf bf ec 28 99 93 d2 4c 9e 97 86 f1 9c 61 11 e0 43 90 a8 99 QUIC-29\n"
                        },
                        {
                            "line": 582,
                            "file": "quic_shim.ivy",
                            "instruction": "        if client_initial_version = 0xff00001d  {\n"
                        },
                        {
                            "line": 583,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xaf);\n"
                        },
                        {
                            "line": 584,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xbf);\n"
                        },
                        {
                            "line": 585,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xec);\n"
                        },
                        {
                            "line": 586,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x28);\n"
                        },
                        {
                            "line": 587,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x99);\n"
                        },
                        {
                            "line": 588,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x93);\n"
                        },
                        {
                            "line": 589,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xd2);\n"
                        },
                        {
                            "line": 590,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x4c);\n"
                        },
                        {
                            "line": 591,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x9e);\n"
                        },
                        {
                            "line": 592,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x97);\n"
                        },
                        {
                            "line": 593,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x86);\n"
                        },
                        {
                            "line": 594,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xf1);\n"
                        },
                        {
                            "line": 595,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x9c);\n"
                        },
                        {
                            "line": 596,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x61);\n"
                        },
                        {
                            "line": 597,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x11);\n"
                        },
                        {
                            "line": 598,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xe0);\n"
                        },
                        {
                            "line": 599,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x43);\n"
                        },
                        {
                            "line": 600,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x90);\n"
                        },
                        {
                            "line": 601,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xa8);\n"
                        },
                        {
                            "line": 602,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x99);\n"
                        },
                        {
                            "line": 603,
                            "file": "quic_shim.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 604,
                            "file": "quic_shim.ivy",
                            "instruction": "        if client_initial_version = 0x00000001 | client_initial_version = 0xff000022 {\n"
                        },
                        {
                            "line": 605,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x38);\n"
                        },
                        {
                            "line": 606,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x76);\n"
                        },
                        {
                            "line": 607,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x2c);\n"
                        },
                        {
                            "line": 608,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xf7);\n"
                        },
                        {
                            "line": 609,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xf5);\n"
                        },
                        {
                            "line": 610,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x59);\n"
                        },
                        {
                            "line": 611,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x34);\n"
                        },
                        {
                            "line": 612,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xb3);\n"
                        },
                        {
                            "line": 613,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x4d);\n"
                        },
                        {
                            "line": 614,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x17);\n"
                        },
                        {
                            "line": 615,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x9a);\n"
                        },
                        {
                            "line": 616,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xe6);\n"
                        },
                        {
                            "line": 617,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xa4);\n"
                        },
                        {
                            "line": 618,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xc8);\n"
                        },
                        {
                            "line": 619,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x0c);\n"
                        },
                        {
                            "line": 620,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xad);\n"
                        },
                        {
                            "line": 621,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xcc);\n"
                        },
                        {
                            "line": 622,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0xbb);\n"
                        },
                        {
                            "line": 623,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x7f);\n"
                        },
                        {
                            "line": 624,
                            "file": "quic_shim.ivy",
                            "instruction": "            salt := salt.append(0x0a);\n"
                        },
                        {
                            "line": 625,
                            "file": "quic_shim.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 626,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 627,
                            "file": "quic_shim.ivy",
                            "instruction": "        call show_set_initial_keys(ikm, 0);\n"
                        },
                        {
                            "line": 628,
                            "file": "quic_shim.ivy",
                            "instruction": "        call tls_api.upper.set_initial_keys(0,salt,ikm);\n"
                        },
                        {
                            "line": 629,
                            "file": "quic_shim.ivy",
                            "instruction": "        \n"
                        },
                        {
                            "line": 630,
                            "file": "quic_shim.ivy",
                            "instruction": "        initial_keys_set(dcid) := true;\n"
                        },
                        {
                            "line": 631,
                            "file": "quic_shim.ivy",
                            "instruction": "    }\n"
                        },
                        {
                            "line": 632,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 633,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 634,
                            "file": "quic_shim.ivy",
                            "instruction": "import action show_set_initial_keys(ik: stream_data, id: tls_api.id)\n"
                        },
                        {
                            "line": 635,
                            "file": "quic_shim.ivy",
                            "instruction": "import action show_version(ver:version)\n"
                        },
                        {
                            "line": 636,
                            "file": "quic_shim.ivy",
                            "instruction": "import action show_kk\n"
                        },
                        {
                            "line": 637,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 638,
                            "file": "quic_shim.ivy",
                            "instruction": "# TLS client Version Negotiation response shim\n"
                        },
                        {
                            "line": 639,
                            "file": "quic_shim.ivy",
                            "instruction": "# ============================================\n"
                        },
                        {
                            "line": 640,
                            "file": "quic_shim.ivy",
                            "instruction": "#\n"
                        },
                        {
                            "line": 641,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 642,
                            "file": "quic_shim.ivy",
                            "instruction": "#   If the version selected by the client is not acceptable to the\n"
                        },
                        {
                            "line": 643,
                            "file": "quic_shim.ivy",
                            "instruction": "#   server, the server responds with a Version Negotiation packet; see\n"
                        },
                        {
                            "line": 644,
                            "file": "quic_shim.ivy",
                            "instruction": "#   Section 17.2.1.  This includes a list of versions that the server\n"
                        },
                        {
                            "line": 645,
                            "file": "quic_shim.ivy",
                            "instruction": "#   will accept.  An endpoint MUST NOT send a Version Negotiation packet\n"
                        },
                        {
                            "line": 646,
                            "file": "quic_shim.ivy",
                            "instruction": "#   in response to receiving a Version Negotiation packet.\n"
                        },
                        {
                            "line": 647,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 648,
                            "file": "quic_shim.ivy",
                            "instruction": "#   This system allows a server to process packets with unsupported\n"
                        },
                        {
                            "line": 649,
                            "file": "quic_shim.ivy",
                            "instruction": "#   versions without retaining state.  Though either the Initial packet\n"
                        },
                        {
                            "line": 650,
                            "file": "quic_shim.ivy",
                            "instruction": "#   or the Version Negotiation packet that is sent in response could be\n"
                        },
                        {
                            "line": 651,
                            "file": "quic_shim.ivy",
                            "instruction": "#   lost, the client will send new packets until it successfully receives\n"
                        },
                        {
                            "line": 652,
                            "file": "quic_shim.ivy",
                            "instruction": "#   a response or it abandons the connection attempt.  As a result, the\n"
                        },
                        {
                            "line": 653,
                            "file": "quic_shim.ivy",
                            "instruction": "#   client discards all state for the connection and does not send any\n"
                        },
                        {
                            "line": 654,
                            "file": "quic_shim.ivy",
                            "instruction": "#   more packets on the connection.\n"
                        },
                        {
                            "line": 655,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 656,
                            "file": "quic_shim.ivy",
                            "instruction": "#   Version Negotiation packets are designed to allow for functionality\n"
                        },
                        {
                            "line": 657,
                            "file": "quic_shim.ivy",
                            "instruction": "#   to be defined in the future that allows QUIC to negotiate the version\n"
                        },
                        {
                            "line": 658,
                            "file": "quic_shim.ivy",
                            "instruction": "#   of QUIC to use for a connection.  Future Standards Track\n"
                        },
                        {
                            "line": 659,
                            "file": "quic_shim.ivy",
                            "instruction": "#   specifications might change how implementations that support multiple\n"
                        },
                        {
                            "line": 660,
                            "file": "quic_shim.ivy",
                            "instruction": "#   versions of QUIC react to Version Negotiation packets received in\n"
                        },
                        {
                            "line": 661,
                            "file": "quic_shim.ivy",
                            "instruction": "#   response to an attempt to establish a connection using this version.\n"
                        },
                        {
                            "line": 662,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 663,
                            "file": "quic_shim.ivy",
                            "instruction": "#   We simply resend Initial packet\n"
                        },
                        {
                            "line": 664,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 665,
                            "file": "quic_shim.ivy",
                            "instruction": "after tls_client_version_response(src:ip.endpoint,dst:ip.endpoint,spkt: stream_data) {\n"
                        },
                        {
                            "line": 666,
                            "file": "quic_shim.ivy",
                            "instruction": "    var tls_id := src_tls_id(src);\n"
                        },
                        {
                            "line": 667,
                            "file": "quic_shim.ivy",
                            "instruction": "    var dcil : stream_pos := bfe[0][7](spkt.value(5));\n"
                        },
                        {
                            "line": 668,
                            "file": "quic_shim.ivy",
                            "instruction": "    var dcid := prot.bytes_to_cid(spkt.segment(6,6+dcil));\n"
                        },
                        {
                            "line": 669,
                            "file": "quic_shim.ivy",
                            "instruction": "    var scil : stream_pos := bfe[0][7](spkt.value(6+dcil));\n"
                        },
                        {
                            "line": 670,
                            "file": "quic_shim.ivy",
                            "instruction": "    var scid := prot.bytes_to_cid(spkt.segment(7+dcil,7+dcil+scil));\n"
                        },
                        {
                            "line": 671,
                            "file": "quic_shim.ivy",
                            "instruction": "    var versions_vn := spkt.segment(3 +  4  + dcil + scil,spkt.end);\n"
                        },
                        {
                            "line": 672,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 673,
                            "file": "quic_shim.ivy",
                            "instruction": "    call export_length_cid_extension(dcil,scil);\n"
                        },
                        {
                            "line": 674,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 675,
                            "file": "quic_shim.ivy",
                            "instruction": "    if version_not_found(src) {\n"
                        },
                        {
                            "line": 676,
                            "file": "quic_shim.ivy",
                            "instruction": "        versions_vn := spkt.segment(0,spkt.end);\n"
                        },
                        {
                            "line": 677,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 678,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 679,
                            "file": "quic_shim.ivy",
                            "instruction": "    var sv := versions.empty;\n"
                        },
                        {
                            "line": 680,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 681,
                            "file": "quic_shim.ivy",
                            "instruction": "    var idx := versions_vn.begin;\n"
                        },
                        {
                            "line": 682,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 683,
                            "file": "quic_shim.ivy",
                            "instruction": "    while (~versions_vn.value(idx) =  0xff | ~versions_vn.value(idx) =  0x00) &  version_not_found(src) {\n"
                        },
                        {
                            "line": 684,
                            "file": "quic_shim.ivy",
                            "instruction": "        idx := idx.next;\n"
                        },
                        {
                            "line": 685,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 686,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 687,
                            "file": "quic_shim.ivy",
                            "instruction": "    while idx < versions_vn.end {\n"
                        },
                        {
                            "line": 688,
                            "file": "quic_shim.ivy",
                            "instruction": "        var i : stream_pos := 0;\n"
                        },
                        {
                            "line": 689,
                            "file": "quic_shim.ivy",
                            "instruction": "        var v := stream_data.empty;\n"
                        },
                        {
                            "line": 690,
                            "file": "quic_shim.ivy",
                            "instruction": "        while i < 4 {\n"
                        },
                        {
                            "line": 691,
                            "file": "quic_shim.ivy",
                            "instruction": "            v := v.append(versions_vn.value(idx));\n"
                        },
                        {
                            "line": 692,
                            "file": "quic_shim.ivy",
                            "instruction": "            i := i + 1;\n"
                        },
                        {
                            "line": 693,
                            "file": "quic_shim.ivy",
                            "instruction": "            idx := idx.next;\n"
                        },
                        {
                            "line": 694,
                            "file": "quic_shim.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 695,
                            "file": "quic_shim.ivy",
                            "instruction": "        sv := sv.append(v);\n"
                        },
                        {
                            "line": 696,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 697,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 698,
                            "file": "quic_shim.ivy",
                            "instruction": "    var idxx : index := 0;\n"
                        },
                        {
                            "line": 699,
                            "file": "quic_shim.ivy",
                            "instruction": "    var idxx_bv : index := 0;\n"
                        },
                        {
                            "line": 700,
                            "file": "quic_shim.ivy",
                            "instruction": "    while idxx < sv.end {\n"
                        },
                        {
                            "line": 701,
                            "file": "quic_shim.ivy",
                            "instruction": "        var ii : index := 0 ;\n"
                        },
                        {
                            "line": 702,
                            "file": "quic_shim.ivy",
                            "instruction": "        while ii < supported_versions.end {\n"
                        },
                        {
                            "line": 703,
                            "file": "quic_shim.ivy",
                            "instruction": "            if sv.value(idxx) = supported_versions.value(ii) {\n"
                        },
                        {
                            "line": 704,
                            "file": "quic_shim.ivy",
                            "instruction": "                #call recv_vn_packet_nn(src,dst,spkt);\n"
                        },
                        {
                            "line": 705,
                            "file": "quic_shim.ivy",
                            "instruction": "                #take the most recent supported version\n"
                        },
                        {
                            "line": 706,
                            "file": "quic_shim.ivy",
                            "instruction": "                final_version := supported_versions_bv.value(idxx_bv);\n"
                        },
                        {
                            "line": 707,
                            "file": "quic_shim.ivy",
                            "instruction": "                idxx_bv := idxx_bv.next;\n"
                        },
                        {
                            "line": 708,
                            "file": "quic_shim.ivy",
                            "instruction": "            };\n"
                        },
                        {
                            "line": 709,
                            "file": "quic_shim.ivy",
                            "instruction": "            ii := ii.next;\n"
                        },
                        {
                            "line": 710,
                            "file": "quic_shim.ivy",
                            "instruction": "        };\n"
                        },
                        {
                            "line": 711,
                            "file": "quic_shim.ivy",
                            "instruction": "        idxx := idxx.next;\n"
                        },
                        {
                            "line": 712,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 713,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 714,
                            "file": "quic_shim.ivy",
                            "instruction": "    if final_version ~= 0x00000000 {\n"
                        },
                        {
                            "line": 715,
                            "file": "quic_shim.ivy",
                            "instruction": "        version_negociated := true;\n"
                        },
                        {
                            "line": 716,
                            "file": "quic_shim.ivy",
                            "instruction": "        var pkt := pkt_serdes_vn.from_bytes(spkt);\n"
                        },
                        {
                            "line": 717,
                            "file": "quic_shim.ivy",
                            "instruction": "        pkt.ptype := quic_packet_type.version_negociation; # no real type so hardcode\n"
                        },
                        {
                            "line": 718,
                            "file": "quic_shim.ivy",
                            "instruction": "        call recv_vn_pkt(src,dst,pkt);\n"
                        },
                        {
                            "line": 719,
                            "file": "quic_shim.ivy",
                            "instruction": "        call infer_tls_events_vn(src,dst,pkt);\n"
                        },
                        {
                            "line": 720,
                            "file": "quic_shim.ivy",
                            "instruction": "        call packet_event_vn(src,dst,pkt);       # also an inferred event\n"
                        },
                        {
                            "line": 721,
                            "file": "quic_shim.ivy",
                            "instruction": "    } else {\n"
                        },
                        {
                            "line": 722,
                            "file": "quic_shim.ivy",
                            "instruction": "        version_not_found(src) := true;\n"
                        },
                        {
                            "line": 723,
                            "file": "quic_shim.ivy",
                            "instruction": "        call version_not_found_event;\n"
                        },
                        {
                            "line": 724,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 725,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 726,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 727,
                            "file": "quic_shim.ivy",
                            "instruction": "import action recv_vn_pkt(src:ip.endpoint,dst:ip.endpoint,spkt: quic_packet_vn)\n"
                        },
                        {
                            "line": 728,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 729,
                            "file": "quic_shim.ivy",
                            "instruction": "after tls_client_retry_response(src:ip.endpoint,dst:ip.endpoint,spkt: stream_data) {\n"
                        },
                        {
                            "line": 730,
                            "file": "quic_shim.ivy",
                            "instruction": "    header_retry := bfe[0][7](spkt.value(0));\n"
                        },
                        {
                            "line": 731,
                            "file": "quic_shim.ivy",
                            "instruction": "    var dcil : stream_pos := bfe[0][7](spkt.value(5));\n"
                        },
                        {
                            "line": 732,
                            "file": "quic_shim.ivy",
                            "instruction": "    var dcid := prot.bytes_to_cid(spkt.segment(6,6+dcil));\n"
                        },
                        {
                            "line": 733,
                            "file": "quic_shim.ivy",
                            "instruction": "    var scil : stream_pos := bfe[0][7](spkt.value(6+dcil));\n"
                        },
                        {
                            "line": 734,
                            "file": "quic_shim.ivy",
                            "instruction": "    var scid := prot.bytes_to_cid(spkt.segment(7+dcil,7+dcil+scil));\n"
                        },
                        {
                            "line": 735,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 736,
                            "file": "quic_shim.ivy",
                            "instruction": "    call export_length_cid_extension(scil,dcil);\n"
                        },
                        {
                            "line": 737,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 738,
                            "file": "quic_shim.ivy",
                            "instruction": "    var pkt := pkt_serdes_retry.from_bytes(spkt);\n"
                        },
                        {
                            "line": 739,
                            "file": "quic_shim.ivy",
                            "instruction": "    pkt.ptype := quic_packet_type.retry;\n"
                        },
                        {
                            "line": 740,
                            "file": "quic_shim.ivy",
                            "instruction": "    call recv_retry_pkt(src,dst,pkt);\n"
                        },
                        {
                            "line": 741,
                            "file": "quic_shim.ivy",
                            "instruction": "    call infer_tls_events_retry(src,dst,pkt);\n"
                        },
                        {
                            "line": 742,
                            "file": "quic_shim.ivy",
                            "instruction": "    retry_token(dcid) := pkt.token;\n"
                        },
                        {
                            "line": 743,
                            "file": "quic_shim.ivy",
                            "instruction": "    if pkt.token.end = 0 {\n"
                        },
                        {
                            "line": 744,
                            "file": "quic_shim.ivy",
                            "instruction": "        zero_length_token := true;\n"
                        },
                        {
                            "line": 745,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 746,
                            "file": "quic_shim.ivy",
                            "instruction": "    retry_response(dcid) := true;\n"
                        },
                        {
                            "line": 747,
                            "file": "quic_shim.ivy",
                            "instruction": "    call packet_event_retry(src,dst,pkt);       # also an inferred event\n"
                        },
                        {
                            "line": 748,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 749,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 750,
                            "file": "quic_shim.ivy",
                            "instruction": "after tls_client_0rtt_response(src:ip.endpoint,dst:ip.endpoint,spkt: stream_data) {\n"
                        },
                        {
                            "line": 751,
                            "file": "quic_shim.ivy",
                            "instruction": "    if nclients > 1 {\n"
                        },
                        {
                            "line": 752,
                            "file": "quic_shim.ivy",
                            "instruction": "        var cdx := clients.clients.begin;\n"
                        },
                        {
                            "line": 753,
                            "file": "quic_shim.ivy",
                            "instruction": "        while cdx < clients.clients.end {\n"
                        },
                        {
                            "line": 754,
                            "file": "quic_shim.ivy",
                            "instruction": "            var cc := clients.clients.value(cdx);\n"
                        },
                        {
                            "line": 755,
                            "file": "quic_shim.ivy",
                            "instruction": "            # call cc.set_ep(src);\n"
                        },
                        {
                            "line": 756,
                            "file": "quic_shim.ivy",
                            "instruction": "            # if some(cf:endpoint) cc *> cf {\n"
                        },
                        {
                            "line": 757,
                            "file": "quic_shim.ivy",
                            "instruction": "            #     cf.set_ep(src); # TODO: migration?\n"
                        },
                        {
                            "line": 758,
                            "file": "quic_shim.ivy",
                            "instruction": "            # }\n"
                        },
                        {
                            "line": 759,
                            "file": "quic_shim.ivy",
                            "instruction": "            cdx := cdx.next;\n"
                        },
                        {
                            "line": 760,
                            "file": "quic_shim.ivy",
                            "instruction": "        }\n"
                        },
                        {
                            "line": 761,
                            "file": "quic_shim.ivy",
                            "instruction": "    } else {\n"
                        },
                        {
                            "line": 762,
                            "file": "quic_shim.ivy",
                            "instruction": "        #client.set_ep(src); # TODO: migration?\n"
                        },
                        {
                            "line": 763,
                            "file": "quic_shim.ivy",
                            "instruction": "        #if ~endpoint_to_pid(src) = endpoint_id.mim {\n"
                        },
                        {
                            "line": 764,
                            "file": "quic_shim.ivy",
                            "instruction": "        call client.set_ep(src);\n"
                        },
                        {
                            "line": 765,
                            "file": "quic_shim.ivy",
                            "instruction": "        #}\n"
                        },
                        {
                            "line": 766,
                            "file": "quic_shim.ivy",
                            "instruction": "    }\n"
                        },
                        {
                            "line": 767,
                            "file": "quic_shim.ivy",
                            "instruction": "    \n"
                        },
                        {
                            "line": 768,
                            "file": "quic_shim.ivy",
                            "instruction": "\tvar ver := bytes_to_version(spkt.segment(1,5));\n"
                        },
                        {
                            "line": 769,
                            "file": "quic_shim.ivy",
                            "instruction": "    var lens := spkt.value(5);\n"
                        },
                        {
                            "line": 770,
                            "file": "quic_shim.ivy",
                            "instruction": "    var dcil : stream_pos := bfe[0][7](spkt.value(5));\n"
                        },
                        {
                            "line": 771,
                            "file": "quic_shim.ivy",
                            "instruction": "    var ikm := cid_to_bytes(0,1); # dcid\n"
                        },
                        {
                            "line": 772,
                            "file": "quic_shim.ivy",
                            "instruction": "\tif(~dcil = 0) {\n"
                        },
                        {
                            "line": 773,
                            "file": "quic_shim.ivy",
                            "instruction": "        client_initial_dcil := dcil;\n"
                        },
                        {
                            "line": 774,
                            "file": "quic_shim.ivy",
                            "instruction": "\t    ikm := spkt.segment(6,6+dcil); # dcid\n"
                        },
                        {
                            "line": 775,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 776,
                            "file": "quic_shim.ivy",
                            "instruction": "    var scil : stream_pos := bfe[0][7](spkt.value(6+dcil));\n"
                        },
                        {
                            "line": 777,
                            "file": "quic_shim.ivy",
                            "instruction": "    var skm := cid_to_bytes(0,1); # scid\n"
                        },
                        {
                            "line": 778,
                            "file": "quic_shim.ivy",
                            "instruction": "    if(~scil = 0) {\n"
                        },
                        {
                            "line": 779,
                            "file": "quic_shim.ivy",
                            "instruction": "        client_initial_scil := scil;\n"
                        },
                        {
                            "line": 780,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tclient_non_zero_scil := true;\t\n"
                        },
                        {
                            "line": 781,
                            "file": "quic_shim.ivy",
                            "instruction": "\t    skm := spkt.segment(6+dcil+1,6+dcil+1+scil); # scid\n"
                        },
                        {
                            "line": 782,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 783,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 784,
                            "file": "quic_shim.ivy",
                            "instruction": "    #  When an Initial packet is sent by a client that has not previously\n"
                        },
                        {
                            "line": 785,
                            "file": "quic_shim.ivy",
                            "instruction": "    #    received an Initial or Retry packet from the server, the client\n"
                        },
                        {
                            "line": 786,
                            "file": "quic_shim.ivy",
                            "instruction": "    #    populates the Destination Connection ID field with an unpredictable\n"
                        },
                        {
                            "line": 787,
                            "file": "quic_shim.ivy",
                            "instruction": "    #    value.  This Destination Connection ID MUST be at least 8 bytes in\n"
                        },
                        {
                            "line": 788,
                            "file": "quic_shim.ivy",
                            "instruction": "    #    length\n"
                        },
                        {
                            "line": 789,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 790,
                            "file": "quic_shim.ivy",
                            "instruction": "    require dcil >= 8;\n"
                        },
                        {
                            "line": 791,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 792,
                            "file": "quic_shim.ivy",
                            "instruction": "    client_initial_dcid := bytes_to_cid(ikm);\n"
                        },
                        {
                            "line": 793,
                            "file": "quic_shim.ivy",
                            "instruction": "    client_initial_scid := bytes_to_cid(skm); # skm\n"
                        },
                        {
                            "line": 794,
                            "file": "quic_shim.ivy",
                            "instruction": "    call export_length_cid_extension(scil,dcil);\n"
                        },
                        {
                            "line": 795,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 796,
                            "file": "quic_shim.ivy",
                            "instruction": "    var pkt := pkt_serdes_0rtt.from_bytes(spkt);\n"
                        },
                        {
                            "line": 797,
                            "file": "quic_shim.ivy",
                            "instruction": "    pkt.ptype := quic_packet_type.zero_rtt;\n"
                        },
                        {
                            "line": 798,
                            "file": "quic_shim.ivy",
                            "instruction": "    call recv_0rtt_pkt(src,dst,pkt);\n"
                        },
                        {
                            "line": 799,
                            "file": "quic_shim.ivy",
                            "instruction": "    call infer_tls_events_0rtt(src,dst,pkt);\n"
                        },
                        {
                            "line": 800,
                            "file": "quic_shim.ivy",
                            "instruction": "    #conn_enc_level(src,scid) := quic_packet_type.initial;\n"
                        },
                        {
                            "line": 801,
                            "file": "quic_shim.ivy",
                            "instruction": "    call packet_event_0rtt(src,dst,pkt);       # also an inferred event\n"
                        },
                        {
                            "line": 802,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 803,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 804,
                            "file": "quic_shim.ivy",
                            "instruction": "#TODO no error trigger by impl when retry without parameter => tocheck\n"
                        },
                        {
                            "line": 805,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 806,
                            "file": "quic_shim.ivy",
                            "instruction": "import action recv_retry_pkt(src:ip.endpoint,dst:ip.endpoint,spkt: quic_packet_retry)\n"
                        },
                        {
                            "line": 807,
                            "file": "quic_shim.ivy",
                            "instruction": "import action recv_0rtt_pkt(src:ip.endpoint,dst:ip.endpoint,spkt: quic_packet_0rtt)\n"
                        },
                        {
                            "line": 808,
                            "file": "quic_shim.ivy",
                            "instruction": "import action version_not_found_event\n"
                        },
                        {
                            "line": 809,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 810,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 811,
                            "file": "quic_shim.ivy",
                            "instruction": "# Procedures\n"
                        },
                        {
                            "line": 812,
                            "file": "quic_shim.ivy",
                            "instruction": "# ----------\n"
                        },
                        {
                            "line": 813,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 814,
                            "file": "quic_shim.ivy",
                            "instruction": "# To estimate the sequence number of packets, we have to know the encryption level.\n"
                        },
                        {
                            "line": 815,
                            "file": "quic_shim.ivy",
                            "instruction": "# This action gets the encryption level from the packet header.\n"
                        },
                        {
                            "line": 816,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 817,
                            "file": "quic_shim.ivy",
                            "instruction": "action packet_encryption_level(h:prot.header_info) returns (e:quic_packet_type) = {\n"
                        },
                        {
                            "line": 818,
                            "file": "quic_shim.ivy",
                            "instruction": "    # if zero_rtt_allowed {\n"
                        },
                        {
                            "line": 819,
                            "file": "quic_shim.ivy",
                            "instruction": "        #var scid := packet_scid(h);\n"
                        },
                        {
                            "line": 820,
                            "file": "quic_shim.ivy",
                            "instruction": "        e := quic_packet_type.zero_rtt if ~h.hdr_long # & ~established_1rtt_keys(scid)\n"
                        },
                        {
                            "line": 821,
                            "file": "quic_shim.ivy",
                            "instruction": "            else (quic_packet_type.initial if h.hdr_type = 0x7f \n"
                        },
                        {
                            "line": 822,
                            "file": "quic_shim.ivy",
                            "instruction": "                  else quic_packet_type.handshake);\n"
                        },
                        {
                            "line": 823,
                            "file": "quic_shim.ivy",
                            "instruction": "    # } else {\n"
                        },
                        {
                            "line": 824,
                            "file": "quic_shim.ivy",
                            "instruction": "        # e := quic_packet_type.one_rtt if ~h.hdr_long\n"
                        },
                        {
                            "line": 825,
                            "file": "quic_shim.ivy",
                            "instruction": "        #     else (quic_packet_type.initial if h.hdr_type = 0x7f \n"
                        },
                        {
                            "line": 826,
                            "file": "quic_shim.ivy",
                            "instruction": "        #           else quic_packet_type.handshake);\n"
                        },
                        {
                            "line": 827,
                            "file": "quic_shim.ivy",
                            "instruction": "    # }\n"
                        },
                        {
                            "line": 828,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 829,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 830,
                            "file": "quic_shim.ivy",
                            "instruction": "action packet_encryption_level_up(h:prot.header_info) returns (e:quic_packet_type) = {\n"
                        },
                        {
                            "line": 831,
                            "file": "quic_shim.ivy",
                            "instruction": "    # if zero_rtt_allowed {\n"
                        },
                        {
                            "line": 832,
                            "file": "quic_shim.ivy",
                            "instruction": "        #var scid := packet_scid(h);\n"
                        },
                        {
                            "line": 833,
                            "file": "quic_shim.ivy",
                            "instruction": "        e := quic_packet_type.zero_rtt if ~h.hdr_long #& ~established_1rtt_keys(scid)\n"
                        },
                        {
                            "line": 834,
                            "file": "quic_shim.ivy",
                            "instruction": "            else (quic_packet_type.initial if bvand(h.hdr_type,0x30) = 0x00\n"
                        },
                        {
                            "line": 835,
                            "file": "quic_shim.ivy",
                            "instruction": "                  else quic_packet_type.handshake);\n"
                        },
                        {
                            "line": 836,
                            "file": "quic_shim.ivy",
                            "instruction": "    # } else {\n"
                        },
                        {
                            "line": 837,
                            "file": "quic_shim.ivy",
                            "instruction": "        # e := quic_packet_type.one_rtt if ~h.hdr_long\n"
                        },
                        {
                            "line": 838,
                            "file": "quic_shim.ivy",
                            "instruction": "        #     else (quic_packet_type.initial if bvand(h.hdr_type,0x30) = 0x00\n"
                        },
                        {
                            "line": 839,
                            "file": "quic_shim.ivy",
                            "instruction": "        #           else quic_packet_type.handshake);\n"
                        },
                        {
                            "line": 840,
                            "file": "quic_shim.ivy",
                            "instruction": "    # }\n"
                        },
                        {
                            "line": 841,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 842,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 843,
                            "file": "quic_shim.ivy",
                            "instruction": "# To get the reference packet number for a packet, we need to know the source connection\n"
                        },
                        {
                            "line": 844,
                            "file": "quic_shim.ivy",
                            "instruction": "# id, which is not present in short packets. Here we get it from history.\n"
                        },
                        {
                            "line": 845,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 846,
                            "file": "quic_shim.ivy",
                            "instruction": "action packet_scid(h:prot.header_info) returns (scid:cid) = {\n"
                        },
                        {
                            "line": 847,
                            "file": "quic_shim.ivy",
                            "instruction": "    if h.hdr_long {\n"
                        },
                        {
                            "line": 848,
                            "file": "quic_shim.ivy",
                            "instruction": "        scid := h.scid;\n"
                        },
                        {
                            "line": 849,
                            "file": "quic_shim.ivy",
                            "instruction": "    } else {\n"
                        },
                        {
                            "line": 850,
                            "file": "quic_shim.ivy",
                            "instruction": "        if used_cid(h.dcid) {\n"
                        },
                        {
                            "line": 851,
                            "file": "quic_shim.ivy",
                            "instruction": "            scid := connected_to(h.dcid);\n"
                        },
                        {
                            "line": 852,
                            "file": "quic_shim.ivy",
                            "instruction": "        } else {\n"
                        },
                        {
                            "line": 853,
                            "file": "quic_shim.ivy",
                            "instruction": "            scid := 0;\n"
                        },
                        {
                            "line": 854,
                            "file": "quic_shim.ivy",
                            "instruction": "        }\n"
                        },
                        {
                            "line": 855,
                            "file": "quic_shim.ivy",
                            "instruction": "    }\n"
                        },
                        {
                            "line": 856,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 857,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 858,
                            "file": "quic_shim.ivy",
                            "instruction": "# To encrypt and decrypt packets we need to know the true packet number, which\n"
                        },
                        {
                            "line": 859,
                            "file": "quic_shim.ivy",
                            "instruction": "# must be inferred from truncated number in the packet and the packet number history.\n"
                        },
                        {
                            "line": 860,
                            "file": "quic_shim.ivy",
                            "instruction": "# As a workaround, we use `last_pkt_num(scid,e)` where `e` is the\n"
                        },
                        {
                            "line": 861,
                            "file": "quic_shim.ivy",
                            "instruction": "# encryption level. We infer the encryption level from the packet type.\n"
                        },
                        {
                            "line": 862,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 863,
                            "file": "quic_shim.ivy",
                            "instruction": "action reference_pkt_num(spkt:stream_data,decrypt:bool) returns (pnum:pkt_num) = {\n"
                        },
                        {
                            "line": 864,
                            "file": "quic_shim.ivy",
                            "instruction": "    var h := prot.get_header_info(spkt,decrypt);\n"
                        },
                        {
                            "line": 865,
                            "file": "quic_shim.ivy",
                            "instruction": "    var e := packet_encryption_level(h);\n"
                        },
                        {
                            "line": 866,
                            "file": "quic_shim.ivy",
                            "instruction": "    var scid := packet_scid(h);\n"
                        },
                        {
                            "line": 867,
                            "file": "quic_shim.ivy",
                            "instruction": "    last_packet_type(scid)   := packet_encryption_level_up(h);\n"
                        },
                        {
                            "line": 868,
                            "file": "quic_shim.ivy",
                            "instruction": "    last_packet_length(scid) := h.payload_length;\n"
                        },
                        {
                            "line": 869,
                            "file": "quic_shim.ivy",
                            "instruction": "    pnum := last_pkt_num(scid,e);\n"
                        },
                        {
                            "line": 870,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 871,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 872,
                            "file": "quic_shim.ivy",
                            "instruction": "action is_padding_packet(spkt:stream_data) returns (is_padding:bool) = {\n"
                        },
                        {
                            "line": 873,
                            "file": "quic_shim.ivy",
                            "instruction": "    <<<\n"
                        },
                        {
                            "line": 874,
                            "file": "quic_shim.ivy",
                            "instruction": "    is_padding = true;\n"
                        },
                        {
                            "line": 875,
                            "file": "quic_shim.ivy",
                            "instruction": "    for (unsigned i = 0; i < spkt.size(); i++)\n"
                        },
                        {
                            "line": 876,
                            "file": "quic_shim.ivy",
                            "instruction": "\tis_padding = is_padding && (spkt[i] == 0);\n"
                        },
                        {
                            "line": 877,
                            "file": "quic_shim.ivy",
                            "instruction": "    >>>\n"
                        },
                        {
                            "line": 878,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 879,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 880,
                            "file": "quic_shim.ivy",
                            "instruction": "action is_random_padding_packet(spkt:stream_data) returns (is_padding:bool) = {\n"
                        },
                        {
                            "line": 881,
                            "file": "quic_shim.ivy",
                            "instruction": "    var h := prot.get_header_info(spkt,true);\n"
                        },
                        {
                            "line": 882,
                            "file": "quic_shim.ivy",
                            "instruction": "    var e := packet_encryption_level_up(h);\n"
                        },
                        {
                            "line": 883,
                            "file": "quic_shim.ivy",
                            "instruction": "    if last_packet_type(h.scid) = quic_packet_type.initial & last_packet_length(h.scid) < 1200 { # Hack\n"
                        },
                        {
                            "line": 884,
                            "file": "quic_shim.ivy",
                            "instruction": "\t    is_padding := true;\t\n"
                        },
                        {
                            "line": 885,
                            "file": "quic_shim.ivy",
                            "instruction": "    } else {\n"
                        },
                        {
                            "line": 886,
                            "file": "quic_shim.ivy",
                            "instruction": "\t    is_padding := false;\t\n"
                        },
                        {
                            "line": 887,
                            "file": "quic_shim.ivy",
                            "instruction": "    };\n"
                        },
                        {
                            "line": 888,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 889,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 890,
                            "file": "quic_shim.ivy",
                            "instruction": "# To send and receive packets, we need to serialize and deserialize them.\n"
                        },
                        {
                            "line": 891,
                            "file": "quic_shim.ivy",
                            "instruction": "# This object allows that.\n"
                        },
                        {
                            "line": 892,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 893,
                            "file": "quic_shim.ivy",
                            "instruction": "instance pkt_serdes : serdes(quic_packet,stream_data,quic_ser,quic_deser)\n"
                        },
                        {
                            "line": 894,
                            "file": "quic_shim.ivy",
                            "instruction": "instance pkt_serdes_vn : serdes(quic_packet_vn,stream_data,quic_ser_vn,quic_deser_vn)\n"
                        },
                        {
                            "line": 895,
                            "file": "quic_shim.ivy",
                            "instruction": "instance pkt_serdes_retry : serdes(quic_packet_retry,stream_data,quic_ser_retry,quic_deser_retry)\n"
                        },
                        {
                            "line": 896,
                            "file": "quic_shim.ivy",
                            "instruction": "instance pkt_serdes_0rtt_coal : serdes(quic_packet_coal_0rtt,stream_data,quic_ser_zerortt,quic_deser_zerortt)\n"
                        },
                        {
                            "line": 897,
                            "file": "quic_shim.ivy",
                            "instruction": "instance pkt_serdes_0rtt : serdes(quic_packet_0rtt,stream_data,quic_ser_zerortt,quic_deser_zerortt)\n"
                        },
                        {
                            "line": 898,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 899,
                            "file": "quic_shim.ivy",
                            "instruction": "# To send and receive packets (for MiM agent), we need to serialize and deserialize them.\n"
                        },
                        {
                            "line": 900,
                            "file": "quic_shim.ivy",
                            "instruction": "# This object allows that.\n"
                        },
                        {
                            "line": 901,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 902,
                            "file": "quic_shim.ivy",
                            "instruction": "instance forged_protected_pkt_serdes : serdes(forged_protected_quic_packet,stream_data,quic_ser_forged,quic_deser_forged)\n"
                        },
                        {
                            "line": 903,
                            "file": "quic_shim.ivy",
                            "instruction": "instance forged_pkt_serdes : serdes(forged_quic_packet,stream_data,quic_ser,quic_deser)\n"
                        },
                        {
                            "line": 904,
                            "file": "quic_shim.ivy",
                            "instruction": "instance forged_pkt_serdes_vn : serdes(forged_quic_packet_vn,stream_data,quic_ser_vn,quic_deser_vn)\n"
                        },
                        {
                            "line": 905,
                            "file": "quic_shim.ivy",
                            "instruction": "instance forged_pkt_serdes_retry : serdes(forged_quic_packet_retry,stream_data,quic_ser_retry,quic_deser_retry)\n"
                        },
                        {
                            "line": 906,
                            "file": "quic_shim.ivy",
                            "instruction": "instance replayed_pkt_serdes_0rtt : serdes(replayed_quic_packet_0rtt,stream_data,quic_ser_zerortt,quic_deser_zerortt)\n"
                        },
                        {
                            "line": 907,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 908,
                            "file": "quic_shim.ivy",
                            "instruction": "# Convert a CID to bytes. TODO: This doesn't belong here and it shouldn't\n"
                        },
                        {
                            "line": 909,
                            "file": "quic_shim.ivy",
                            "instruction": "# be written in C++!\n"
                        },
                        {
                            "line": 910,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 911,
                            "file": "quic_shim.ivy",
                            "instruction": "action cid_to_bytes(c:cid,len:cid_length) returns(res:stream_data) = {\n"
                        },
                        {
                            "line": 912,
                            "file": "quic_shim.ivy",
                            "instruction": "    <<<\n"
                        },
                        {
                            "line": 913,
                            "file": "quic_shim.ivy",
                            "instruction": "    res.resize(len);\n"
                        },
                        {
                            "line": 914,
                            "file": "quic_shim.ivy",
                            "instruction": "    for (unsigned i = 0; i < len; i++) {\n"
                        },
                        {
                            "line": 915,
                            "file": "quic_shim.ivy",
                            "instruction": "        res[len-i-1] = 0xff & (c.val >> (i * 8));\n"
                        },
                        {
                            "line": 916,
                            "file": "quic_shim.ivy",
                            "instruction": "    }\n"
                        },
                        {
                            "line": 917,
                            "file": "quic_shim.ivy",
                            "instruction": "    >>>\n"
                        },
                        {
                            "line": 918,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 919,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 920,
                            "file": "quic_shim.ivy",
                            "instruction": "action cid_to_us(c:cid) returns(res:tls_api.id) = {\n"
                        },
                        {
                            "line": 921,
                            "file": "quic_shim.ivy",
                            "instruction": "    <<<\n"
                        },
                        {
                            "line": 922,
                            "file": "quic_shim.ivy",
                            "instruction": "    res = c.val;\n"
                        },
                        {
                            "line": 923,
                            "file": "quic_shim.ivy",
                            "instruction": "    >>>\n"
                        },
                        {
                            "line": 924,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 925,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 926,
                            "file": "quic_shim.ivy",
                            "instruction": "action cidseq_to_seqnum(c:cid_seq) returns(res:pkt_num) = {\n"
                        },
                        {
                            "line": 927,
                            "file": "quic_shim.ivy",
                            "instruction": "    <<<\n"
                        },
                        {
                            "line": 928,
                            "file": "quic_shim.ivy",
                            "instruction": "    res = c.val;\n"
                        },
                        {
                            "line": 929,
                            "file": "quic_shim.ivy",
                            "instruction": "    >>>\n"
                        },
                        {
                            "line": 930,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 931,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 932,
                            "file": "quic_shim.ivy",
                            "instruction": "action seqnum_to_streampos(c:pkt_num) returns(res:stream_pos) = {\n"
                        },
                        {
                            "line": 933,
                            "file": "quic_shim.ivy",
                            "instruction": "    <<<\n"
                        },
                        {
                            "line": 934,
                            "file": "quic_shim.ivy",
                            "instruction": "    res = c;\n"
                        },
                        {
                            "line": 935,
                            "file": "quic_shim.ivy",
                            "instruction": "    >>>\n"
                        },
                        {
                            "line": 936,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 937,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 938,
                            "file": "quic_shim.ivy",
                            "instruction": "action streampos_to_seqnum(c:stream_pos) returns(res:pkt_num) = {\n"
                        },
                        {
                            "line": 939,
                            "file": "quic_shim.ivy",
                            "instruction": "    <<<\n"
                        },
                        {
                            "line": 940,
                            "file": "quic_shim.ivy",
                            "instruction": "    res = c;\n"
                        },
                        {
                            "line": 941,
                            "file": "quic_shim.ivy",
                            "instruction": "    >>>\n"
                        },
                        {
                            "line": 942,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 943,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 944,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 945,
                            "file": "quic_shim.ivy",
                            "instruction": "# Tricks should remodify packet to add dcil/scil length field as in past but we would need\n"
                        },
                        {
                            "line": 946,
                            "file": "quic_shim.ivy",
                            "instruction": "# modify too much code = \"unsafe\"\n"
                        },
                        {
                            "line": 947,
                            "file": "quic_shim.ivy",
                            "instruction": "# TODO\n"
                        },
                        {
                            "line": 948,
                            "file": "quic_shim.ivy",
                            "instruction": "action dcid_size_cl(cond:bool) returns(res:cid_length) = {\n"
                        },
                        {
                            "line": 949,
                            "file": "quic_shim.ivy",
                            "instruction": "    <<<\n"
                        },
                        {
                            "line": 950,
                            "file": "quic_shim.ivy",
                            "instruction": "    res = 0;\n"
                        },
                        {
                            "line": 951,
                            "file": "quic_shim.ivy",
                            "instruction": "    if(const char* env_p2 = std::getenv(\"TEST_TYPE\")) { \n"
                        },
                        {
                            "line": 952,
                            "file": "quic_shim.ivy",
                            "instruction": "      if(strcmp(env_p2, \"client\") == 0 || cond) {\n"
                        },
                        {
                            "line": 953,
                            "file": "quic_shim.ivy",
                            "instruction": "         if(const char* env_p3 = std::getenv(\"TEST_DCIL\")) {\n"
                        },
                        {
                            "line": 954,
                            "file": "quic_shim.ivy",
                            "instruction": "            std::cerr << \"TEST_DCIL \" << env_p3 << \"\\n\";\n"
                        },
                        {
                            "line": 955,
                            "file": "quic_shim.ivy",
                            "instruction": "\t        res = atoi(env_p3);\n"
                        },
                        {
                            "line": 956,
                            "file": "quic_shim.ivy",
                            "instruction": "         } \n"
                        },
                        {
                            "line": 957,
                            "file": "quic_shim.ivy",
                            "instruction": "         else \n"
                        },
                        {
                            "line": 958,
                            "file": "quic_shim.ivy",
                            "instruction": "\t        res = 8;\n"
                        },
                        {
                            "line": 959,
                            "file": "quic_shim.ivy",
                            "instruction": "      } else \n"
                        },
                        {
                            "line": 960,
                            "file": "quic_shim.ivy",
                            "instruction": "\t  res = 8;\n"
                        },
                        {
                            "line": 961,
                            "file": "quic_shim.ivy",
                            "instruction": "    } else \n"
                        },
                        {
                            "line": 962,
                            "file": "quic_shim.ivy",
                            "instruction": "      res = 8;\n"
                        },
                        {
                            "line": 963,
                            "file": "quic_shim.ivy",
                            "instruction": "    std::cerr <<  \"dcid_size_cl size: \" <<  res << \"\\n\";\n"
                        },
                        {
                            "line": 964,
                            "file": "quic_shim.ivy",
                            "instruction": "    >>>\n"
                        },
                        {
                            "line": 965,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 966,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 967,
                            "file": "quic_shim.ivy",
                            "instruction": "action scid_size_pos(cond:bool) returns(res:stream_pos) = {\n"
                        },
                        {
                            "line": 968,
                            "file": "quic_shim.ivy",
                            "instruction": "    <<<\n"
                        },
                        {
                            "line": 969,
                            "file": "quic_shim.ivy",
                            "instruction": "    res = 0;\n"
                        },
                        {
                            "line": 970,
                            "file": "quic_shim.ivy",
                            "instruction": "    if(const char* env_p2 = std::getenv(\"TEST_TYPE\")) { \n"
                        },
                        {
                            "line": 971,
                            "file": "quic_shim.ivy",
                            "instruction": "      if(strcmp(env_p2, \"server\") == 0 || cond) {\n"
                        },
                        {
                            "line": 972,
                            "file": "quic_shim.ivy",
                            "instruction": "         if(const char* env_p3 = std::getenv(\"TEST_SCIL\")) {\n"
                        },
                        {
                            "line": 973,
                            "file": "quic_shim.ivy",
                            "instruction": "            std::cerr << \"TEST_SCIL \" << env_p3 << \"\\n\";\n"
                        },
                        {
                            "line": 974,
                            "file": "quic_shim.ivy",
                            "instruction": "\t        res = atoi(env_p3);\n"
                        },
                        {
                            "line": 975,
                            "file": "quic_shim.ivy",
                            "instruction": "         } else \n"
                        },
                        {
                            "line": 976,
                            "file": "quic_shim.ivy",
                            "instruction": "\t   res = 8;\n"
                        },
                        {
                            "line": 977,
                            "file": "quic_shim.ivy",
                            "instruction": "      } else \n"
                        },
                        {
                            "line": 978,
                            "file": "quic_shim.ivy",
                            "instruction": "\t  res = 8;\n"
                        },
                        {
                            "line": 979,
                            "file": "quic_shim.ivy",
                            "instruction": "    } else \n"
                        },
                        {
                            "line": 980,
                            "file": "quic_shim.ivy",
                            "instruction": "      res = 8;\n"
                        },
                        {
                            "line": 981,
                            "file": "quic_shim.ivy",
                            "instruction": "    std::cerr <<  \"scid_size_pos size: \" <<  res << \"\\n\";\n"
                        },
                        {
                            "line": 982,
                            "file": "quic_shim.ivy",
                            "instruction": "    >>>\n"
                        },
                        {
                            "line": 983,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 984,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 985,
                            "file": "quic_shim.ivy",
                            "instruction": "action dcid_size_pos(cond:bool) returns(res:stream_pos) = {\n"
                        },
                        {
                            "line": 986,
                            "file": "quic_shim.ivy",
                            "instruction": "    <<<\n"
                        },
                        {
                            "line": 987,
                            "file": "quic_shim.ivy",
                            "instruction": "    res = 0;\n"
                        },
                        {
                            "line": 988,
                            "file": "quic_shim.ivy",
                            "instruction": "    if(const char* env_p2 = std::getenv(\"TEST_TYPE\")) { \n"
                        },
                        {
                            "line": 989,
                            "file": "quic_shim.ivy",
                            "instruction": "      if(strcmp(env_p2, \"server\") == 0 || cond) {\n"
                        },
                        {
                            "line": 990,
                            "file": "quic_shim.ivy",
                            "instruction": "         if(const char* env_p3 = std::getenv(\"TEST_DCIL\")) {\n"
                        },
                        {
                            "line": 991,
                            "file": "quic_shim.ivy",
                            "instruction": "            std::cerr << \"TEST_DCIL \" << env_p3 << \"\\n\";\n"
                        },
                        {
                            "line": 992,
                            "file": "quic_shim.ivy",
                            "instruction": "\t        res = atoi(env_p3);\n"
                        },
                        {
                            "line": 993,
                            "file": "quic_shim.ivy",
                            "instruction": "         } else \n"
                        },
                        {
                            "line": 994,
                            "file": "quic_shim.ivy",
                            "instruction": "\t   res = 8;\n"
                        },
                        {
                            "line": 995,
                            "file": "quic_shim.ivy",
                            "instruction": "      } else \n"
                        },
                        {
                            "line": 996,
                            "file": "quic_shim.ivy",
                            "instruction": "\t  res = 8;\n"
                        },
                        {
                            "line": 997,
                            "file": "quic_shim.ivy",
                            "instruction": "    } else \n"
                        },
                        {
                            "line": 998,
                            "file": "quic_shim.ivy",
                            "instruction": "      res = 8;\n"
                        },
                        {
                            "line": 999,
                            "file": "quic_shim.ivy",
                            "instruction": "    std::cerr <<  \"dcid_size_pos size: \" <<  res << \"\\n\";\n"
                        },
                        {
                            "line": 1000,
                            "file": "quic_shim.ivy",
                            "instruction": "    >>>\n"
                        },
                        {
                            "line": 1001,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 1002,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1003,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1004,
                            "file": "quic_shim.ivy",
                            "instruction": "action hi_byte_pos(x:stream_pos) returns (res:byte) = {\n"
                        },
                        {
                            "line": 1005,
                            "file": "quic_shim.ivy",
                            "instruction": "    <<< res = (x >> 8) & 0xff; >>>\n"
                        },
                        {
                            "line": 1006,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 1007,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1008,
                            "file": "quic_shim.ivy",
                            "instruction": "action lo_byte_pos(x:stream_pos) returns (res:byte) = {\n"
                        },
                        {
                            "line": 1009,
                            "file": "quic_shim.ivy",
                            "instruction": "    <<< res = x & 0xff; >>>\n"
                        },
                        {
                            "line": 1010,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 1011,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1012,
                            "file": "quic_shim.ivy",
                            "instruction": "action bytes_to_cid(bytes:stream_data) returns (val:cid) = {\n"
                        },
                        {
                            "line": 1013,
                            "file": "quic_shim.ivy",
                            "instruction": "    <<<\n"
                        },
                        {
                            "line": 1014,
                            "file": "quic_shim.ivy",
                            "instruction": "    val.val = 0;\n"
                        },
                        {
                            "line": 1015,
                            "file": "quic_shim.ivy",
                            "instruction": "    for (unsigned i = 0; i < bytes.size(); i++)\n"
                        },
                        {
                            "line": 1016,
                            "file": "quic_shim.ivy",
                            "instruction": "        val.val = (val.val << 8) + bytes[i];\n"
                        },
                        {
                            "line": 1017,
                            "file": "quic_shim.ivy",
                            "instruction": "    >>>\n"
                        },
                        {
                            "line": 1018,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 1019,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1020,
                            "file": "quic_shim.ivy",
                            "instruction": "action bytes_to_version(bytes:stream_data) returns (val:version) = {\n"
                        },
                        {
                            "line": 1021,
                            "file": "quic_shim.ivy",
                            "instruction": "    <<<\n"
                        },
                        {
                            "line": 1022,
                            "file": "quic_shim.ivy",
                            "instruction": "    val = 0;\n"
                        },
                        {
                            "line": 1023,
                            "file": "quic_shim.ivy",
                            "instruction": "    for (unsigned i = 0; i < bytes.size(); i++)\n"
                        },
                        {
                            "line": 1024,
                            "file": "quic_shim.ivy",
                            "instruction": "        val = (val << 8) + bytes[i];\n"
                        },
                        {
                            "line": 1025,
                            "file": "quic_shim.ivy",
                            "instruction": "    >>>\n"
                        },
                        {
                            "line": 1026,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 1027,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1028,
                            "file": "quic_shim.ivy",
                            "instruction": "action bytes_to_itoken(bytes:stream_data) returns (val:itoken) = {\n"
                        },
                        {
                            "line": 1029,
                            "file": "quic_shim.ivy",
                            "instruction": "    <<<\n"
                        },
                        {
                            "line": 1030,
                            "file": "quic_shim.ivy",
                            "instruction": "    val.val = 0;\n"
                        },
                        {
                            "line": 1031,
                            "file": "quic_shim.ivy",
                            "instruction": "    for (unsigned i = 0; i < bytes.size(); i++)\n"
                        },
                        {
                            "line": 1032,
                            "file": "quic_shim.ivy",
                            "instruction": "        val.val = (val.val << 8) + bytes[i];\n"
                        },
                        {
                            "line": 1033,
                            "file": "quic_shim.ivy",
                            "instruction": "    >>>\n"
                        },
                        {
                            "line": 1034,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 1035,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1036,
                            "file": "quic_shim.ivy",
                            "instruction": "# Hack, should be moved\n"
                        },
                        {
                            "line": 1037,
                            "file": "quic_shim.ivy",
                            "instruction": "# Here we set environment variable to indicate to the tls_ser\n"
                        },
                        {
                            "line": 1038,
                            "file": "quic_shim.ivy",
                            "instruction": "# the size of the cids for parsing\n"
                        },
                        {
                            "line": 1039,
                            "file": "quic_shim.ivy",
                            "instruction": "# For now we use environment variable to avoid touching too much\n"
                        },
                        {
                            "line": 1040,
                            "file": "quic_shim.ivy",
                            "instruction": "# to the parse but should be done too\n"
                        },
                        {
                            "line": 1041,
                            "file": "quic_shim.ivy",
                            "instruction": "action export_length_cid_extension(dcil:stream_pos,scil:stream_pos) = {\n"
                        },
                        {
                            "line": 1042,
                            "file": "quic_shim.ivy",
                            "instruction": "    <<<\n"
                        },
                        {
                            "line": 1043,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1044,
                            "file": "quic_shim.ivy",
                            "instruction": "    std::cerr <<  \"export_length_cid_extension\"  << \"\\n\";\n"
                        },
                        {
                            "line": 1045,
                            "file": "quic_shim.ivy",
                            "instruction": "\tchar str_d[20];\n"
                        },
                        {
                            "line": 1046,
                            "file": "quic_shim.ivy",
                            "instruction": "\tsprintf(str_d,\"%llu\",dcil);\n"
                        },
                        {
                            "line": 1047,
                            "file": "quic_shim.ivy",
                            "instruction": "\tif(setenv(\"TEST_DCIL\",str_d,true) != 0) \n"
                        },
                        {
                            "line": 1048,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tfprintf(stderr, \"setenv failed\\n\");\n"
                        },
                        {
                            "line": 1049,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1050,
                            "file": "quic_shim.ivy",
                            "instruction": "\tchar str[20];\n"
                        },
                        {
                            "line": 1051,
                            "file": "quic_shim.ivy",
                            "instruction": "\tsprintf(str,\"%llu\",scil);\n"
                        },
                        {
                            "line": 1052,
                            "file": "quic_shim.ivy",
                            "instruction": "\tif(setenv(\"TEST_SCIL\",str,true) != 0) \n"
                        },
                        {
                            "line": 1053,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tfprintf(stderr, \"setenv failed\\n\");\n"
                        },
                        {
                            "line": 1054,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1055,
                            "file": "quic_shim.ivy",
                            "instruction": "    char str_p[20];\n"
                        },
                        {
                            "line": 1056,
                            "file": "quic_shim.ivy",
                            "instruction": "\tsprintf(str_p,\"%llu\",scil);\n"
                        },
                        {
                            "line": 1057,
                            "file": "quic_shim.ivy",
                            "instruction": "\tif(setenv(\"TEST_PCIL\",str_p,true) != 0) \n"
                        },
                        {
                            "line": 1058,
                            "file": "quic_shim.ivy",
                            "instruction": "\t\tfprintf(stderr, \"setenv failed\\n\");\n"
                        },
                        {
                            "line": 1059,
                            "file": "quic_shim.ivy",
                            "instruction": "    >>>\n"
                        },
                        {
                            "line": 1060,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 1061,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1062,
                            "file": "quic_shim.ivy",
                            "instruction": "action export_length_cid(dcil:stream_pos,scil:stream_pos) = {\n"
                        },
                        {
                            "line": 1063,
                            "file": "quic_shim.ivy",
                            "instruction": "    <<<\n"
                        },
                        {
                            "line": 1064,
                            "file": "quic_shim.ivy",
                            "instruction": "    scid_h = scil;\n"
                        },
                        {
                            "line": 1065,
                            "file": "quic_shim.ivy",
                            "instruction": "    dcid_h = dcil;\n"
                        },
                        {
                            "line": 1066,
                            "file": "quic_shim.ivy",
                            "instruction": "    >>>\n"
                        },
                        {
                            "line": 1067,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 1068,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        },
                        {
                            "line": 1069,
                            "file": "quic_shim.ivy",
                            "instruction": "action export_length_cid_mim(dcil:stream_pos,scil:stream_pos) = {\n"
                        },
                        {
                            "line": 1070,
                            "file": "quic_shim.ivy",
                            "instruction": "    <<<\n"
                        },
                        {
                            "line": 1071,
                            "file": "quic_shim.ivy",
                            "instruction": "    scid_mim = scil;\n"
                        },
                        {
                            "line": 1072,
                            "file": "quic_shim.ivy",
                            "instruction": "    dcid_mim = dcil;\n"
                        },
                        {
                            "line": 1073,
                            "file": "quic_shim.ivy",
                            "instruction": "    >>>\n"
                        },
                        {
                            "line": 1074,
                            "file": "quic_shim.ivy",
                            "instruction": "}\n"
                        },
                        {
                            "line": 1075,
                            "file": "quic_shim.ivy",
                            "instruction": "\n"
                        }
                    ],
                    "around": []
                },
                "action_return": null,
                "action_parameters": [
                    {
                        "name": "src",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "dst",
                        "type": "ip.endpoint"
                    },
                    {
                        "name": "scid",
                        "type": "cid"
                    },
                    {
                        "name": "dcid",
                        "type": "cid"
                    },
                    {
                        "name": "data",
                        "type": "stream_data"
                    },
                    {
                        "name": "pos",
                        "type": "stream_pos"
                    },
                    {
                        "name": "e",
                        "type": "quic_packet_type"
                    },
                    {
                        "name": "tls_id",
                        "type": "tls_api.id"
                    }
                ],
                "exported": false,
                "events": false,
                "called_from": [
                    {
                        "caller_func": "show_tls_send_event",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "tls_keys_established_event",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "tls_api.lower.recv",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "show_set_initial_keys",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "tls_api.upper.set_initial_keys",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "client.set_ep",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "export_length_cid_extension",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "export_length_cid",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "tls_api.upper.create_0rtt_client",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "tls_api.upper.create",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "export_length_cid_extension",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "show_set_initial_keys",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "tls_api.upper.set_initial_keys",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "export_length_cid_extension",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "recv_vn_pkt",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "infer_tls_events_vn",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "packet_event_vn",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "version_not_found_event;",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "export_length_cid_extension",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "recv_retry_pkt",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "infer_tls_events_retry",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "packet_event_retry",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "client.set_ep",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "export_length_cid_extension",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "recv_0rtt_pkt",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "infer_tls_events_0rtt",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "packet_event_0rtt",
                        "component": "quic_shim.ivy"
                    },
                    {
                        "caller_func": "tls_send_event",
                        "component": "quic_infer.ivy"
                    }
                ],
                "assertions_as_guarantees": {
                    "called_from": [
                        {
                            "caller_func": "infer_tls_events",
                            "component": "quic_infer.ivy"
                        }
                    ],
                    "assertions": []
                },
                "assertions_as_assumption": {
                    "called_from": [],
                    "assertions": []
                }
            }
        },
        {
            "functions": [
                {
                    "name": "crypto_data(C:cid,L:quic_packet_type) : stream_data\n",
                    "comment": "",
                    "line": 204,
                    "file": "quic_security.ivy"
                },
                {
                    "name": "crypto_data_end(C:cid,L:quic_packet_type) : stream_pos\n",
                    "comment": "",
                    "line": 206,
                    "file": "quic_security.ivy"
                },
                {
                    "name": "crypto_length(C:cid,L:quic_packet_type) : stream_pos\n",
                    "comment": "",
                    "line": 207,
                    "file": "quic_security.ivy"
                },
                {
                    "name": "crypto_pos(C:cid,L:quic_packet_type) : stream_pos\n",
                    "comment": "",
                    "line": 208,
                    "file": "quic_security.ivy"
                },
                {
                    "name": "crypto_handler_pos(C:cid,L:quic_packet_type) : stream_pos\n",
                    "comment": "",
                    "line": 209,
                    "file": "quic_security.ivy"
                },
                {
                    "name": "conn_enc_level(E:ip.endpoint,C:cid) : quic_packet_type\n",
                    "comment": "",
                    "line": 210,
                    "file": "quic_security.ivy"
                }
            ],
            "relations": [
                {
                    "name": "crypto_data_present(C:cid,L:quic_packet_type,P:stream_pos)\n",
                    "comment": "",
                    "line": 205,
                    "file": "quic_security.ivy"
                },
                {
                    "name": "established_1rtt_keys(C:cid)\n",
                    "comment": "",
                    "line": 211,
                    "file": "quic_security.ivy"
                },
                {
                    "name": "established_0rtt_keys(C:cid)\n",
                    "comment": "",
                    "line": 212,
                    "file": "quic_security.ivy"
                },
                {
                    "name": "established_handshake_keys(C:cid)\n",
                    "comment": "",
                    "line": 213,
                    "file": "quic_security.ivy"
                },
                {
                    "name": "crypto_reset(C:cid)\n",
                    "comment": "",
                    "line": 214,
                    "file": "quic_security.ivy"
                }
            ]
        }
    ],
    "tls_protocol.ivy": [
        {
            "tls_name": "tls",
            "tls_object": [
                {
                    "name": "handshakes",
                    "type": "vector(handshake)\n",
                    "instance": true
                },
                {
                    "name": "handshake_parser",
                    "type": "deserializer(stream_pos,stream_data,handshakes,tls_deser)\n",
                    "instance": true
                }
            ],
            "tls_module": null,
            "actions": [
                {
                    "line": 41,
                    "action_name": "tls.handshake_data_event",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [
                            {
                                "line": 361,
                                "file": "quic_shim.ivy",
                                "instruction": "    if dst_is_generated_tls(dst) {\n"
                            },
                            {
                                "line": 362,
                                "file": "quic_shim.ivy",
                                "instruction": "        call tls_api.lower.recv(src_tls_id(dst),data,0); # TODO: fill in the encryption level\n"
                            },
                            {
                                "line": 363,
                                "file": "quic_shim.ivy",
                                "instruction": "    }\n"
                            }
                        ],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "src",
                            "type": "ip.endpoint"
                        },
                        {
                            "name": "dst",
                            "type": "ip.endpoint"
                        },
                        {
                            "name": "data",
                            "type": "stream_data"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [
                        {
                            "caller_func": "tls_api.lower.recv",
                            "component": "quic_shim.ivy"
                        },
                        {
                            "caller_func": "tls.handshake_data_event",
                            "component": "quic_security.ivy"
                        },
                        {
                            "caller_func": "tls.handshake_event",
                            "component": "quic_security.ivy"
                        },
                        {
                            "caller_func": "handle_tls_handshake",
                            "component": "quic_security.ivy"
                        }
                    ],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                },
                {
                    "line": 31,
                    "action_name": "tls.handshake_event",
                    "implementation": [],
                    "monitor": {
                        "before": [],
                        "after": [],
                        "around": []
                    },
                    "action_return": null,
                    "action_parameters": [
                        {
                            "name": "src",
                            "type": "ip.endpoint"
                        },
                        {
                            "name": "dst",
                            "type": "ip.endpoint"
                        },
                        {
                            "name": "h",
                            "type": "handshake"
                        }
                    ],
                    "exported": false,
                    "events": false,
                    "called_from": [],
                    "assertions_as_guarantees": {
                        "called_from": [],
                        "assertions": []
                    },
                    "assertions_as_assumption": {
                        "called_from": [],
                        "assertions": []
                    }
                }
            ]
        },
        {
            "functions": [],
            "relations": []
        }
    ],
    "ivy_quic_shim_client.ivy": [
        {
            "functions": [],
            "relations": []
        }
    ]
}