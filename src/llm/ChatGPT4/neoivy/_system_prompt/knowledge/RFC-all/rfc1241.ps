%! Adobe PostScript(tm) via Sun Microsystems PC-NFS
%
%!PS-Adobe-2.0 ExitServer
%%Title: Microsoft Word Driver Prolog
%%Creator: Microsoft
%%CreationDate: Fri Aug 18 1988
%%BeginDocument: Microsoft Word 5.0 0
%%msinifile: POSTSCRP
%%EndComments
%%BeginExitServer: 0
% userdict /msinifile known 
% {msinifile (POSTSCRP) eq {stop} if} if
% serverdict begin 0 exitserver
 userdict /msorigstate known {msorigstate restore} if
 save /msorigstate exch def
 /msinifile (POSTSCRP) def
%%EndExitServer

%%BeginFont: mslinedraw
/mslinedraw 25 dict def
/PSl {msdict begin /ptop 612 def /sw 0 def
 /ftsz 12 def /smode 0 def /STh -3.6 def /fs 0 def /offset 0 def fonttable 1 get fontset E 90 rotate 0 -612 translate save statusdict begin /waittimeout 360 def end} def
/PSp {msdict begin /ptop 792 def /sw 0 def
 /ftsz 12 def /smode 0 def /STh -3.6 def /fs 0 def /offset 0 def fonttable 1 get fontset E save statusdict begin /waittimeout 360 def end} def
mslinedraw begin
/FontType 3 def
/FontMatrix [1.0 30.0 div 0 0 1.0 30.0 div 0 0] def
/FontBBox [0 -8 18 30] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 45 [
 /sp   /sh   /sh /light /med /dark
 /sv   /srj  /sdjr /dsjr /sdtr /dstr /djr  /dv
 /dtr  /dbr  /sdbr /dsbr /str  /sbl  /sjb  /sjt
 /sjl  /sh   /sjc  /sdjl /dsjl /dbl  /dtl  /djb
 /djt  /djl  /dh   /djc  /dsjb /sdjb /dsjt /sdjt
 /sdbl /dsbl /dstl /sdtl  /sdjc /dsjc /sbr  /stl
 /black /bb /bl /br /bt] putinterval

/a {moveto lineto stroke} bind def
/b {moveto lineto lineto stroke} bind def
/c {moveto 9 7 lineto stroke} bind def
/d {moveto lineto lineto} bind def
/e {lineto closepath fill} bind def
/f {7 30 7 9 0 9 b} def
/g {12 30 12 9 18 9 b} def
/h {7 -8 7 5 0 5 b} def
/i {12 -8 12 5 18 5 b} def
/j {0 7 18 7 a} def
/k {9 22 9 -8 a} def
/l {0 5 18 5 a 0 9 18 9 a} def
/m {7 22 7 -8 a 12 22 12 -8 a} def
/n {0 -8 18 -8 18 22 d 0 22 e} def

/CharProcs 55 dict def
CharProcs begin
/.notdef {} def
/sp { 1 1 moveto } def
/sv {k} def
/srj {k 0 7 c} def
/sdjr {k 0 5 9 5 a 0 9 9 9 a} def
/dsjr {m 0 7 7 7 a} def
/sdtr {0 7 12 7 12 -8 b 7 7 7 -8 a} def
/dstr {0 9 9 9 9 -8 b 0 5 9 5 a} def
/djr {f h 12 -8 12 22 a} def
/dv {m} def
/dtr {h 0 9 12 9 12 -8 b} def
/dbr {f  0 5 12 5 12 30 b} def
/sdbr {0 7 12 7 12 30 b 7 7 7 30 a} def
/dsbr {0 5 9 5 9 30 b 0 9 9 9 a} def
/str {0 7 9 7 9 -8 b} def
/sbl {9 30 9 7 18 7 b} def
/sjb {j 9 30 c} def
/sjt {j 9 -8 c} def
/sjl {k 18 7 c} def
/sh {j} def
/sjc {j k} def
/sdjl {k 9 9 18 9 a 9 5 18 5 a} def
/dsjl {m 12 7 18 7 a} def
/dbl {g 7 30 7 5 18 5 b} def
/dtl {i 7 -8 7 9 18 9 b} def
/djb {f g 0 5 18 5 a} def
/djt {h i 0 9 18 9 a} def
/djl {g i 7 -8 7 22 a} def
/dh {l} def
/djc {f g h i} def
/dsjb {l 9 30 9 9 a} def
/sdjb {j 7 7 7 30 a 12 7 12 30 a} def
/dsjt {l 9 -8 9 5 a} def
/sdjt {j 7 7 7 -8 a 12 7 12 -8 a} def
/sdbl {7 30 7 7 18 7 b 12 30 12 7 a} def
/dsbl {9 30 9 5 18 5 b 9 9 18 9 a} def
/dstl {9 -8 9 9 18 9 b 9 5 18 5 a} def
/sdtl {7 -8 7 7 18 7 b 12 -8 12 7 a} def
/sdjc {m j} def
/dsjc {l k} def
/sbr {0 7 9 7 9 30 b} def
/stl {9 -8 9 7 18 7 b} def
/light {0.90 setgray n} def
/med {0.60 setgray n} def
/dark {0.30 setgray n} def
/black {n} def
/bt {0 7 18 7 18 22 d 0 22 e} def
/bb {0 -8 18 -8 18 7 d 0 7 e} def
/bl {0 -8 9 -8 9 22 d 0 22 e} def
/br {9 -8 18 -8 18 22 d 9 22 e} def
end %CharProcs

/BuildChar
  { fs 1 and 0 eq {1} {3} ifelse setlinewidth
    18 0 setcharwidth
    exch begin
     Encoding exch get
     CharProcs exch get
     exec
    end
  } def
end %mslinedraw
%%EndFont

%%BeginProcSet: msdict 1.0 0
/msdict 100 dict def
FontDirectory /LineDraw known not
 {/LineDraw mslinedraw definefont pop} if
msdict begin
/SLL {/LL def} def
/P {exch msu exch msu neg ptop add moveto} bind def
/S {sw 0 32 4 -1 roll widthshow} bind def
/C {1 string dup 0 4 -1 roll put S} bind def
/J {msu ( ) stringwidth pop sub /sw exch def} bind def
/PE {showpage ptop exch restore save exch /ptop exch def} bind def
/SFL {msu /ptop exch def} bind def
%%BeginModelCheck
 statusdict begin
 product (OmniLaser) eq
{
end
/B1 {statusdict begin 0 setpapertray end} def
/B2 {statusdict begin 1 setpapertray end} def
}{
end
/B1 {statusdict begin 1 setpapertray end} def
/B2 {statusdict begin 2 setpapertray end} def
} ifelse
%%EndModelCheck
/MB {statusdict begin /manualfeed true store end} def
/ME {statusdict begin /manualfeed false store end} def
/B {fs 2 and 0 eq {Bft} {BIft} ifelse
 ftsz scalefont setfont fs 1 or /fs exch def} bind def
/E {Eft ftsz scalefont setfont /fs 0 def} bind def
/I {fs 1 and 0 eq {Ift} {BIft} ifelse
 ftsz scalefont setfont fs 2 or /fs exch def} bind def
/BI {BIft ftsz scalefont setfont fs 
 2 or 1 or /fs exch def} bind def
/LU {currentpoint /uy exch def /ux exch def 1 ssm} bind def
/LD {currentpoint /uy exch def /ux exch def 2 ssm} bind def
/LS {currentpoint /uy exch def /ux exch def 4 ssm} bind def
/LL {currentpoint /uy exch def /ux exch def /ldmode exch def 8 ssm} bind def
/LE {smode 1 and 0 ne {false (_) ul} if
      smode 2 and 0 ne {true (_) ul} if
      smode 4 and 0 ne {false (\352) ul} if
      smode 8 and 0 ne {ux uy ldot pop pop} if
  not smode and /smode exch def} bind def
/BD {STh ssc} def
/BU {STh neg ssc} def
/BN {0 ssy neg rmoveto} def
/F {/ftsz exch def (-) stringwidth pop 2 div neg /STh exch def
 /ftcd exch def 
 0 2 fonttable length 1 sub
   {dup fonttable exch get ftcd eq
     {1 add fonttable exch get fontset exit}{pop}ifelse
   }for
 E} bind def
/msfindfont {dup FontDirectory exch known not {pop /Courier} if findfont} def
/fontset {dup 0 get msfindfont /Eft exch def
          dup 1 get msfindfont /Bft exch def
          dup 2 get msfindfont /Ift exch def
          3 get msfindfont /BIft exch def
         }def
/msu {20 div} def
/ssc {dup /ssy exch def 0 exch rmoveto} bind def
/ssm {dup smode or /smode exch def} bind def
/Cf {/Eft /Courier  findfont def /Bft /Courier-Bold findfont def /Ift /Courier-Oblique findfont def /BIft /Courier-BoldOblique findfont def} def
/DUL {cc true charpath pathbbox newpath exch pop 2 index 2 index moveto cx1 4 -1 roll sub dup 0 rlineto 3 1 roll exch
sub 0 exch rlineto neg 0 rlineto closepath fill} bind def
/ul {gsave /cc exch def currentpoint pop /cx1 exch def ux uy moveto DUL {grestore gsave ux uy 2.4 sub moveto DUL} if
grestore} bind def
/PSe {restore end} bind def
/ldot {gsave 2 copy currentpoint /y exch def /x exch def
 newpath
 ldmode 0 eq {/offset 0 def 1 setlinewidth [1 7] 4 setdash}
 {ldmode 1 eq {[6 2] 6 setdash /offset STh def .2 setlinewidth}
 {ldmode 2 eq {[] 0 setdash /offset 1.4 def .2 setlinewidth} if}
 ifelse} ifelse
 offset sub moveto x y offset sub lineto stroke grestore} bind def
/Ccs /Courier findfont /CharStrings get def

% /OrigName /NewName vector ReEncodeSmall
/ReEncodeSmall { %def
  exch findfont begin
  currentdict dup length dict begin
    { 1 index /FID ne {def} {pop pop} ifelse } forall
    /FontName exch def
    /Encoding foreignvec def
  currentdict dup end end
  /FontName get exch definefont pop
} bind def
/Foreign { ReEncodeSmall } def

/foreignvec StandardEncoding 256 array copy def
% the following are differences from StandardEncoding.
% Sequential entries do not require indices:
0 [ 39/quotesingle 96/grave
128/Ccedilla/udieresis/eacute/acircumflex/adieresis
/agrave/aring/ccedilla/ecircumflex/edieresis
/egrave/idieresis/icircumflex/igrave/Adieresis
/Aring/Eacute/ae/AE/ocircumflex
/odieresis/ograve/ucircumflex/ugrave/ydieresis
/Odieresis/Udieresis/cent/sterling/yen/P/florin/aacute
/iacute/oacute/uacute/ntilde/Ntilde/ordfeminine
/ordmasculine/questiondown/.notdef/.notdef
/.notdef/.notdef/exclamdown/guillemotleft/guillemotright
/Aacute/Acircumflex/Agrave/Atilde/Ecircumflex/Edieresis
/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute
/Ocircumflex/Ograve/Otilde/Uacute/Ucircumflex/Ugrave
/Scaron/Ydieresis/emdash/Zcaron/.notdef/otilde/scaron/zcaron
/fraction/section/currency/quotesingle/quotedblleft
/guilsinglleft/guilsinglright/.notdef/.notdef/endash/dagger/daggerdbl
/paragraph/quotesinglbase/quotedblbase/quotedblright
/ellipsis/.notdef/grave/acute/circumflex/tilde/macron
/germandbls/breve/dotaccent/dieresis/cedilla/.notdef/hungarumlaut
/ogonek/caron/emdash/Lslash/Oslash/dotlessi/lslash/oslash
/.notdef/.notdef/.notdef/.notdef/.notdef/atilde
/.notdef/.notdef/ring/bullet/periodcentered/.notdef/.notdef
/.notdef/.notdef/.notdef
] { %forall
  dup type /nametype eq { %ifelse
    dup Ccs exch known not {pop /.notdef} if
    foreignvec 2 index 2 index put
    pop 1 add
  }{ exch pop } ifelse
} forall pop

%BeginMakeForeign
/Courier /Courier-F Foreign
/Courier-Bold /Courier-Bold-F Foreign
/Courier-Oblique /Courier-Oblique-F Foreign
/Courier-BoldOblique /Courier-BoldOblique-F Foreign
/Helvetica /Helvetica-F Foreign
/Helvetica-Bold /Helvetica-Bold-F Foreign
/Helvetica-Oblique /Helvetica-Oblique-F Foreign
/Helvetica-BoldOblique /Helvetica-BoldOblique-F Foreign
/AvantGarde-Book /AvantGarde-Book-F Foreign
/AvantGarde-Demi /AvantGarde-Demi-F Foreign
/AvantGarde-BookOblique /AvantGarde-BookOblique-F Foreign
/AvantGarde-DemiOblique /AvantGarde-DemiOblique-F Foreign
FontDirectory /Helvetica-Condensed known
{
/Helvetica-Condensed /Helvetica-Narrow-F Foreign
/Helvetica-Condensed-Bold /Helvetica-Narrow-Bold-F Foreign
/Helvetica-Condensed-Oblique /Helvetica-Narrow-Oblique-F Foreign
/Helvetica-Condensed-BoldObl /Helvetica-Narrow-BoldOblique-F Foreign
}{
/Helvetica-Narrow /Helvetica-Narrow-F Foreign
/Helvetica-Narrow-Bold /Helvetica-Narrow-Bold-F Foreign
/Helvetica-Narrow-Oblique /Helvetica-Narrow-Oblique-F Foreign
/Helvetica-Narrow-BoldOblique /Helvetica-Narrow-BoldOblique-F Foreign
} ifelse
/Bookman-Light /Bookman-Light-F Foreign
/Bookman-Demi /Bookman-Demi-F Foreign
/Bookman-LightItalic /Bookman-LightItalic-F Foreign
/Bookman-DemiItalic /Bookman-DemiItalic-F Foreign
/Times-Roman /Times-Roman-F Foreign
/Times-Bold /Times-Bold-F Foreign
/Times-Italic /Times-Italic-F Foreign
/Times-BoldItalic /Times-BoldItalic-F Foreign
/NewCenturySchlbk-Roman /NewCenturySchlbk-Roman-F Foreign
/NewCenturySchlbk-Bold /NewCenturySchlbk-Bold-F Foreign
/NewCenturySchlbk-Italic /NewCenturySchlbk-Italic-F Foreign
/NewCenturySchlbk-BoldItalic /NewCenturySchlbk-BoldItalic-F Foreign
/Palatino-Roman /Palatino-Roman-F Foreign
/Palatino-Bold /Palatino-Bold-F Foreign
/Palatino-Italic /Palatino-Italic-F Foreign
/Palatino-BoldItalic /Palatino-BoldItalic-F Foreign
/ZapfChancery-MediumItalic /ZapfChancery-MediumItalic-F Foreign
%EndMakeForeign

/fonttable
 [0 [/Courier-F /Courier-Bold-F /Courier-Oblique-F /Courier-BoldOblique-F]
 8 [/Helvetica-F /Helvetica-Bold-F /Helvetica-Oblique-F /Helvetica-BoldOblique-F]
 9 [/AvantGarde-Book-F /AvantGarde-Demi-F /AvantGarde-BookOblique-F /AvantGarde-DemiOblique-F]
 10 [/Helvetica-Narrow-F /Helvetica-Narrow-Bold-F /Helvetica-Narrow-Oblique-F /Helvetica-Narrow-BoldOblique-F]
 16 [/Bookman-Light-F /Bookman-Demi-F /Bookman-LightItalic-F /Bookman-DemiItalic-F]
 24 [/Times-Roman-F /Times-Bold-F /Times-Italic-F /Times-BoldItalic-F]
 25 [/NewCenturySchlbk-Roman-F /NewCenturySchlbk-Bold-F /NewCenturySchlbk-Italic-F /NewCenturySchlbk-BoldItalic-F]
 26 [/Palatino-Roman-F /Palatino-Bold-F /Palatino-Italic-F /Palatino-BoldItalic-F]
 50 [/ZapfChancery-MediumItalic-F /ZapfChancery-MediumItalic-F /ZapfChancery-MediumItalic-F /ZapfChancery-MediumItalic-F]
 56 [/Symbol /Symbol /Symbol /Symbol]
 57 [/LineDraw /LineDraw /LineDraw /LineDraw]
 60 [/ZapfDingbats /ZapfDingbats /ZapfDingbats 
/ZapfDingbats] 
] def

%BeginGraphicsDefs
/M {moveto}  def
/L {lineto} def
/LH {currentpoint exch pop lineto} def
/LV {currentpoint pop exch lineto} def
/R {3 index 1 index 1 index 5 index 5 index 1 index M L L L closepath pop pop} def
/setpat {setscreen 100 div setgray} def
/setgrayed {{dup mul exch dup mul add 1 exch sub} setpat} def
/setbar {{pop} setpat} def
/setcross {{2 copy gt {pop} {exch pop} ifelse} setpat} def
/fi {1 -1 scale} def
/II1 {save count /mscount exch def} def
/II2 {userdict begin /showpage {} def /letter {} def
  /legal {} def /a4 {} def /b5 {} def
  /clear { {cleartomark count msdict /mscount get eq {exit} if} loop mark} def
   mark} def
/IT {pop restore} def
/IX {exch msu exch msu neg ptop add translate} def
/IS {div 3 1 roll div exch scale} def

save /msdictstate exch def
%!PS-Adobe-2.0 
PSp 15840 SFL 
1440 1680 P 24 12 F (Network) S 60 J ( Working) S 60 J ( Group) S 
9260 1680 P (R.A.) S 60 J ( Woodburn) S 
1440 1920 P (Request) S 60 J ( For) S 60 J ( Comments) S 60 J ( 1241) S 
10254 1920 P (SAIC) S 
9793 2160 P (D.L.) S 60 J ( Mills) S 
8545 2400 P (University) S 60 J ( of) S 60 J ( Delaware) S 
9860 2640 P (July) S 60 J ( 1991) S 
2697 3200 P 0 12 F 24 16 F B (A) S 80 J ( Scheme) S 80 J ( for) S 80 J ( an) S 80 J ( Internet) S 80 J ( Encapsulation) S 80 J ( Protocol:) S E 
5467 3520 P B (Version) S 80 J ( 1) S E 
1440 4240 P 0 12 F 24 12 F B (1.) S 60 J ( Status) S 60 J ( of) S 60 J ( this) S 60 J ( Memo) S E 
2160 4720 P 0 12 F 24 12 F (This) S 60 J ( memo) S 60 J ( defines) S 60 J ( an) S 60 J ( Experimental) S 60 J ( Protocol) S 60 J ( for) S 60 J ( the) S 60 J ( Internet) S 60 J ( community.) S 60 J ( ) S 60 J ( Discussion) S 
2160 4960 P (and) S 60 J ( suggestions) S 60 J ( for) S 60 J ( improvement) S 60 J ( are) S 60 J ( requested.) S 60 J ( ) S 60 J ( Please) S 60 J ( refer) S 60 J ( to) S 60 J ( the) S 60 J ( current) S 60 J ( edition) S 60 J ( of) S 60 J ( the) S 
2160 5200 P ("IAB) S 60 J ( Official) S 60 J ( Protocol) S 60 J ( Standards") S 60 J ( for) S 60 J ( the) S 60 J ( standardization) S 60 J ( state) S 60 J ( and) S 60 J ( status) S 60 J ( of) S 60 J ( this) S 60 J ( protocol.) S 
2160 5440 P (Distribution) S 60 J ( of) S 60 J ( this) S 60 J ( memo) S 60 J ( is) S 60 J ( unlimited.) S 
1440 6160 P 0 12 F 24 12 F B (2.) S 60 J ( Glossary) S E 
2160 6640 P B (Clear) S 60 J ( Datagram) S E 
2520 6880 P 0 12 F 24 12 F (The) S 60 J ( unmodified) S 60 J ( IP) S 60 J ( datagram) S 60 J ( in) S 60 J ( the) S 60 J ( User) S 60 J ( Space) S 60 J ( before) S 60 J ( Encapsulation.) S 
2160 7360 P 0 12 F 24 12 F B (Clear) S 60 J ( Header) S E 
2520 7600 P 0 12 F 24 12 F (The) S 60 J ( header) S 60 J ( portion) S 60 J ( of) S 60 J ( the) S 60 J ( Clear) S 60 J ( Datagram) S 60 J ( before) S 60 J ( Encapsulation.) S 60 J ( ) S 60 J ( This) S 60 J ( header) S 
2520 7840 P (includes) S 60 J ( the) S 60 J ( IP) S 60 J ( header) S 60 J ( and) S 60 J ( possibly) S 60 J ( part) S 60 J ( or) S 60 J ( all) S 60 J ( of) S 60 J ( the) S 60 J ( next) S 60 J ( layer) S 60 J ( protocol) S 60 J ( header,) S 60 J ( i.e.) S 
2520 8080 P (the) S 60 J ( TCP) S 60 J ( header.) S 
2160 8560 P 0 12 F 24 12 F B (Decapsulation) S E 
2520 8800 P 0 12 F 24 12 F (The) S 60 J ( stripping) S 60 J ( of) S 60 J ( the) S 60 J ( Encapsulation) S 60 J ( Header) S 60 J ( and) S 60 J ( forwarding) S 60 J ( of) S 60 J ( the) S 60 J ( Clear) S 60 J ( Datagram) S 60 J ( by) S 
2520 9040 P (the) S 60 J ( Decapsulator.) S 
2160 9520 P 0 12 F 24 12 F B (Decapsulator) S E 
2520 9760 P 0 12 F 24 12 F (The) S 60 J ( entity) S 60 J ( responsible) S 60 J ( for) S 60 J ( receiving) S 60 J ( an) S 60 J ( Encapsulated) S 60 J ( Datagram,) S 60 J ( decapsulating) S 60 J ( it,) S 60 J ( and) S 
2520 10000 P (delivering) S 60 J ( it) S 60 J ( to) S 60 J ( the) S 60 J ( destination) S 60 J ( User) S 60 J ( Space.) S 60 J ( ) S 60 J ( Delivery) S 60 J ( may) S 60 J ( be) S 60 J ( direct,) S 60 J ( or) S 60 J ( via) S 
2520 10240 P (Encapsulation.) S 60 J ( ) S 60 J ( A) S 60 J ( Decapsulator) S 60 J ( may) S 60 J ( be) S 60 J ( a) S 60 J ( host) S 60 J ( or) S 60 J ( a) S 60 J ( gateway.) S 
2160 10720 P 0 12 F 24 12 F B (Encapsulated) S 60 J ( Datagram) S E 
2520 10960 P 0 12 F 24 12 F (The) S 60 J ( datagram) S 60 J ( consisting) S 60 J ( of) S 60 J ( a) S 60 J ( Clear) S 60 J ( Datagram) S 60 J ( prepended) S 60 J ( with) S 60 J ( an) S 60 J ( Encapsulation) S 
2520 11200 P (Header.) S 
2160 11680 P 0 12 F 24 12 F B (Encapsulation) S E 
2520 11920 P 0 12 F 24 12 F (The) S 60 J ( process) S 60 J ( of) S 60 J ( mapping) S 60 J ( a) S 60 J ( Clear) S 60 J ( Datagram) S 60 J ( to) S 60 J ( the) S 60 J ( Encapsulation) S 60 J ( Space,) S 60 J ( prepending) S 60 J ( an) S 
2520 12160 P (Encapsulation) S 60 J ( Header) S 60 J ( to) S 60 J ( the) S 60 J ( Clear) S 60 J ( Datagram) S 60 J ( and) S 60 J ( routing) S 60 J ( the) S 60 J ( Encapsulated) S 60 J ( Datagram) S 
2520 12400 P (to) S 60 J ( a) S 60 J ( Decapsulator.) S 
2160 12880 P 0 12 F 24 12 F B (Encapsulation) S 60 J ( Header) S E 
2520 13120 P 0 12 F 24 12 F (The) S 60 J ( header) S 60 J ( for) S 60 J ( the) S 60 J ( Encapsulation) S 60 J ( Protocol) S 60 J ( prepended) S 60 J ( to) S 60 J ( the) S 60 J ( Clear) S 60 J ( Datagram) S 60 J ( during) S 
2520 13360 P (Encapsulation.) S 60 J ( ) S 60 J ( This) S 60 J ( header) S 60 J ( consists) S 60 J ( of) S 60 J ( an) S 60 J ( IP) S 60 J ( header) S 60 J ( followed) S 60 J ( by) S 60 J ( an) S 60 J ( Encapsulation) S 
2520 13600 P (Protocol) S 60 J ( Header.) S 
1440 14640 P (Woodburn) S 60 J ( &) S 60 J ( Mills) S 
10153 14640 P (Page) S 60 J ( ) S (1) S 0 12 F 
PE 
1440 1680 P 24 12 F (RFC) S 60 J ( 1241) S 
5035 1680 P (Internet) S 60 J ( Encapsulation) S 
9860 1680 P (July) S 60 J ( 1991) S 
2160 2160 P 0 12 F 24 12 F B (Encapsulation) S 60 J ( Protocol) S 60 J ( Header) S E 
2520 2400 P 0 12 F 24 12 F (The) S 60 J ( Encapsulation) S 60 J ( Protocol) S 60 J ( specific) S 60 J ( portion) S 60 J ( of) S 60 J ( the) S 60 J ( Encapsulation) S 60 J ( Header.) S 
2160 2880 P 0 12 F 24 12 F B (Encapsulation) S 60 J ( Space) S E 
2520 3120 P 0 12 F 24 12 F (The) S 60 J ( address) S 60 J ( and) S 60 J ( routing) S 60 J ( space) S 60 J ( within) S 60 J ( which) S 60 J ( the) S 60 J ( Encapsulators) S 60 J ( and) S 60 J ( Decapsulators) S 
2520 3360 P (reside.) S 60 J ( ) S 60 J ( Routing) S 60 J ( within) S 60 J ( this) S 60 J ( space) S 60 J ( is) S 60 J ( accomplished) S 60 J ( via) S 60 J ( Flows.) S 60 J ( ) S 60 J ( Encapsulation) S 60 J ( Spaces) S 
2520 3600 P (do) S 60 J ( not) S 60 J ( overlap,) S 60 J ( that) S 60 J ( is,) S 60 J ( the) S 60 J ( address) S 60 J ( of) S 60 J ( any) S 60 J ( Encapsulator) S 60 J ( or) S 60 J ( Decapsulator) S 60 J ( is) S 60 J ( unique) S 60 J ( for) S 
2520 3840 P (all) S 60 J ( Encapsulation) S 60 J ( Spaces.) S 
2160 4320 P 0 12 F 24 12 F B (Encapsulator) S E 
2520 4560 P 0 12 F 24 12 F (The) S 60 J ( entity) S 60 J ( responsible) S 60 J ( for) S 60 J ( mapping) S 60 J ( a) S 60 J ( given) S 60 J ( User) S 60 J ( Space) S 60 J ( datagram) S 60 J ( to) S 60 J ( the) S 60 J ( Encapsulation) S 
2520 4800 P (Space,) S 60 J ( encapsulating) S 60 J ( the) S 60 J ( datagram,) S 60 J ( and) S 60 J ( forwarding) S 60 J ( the) S 60 J ( Encapsulated) S 60 J ( Datagram) S 60 J ( to) S 60 J ( a) S 
2520 5040 P (Decapsulator.) S 60 J ( ) S 60 J ( An) S 60 J ( Encapsulator) S 60 J ( may) S 60 J ( be) S 60 J ( a) S 60 J ( host) S 60 J ( or) S 60 J ( a) S 60 J ( gateway.) S 
2160 5520 P 0 12 F 24 12 F B (Flow) S E 
2520 5760 P 0 12 F 24 12 F (Also) S 60 J ( called) S 60 J ( a) S 60 J ( "tunnel.") S 60 J ( ) S 60 J ( A) S 60 J ( flow) S 60 J ( is) S 60 J ( the) S 60 J ( end-to-end) S 60 J ( path) S 60 J ( in) S 60 J ( the) S 60 J ( Encapsulation) S 60 J ( Space) S 60 J ( over) S 
2520 6000 P (which) S 60 J ( Encapsulated) S 60 J ( Datagrams) S 60 J ( travel.) S 60 J ( ) S 60 J ( There) S 60 J ( may) S 60 J ( be) S 60 J ( several) S 
2520 6240 P (Encapsulator/Decapsulator) S 60 J ( pairs) S 60 J ( along) S 60 J ( a) S 60 J ( given) S 60 J ( flow.) S 60 J ( ) S 60 J ( Note) S 60 J ( that) S 60 J ( a) S 60 J ( Flow) S 60 J ( does) S 60 J ( not) S 
2520 6480 P (denote) S 60 J ( what) S 60 J ( User) S 60 J ( Space) S 60 J ( gateways) S 60 J ( are) S 60 J ( traversed) S 60 J ( along) S 60 J ( the) S 60 J ( path.) S 
2160 6960 P 0 12 F 24 12 F B (Flow) S 60 J ( ID) S E 
2520 7200 P 0 12 F 24 12 F (A) S 60 J ( 32-bit) S 60 J ( identifier) S 60 J ( which) S 60 J ( uniquely) S 60 J ( distinguishes) S 60 J ( a) S 60 J ( flow) S 60 J ( in) S 60 J ( a) S 60 J ( given) S 60 J ( Encapsulator) S 60 J ( or) S 
2520 7440 P (Decapsulator.) S 60 J ( ) S 60 J ( Flow) S 60 J ( IDs) S 60 J ( are) S 60 J ( specific) S 60 J ( to) S 60 J ( a) S 60 J ( single) S 60 J ( Encapsulator/Decapsulator) S 60 J ( Entity) S 60 J ( and) S 
2520 7680 P (are) S 60 J ( not) S 60 J ( global) S 60 J ( quantities.) S 
2160 8160 P 0 12 F 24 12 F B (Mapping) S 60 J ( Function) S E 
2520 8400 P 0 12 F 24 12 F (This) S 60 J ( is) S 60 J ( the) S 60 J ( function) S 60 J ( of) S 60 J ( mapping) S 60 J ( a) S 60 J ( Clear) S 60 J ( Header) S 60 J ( to) S 60 J ( a) S 60 J ( particular) S 60 J ( Flow.) S 60 J ( ) S 60 J ( All) S 
2520 8640 P (encapsulators) S 60 J ( along) S 60 J ( a) S 60 J ( given) S 60 J ( Flow) S 60 J ( are) S 60 J ( required) S 60 J ( to) S 60 J ( map) S 60 J ( a) S 60 J ( given) S 60 J ( Clear) S 60 J ( Header) S 60 J ( to) S 60 J ( the) S 
2520 8880 P (same) S 60 J ( Flow.) S 
2160 9360 P 0 12 F 24 12 F B (User) S 60 J ( Address) S E 
2520 9600 P 0 12 F 24 12 F (The) S 60 J ( address) S 60 J ( or) S 60 J ( identifier) S 60 J ( uniquely) S 60 J ( identifying) S 60 J ( an) S 60 J ( entity) S 60 J ( within) S 60 J ( a) S 60 J ( User) S 60 J ( Space.) S 
2160 10080 P 0 12 F 24 12 F B (Source) S 60 J ( Route) S E 
2520 10320 P 0 12 F 24 12 F (A) S 60 J ( complete) S 60 J ( end-to-end) S 60 J ( route) S 60 J ( which) S 60 J ( is) S 60 J ( computed) S 60 J ( at) S 60 J ( the) S 60 J ( source) S 60 J ( and) S 60 J ( enumerates) S 60 J ( transit) S 
2520 10560 P (gateways.) S 
2160 11040 P 0 12 F 24 12 F B (User) S 60 J ( Space) S E 
2520 11280 P 0 12 F 24 12 F (The) S 60 J ( address) S 60 J ( and) S 60 J ( routing) S 60 J ( space) S 60 J ( within) S 60 J ( which) S 60 J ( the) S 60 J ( users) S 60 J ( reside.) S 60 J ( ) S 60 J ( Routing) S 60 J ( within) S 60 J ( this) S 
2520 11520 P (space) S 60 J ( provides) S 60 J ( reachability) S 60 J ( between) S 60 J ( all) S 60 J ( address) S 60 J ( pairs) S 60 J ( within) S 60 J ( the) S 60 J ( space.) S 60 J ( ) S 60 J ( User) S 60 J ( Spaces) S 
2520 11760 P (do) S 60 J ( not) S 60 J ( overlap,) S 60 J ( that) S 60 J ( is,) S 60 J ( a) S 60 J ( given) S 60 J ( User) S 60 J ( Address) S 60 J ( is) S 60 J ( unique) S 60 J ( in) S 60 J ( all) S 60 J ( User) S 60 J ( Spaces) S 
1440 12480 P 0 12 F 24 12 F B (3.) S 60 J ( Background) S E 
1440 12960 P 0 12 F 24 12 F (For) S 98 J ( several) S 98 J ( years) S 98 J ( researchers) S 98 J ( in) S 98 J ( the) S 98 J ( Internet) S 98 J ( community) S 98 J ( have) S 98 J ( needed) S 98 J ( a) S 98 J ( means) S 98 J ( of) S 98 J ( "tunneling") S 
1440 13200 P (between) S 65 J ( networks.) S 66 J ( ) S 65 J ( A) S 66 J ( tunnel) S 65 J ( is) S 66 J ( essentially) S 65 J ( a) S 66 J ( Source) S 65 J ( Route) S 66 J ( that) S 65 J ( circumvents) S 65 J ( conventional) S 65 J ( routing) S 
1440 13440 P (mechanisms.) S 72 J ( ) S 73 J ( Tunnels) S 72 J ( provide) S 73 J ( the) S 72 J ( means) S 73 J ( to) S 72 J ( bypass) S 72 J ( routing) S 72 J ( failures,) S 72 J ( avoid) S 72 J ( broken) S 72 J ( gateways) S 72 J ( and) S 
1440 13680 P (routing) S 60 J ( domains,) S 60 J ( or) S 60 J ( establish) S 60 J ( deterministic) S 60 J ( paths) S 60 J ( for) S 60 J ( experimentation.) S 
1440 14640 P (Woodburn) S 60 J ( &) S 60 J ( Mills) S 
10153 14640 P (Page) S 60 J ( ) S (2) S 0 12 F 
PE 
1440 1680 P 24 12 F (RFC) S 60 J ( 1241) S 
5035 1680 P (Internet) S 60 J ( Encapsulation) S 
9860 1680 P (July) S 60 J ( 1991) S 
1440 2160 P (There) S 155 J ( are) S 156 J ( several) S 155 J ( means) S 156 J ( of) S 155 J ( accomplishing) S 155 J ( tunneling.) S 155 J ( ) S 155 J ( In) S 155 J ( the) S 155 J ( past,) S 155 J ( tunneling) S 155 J ( has) S 155 J ( been) S 
1440 2400 P (accomplished) S 97 J ( through) S 98 J ( source) S 97 J ( routing) S 98 J ( options) S 98 J ( in) S 98 J ( the) S 98 J ( IP) S 98 J ( header) S 98 J ( which) S 98 J ( allow) S 98 J ( gateways) S 98 J ( along) S 98 J ( a) S 
1440 2640 P (given) S 98 J ( path) S 99 J ( to) S 98 J ( be) S 99 J ( enumerated.) S 98 J ( ) S 99 J ( The) S 98 J ( disadvantage) S 99 J ( of) S 98 J ( source) S 99 J ( routing) S 98 J ( in) S 99 J ( the) S 98 J ( IP) S 99 J ( header) S 99 J ( is) S 99 J ( that) S 99 J ( it) S 
1440 2880 P (requires) S 95 J ( the) S 96 J ( source) S 95 J ( to) S 96 J ( know) S 95 J ( something) S 96 J ( about) S 95 J ( the) S 95 J ( networks) S 95 J ( traversed) S 95 J ( to) S 95 J ( reach) S 95 J ( the) S 95 J ( destination.) S 
1440 3120 P (The) S 107 J ( source) S 108 J ( must) S 107 J ( then) S 108 J ( modify) S 107 J ( outgoing) S 108 J ( packets) S 107 J ( to) S 108 J ( reflect) S 107 J ( the) S 108 J ( source) S 107 J ( route.) S 108 J ( ) S 107 J ( Current) S 107 J ( routing) S 
1440 3360 P (implementations) S 111 J ( generally) S 112 J ( don't) S 111 J ( support) S 112 J ( source) S 112 J ( routes) S 112 J ( in) S 112 J ( their) S 112 J ( routing) S 112 J ( tables) S 112 J ( as) S 112 J ( a) S 112 J ( means) S 112 J ( of) S 
1440 3600 P (reaching) S 60 J ( an) S 60 J ( IP) S 60 J ( address,) S 60 J ( nor) S 60 J ( do) S 60 J ( current) S 60 J ( routing) S 60 J ( protocols.) S 
1440 4080 P (Another) S 80 J ( means) S 81 J ( of) S 80 J ( tunneling) S 81 J ( would) S 80 J ( be) S 81 J ( to) S 80 J ( develop) S 81 J ( a) S 81 J ( new) S 81 J ( IP) S 81 J ( option.) S 81 J ( ) S 81 J ( This) S 81 J ( option) S 81 J ( field) S 81 J ( would) S 81 J ( be) S 
1440 4320 P (part) S 85 J ( of) S 86 J ( a) S 85 J ( separate) S 85 J ( IP) S 85 J ( header) S 85 J ( that) S 85 J ( could) S 85 J ( be) S 85 J ( prepended) S 85 J ( to) S 85 J ( an) S 85 J ( IP) S 85 J ( datagram.) S 85 J ( ) S 85 J ( The) S 85 J ( IP) S 85 J ( option) S 85 J ( would) S 
1440 4560 P (indicate) S 70 J ( information) S 71 J ( about) S 70 J ( the) S 71 J ( original) S 70 J ( datagram.) S 71 J ( ) S 70 J ( This) S 71 J ( tunneling) S 70 J ( option) S 70 J ( has) S 70 J ( the) S 70 J ( disadvantage) S 70 J ( of) S 
1440 4800 P (significantly) S 66 J ( modifying) S 67 J ( existing) S 66 J ( IP) S 67 J ( implementations) S 66 J ( to) S 67 J ( handle) S 66 J ( a) S 67 J ( new) S 66 J ( IP) S 67 J ( option.) S 66 J ( ) S 67 J ( It) S 66 J ( also) S 67 J ( would) S 66 J ( be) S 
1440 5040 P (less) S 70 J ( flexible) S 71 J ( in) S 70 J ( permitting) S 71 J ( the) S 70 J ( tunneling) S 71 J ( of) S 70 J ( other) S 71 J ( protocols,) S 70 J ( such) S 71 J ( as) S 70 J ( ISO) S 71 J ( protocols,) S 71 J ( through) S 71 J ( an) S 71 J ( IP) S 
1440 5280 P (environment.) S 76 J ( ) S 77 J ( An) S 76 J ( even) S 77 J ( less) S 76 J ( palatable) S 77 J ( alternative) S 76 J ( would) S 76 J ( be) S 76 J ( to) S 76 J ( replace) S 76 J ( IP) S 76 J ( with) S 76 J ( a) S 76 J ( new) S 76 J ( networking) S 
1440 5520 P (protocol) S 60 J ( or) S 60 J ( a) S 60 J ( new) S 60 J ( version) S 60 J ( of) S 60 J ( IP) S 60 J ( with) S 60 J ( tunneling) S 60 J ( built) S 60 J ( in) S 60 J ( as) S 60 J ( part) S 60 J ( of) S 60 J ( its) S 60 J ( functionality.) S 
1440 6000 P (A) S 71 J ( final) S 71 J ( alternative) S 71 J ( is) S 71 J ( to) S 71 J ( create) S 71 J ( a) S 71 J ( new) S 71 J ( IP) S 71 J ( encapsulation) S 71 J ( protocol) S 71 J ( which) S 71 J ( uses) S 71 J ( the) S 71 J ( current) S 71 J ( IP) S 71 J ( header) S 
1440 6240 P (format.) S 84 J ( ) S 85 J ( By) S 84 J ( using) S 85 J ( encapsulation,) S 84 J ( a) S 85 J ( destination) S 84 J ( can) S 85 J ( be) S 84 J ( reached) S 84 J ( transparently) S 84 J ( without) S 84 J ( the) S 84 J ( source) S 
1440 6480 P (having) S 134 J ( to) S 135 J ( know) S 134 J ( topology) S 135 J ( specifics.) S 134 J ( ) S 135 J ( Virtual) S 134 J ( networks) S 135 J ( can) S 134 J ( be) S 134 J ( created) S 134 J ( by) S 134 J ( tying) S 134 J ( otherwise) S 
1440 6720 P (unconnected) S 60 J ( machines) S 60 J ( together) S 60 J ( with) S 60 J ( flows) S 60 J ( through) S 60 J ( an) S 60 J ( encapsulation) S 60 J ( space.) S 
1440 14640 P (Woodburn) S 60 J ( &) S 60 J ( Mills) S 
10153 14640 P (Page) S 60 J ( ) S (3) S 0 12 F 
PE 
1440 1680 P 24 12 F (RFC) S 60 J ( 1241) S 
5035 1680 P (Internet) S 60 J ( Encapsulation) S 
9860 1680 P (July) S 60 J ( 1991) S 
1080 1920 P II1
1080 9201 IX 10080 12960 7281 9360 IS 0 15840 IX
II2
%%BeginDocument: RFC-FIG1.EPS
%!PS-Adobe-2.0 EPSF-1.2
%%Title: RFC-FIG1.EPS
%%Creator: Freelance Plus 3.01
%%CreationDate: 1/16/1991
%%Pages: 1
%%DocumentFonts: (atend)
%%BoundingBox: 0 0 648 468
%%EndComments

%%BeginProcSet: Freelance Plus
/Freelance_Plus dup 100 dict def load begin
[ ] {bind} stopped { (patching the bind operator...) = flush
/*bind /bind load def /bind { dup xcheck { *bind } if } *bind def } if pop
/bdf {bind def} bind def /ldf {load def} bdf
/mt /moveto ldf /rt /rmoveto ldf /l2 /lineto ldf /c2 /curveto ldf
/sg /setgray ldf /gs /gsave ldf /ef /eofill ldf /rl2 /rlineto ldf
/st /stroke ldf /gr /grestore ldf /np /newpath ldf
/sv /save ldf /su /statusdict ldf /rs /restore ldf
/sw /setlinewidth ldf /sd /setdash ldf /cp /closepath ldf /ed {exch def } bdf
/cfnt {findfont exch makefont setfont} bdf
/itr {transform round exch round exch itransform} bdf
/fres 72 0 matrix currentmatrix dtransform
exch dup mul exch dup mul add sqrt def
/res fres def /mcm matrix currentmatrix bdf
%%EndProcSet
end
%%EndProlog

%%BeginSetup
Freelance_Plus begin
save newpath
.1 .1 scale
/ecm matrix currentmatrix bdf
/sem {ecm setmatrix} bdf
-720 -720 translate
2 setlinecap
0 setlinejoin
1.42 setmiterlimit%%EndSetup

0.000 sg
6 sw
sv np [] 0 sd 
1818 3405 itr mt
currentpoint translate
np 1.000 1.000 scale
0 0 898 0.000 360.000 arc sem
st rs

sv np 
3254 2329 itr mt
currentpoint translate
np 1.000 1.000 scale
0 0 898 0.000 360.000 arc sem
st rs

sv np 
4690 3405 itr mt
currentpoint translate
np 1.000 1.000 scale
0 0 898 0.000 360.000 arc sem
st rs

sv np 
6126 2329 itr mt
currentpoint translate
np 1.000 1.000 scale
0 0 898 0.000 360.000 arc sem
st rs

sv np 
2530 2861 itr mt
currentpoint translate
np 1.000 1.000 scale
0 0 62 0.000 360.000 arc sem
gs 0.850 sg
ef gr
st rs

sv np 
3991 2861 itr mt
currentpoint translate
np 1.000 1.000 scale
0 0 62 0.000 360.000 arc sem
gs 0.850 sg
ef gr
st rs

sv np 
5414 2861 itr mt
currentpoint translate
np 1.000 1.000 scale
0 0 62 0.000 360.000 arc sem
gs 0.850 sg
ef gr
st rs

sv np 
1569 3599 itr mt
currentpoint translate
np 1.000 1.000 scale
0 0 62 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
6213 2090 itr mt
currentpoint translate
np 1.000 1.000 scale
0 0 62 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
1584 3541 itr mt
1706 3068 itr l2
2081 3774 itr l2
2428 3069 itr l2
st rs

sv np 
2503 2916 itr mt
2466 3088 itr l2
2390 3050 itr l2
2503 2916 itr l2
gs 0.100 sg
ef gr
cp
st rs

sv np [100 60] 50 sd 
2562 2808 itr mt
3155 1816 itr l2
3155 2522 itr l2
3754 2201 itr l2
3917 2643 itr l2
st rs

sv np [] 0 sd 
3976 2803 itr mt
3877 2658 itr l2
3957 2628 itr l2
3976 2803 itr l2
gs 0.100 sg
ef gr
cp
st rs

sv np [100 60] 50 sd 
4027 2910 itr mt
4416 3646 itr l2
4428 2811 itr l2
5078 3437 itr l2
5297 3061 itr l2
st rs

sv np [] 0 sd 
5383 2915 itr mt
5334 3083 itr l2
5260 3040 itr l2
5383 2915 itr l2
gs 0.100 sg
ef gr
cp
st rs

sv np 
5473 2845 itr mt
6026 2699 itr l2
6146 2310 itr l2
st rs

sv np 
6196 2147 itr mt
6187 2322 itr l2
6105 2297 itr l2
6196 2147 itr l2
gs 0.100 sg
ef gr
cp
st rs

sv np 
5231 5182 itr mt
5693 5182 itr l2
st rs

sv np [100 60] 50 sd 
5244 4958 itr mt
5693 4958 itr l2
st rs

/Ich 256 array def StandardEncoding Ich copy pop /bullet/paragraph/section/dieresis/tilde/ring
/circumflex/grave/acute/quotedblleft/quotesingle
/ellipsis/endash/emdash/guilsinglleft/guilsinglright
/quotedblbase/quotesinglbase/quotedblright/OE/oe
/Ydieresis/fi/fl/dagger/daggerdbl/Ccedilla/udieresis
/eacute/acircumflex/adieresis/agrave/aring/ccedilla
/ecircumflex/edieresis/egrave/idieresis/icircumflex
/igrave/Adieresis/Aring/Eacute/ae/AE/ocircumflex
/odieresis/ograve/ucircumflex/ugrave/ydieresis
/Odieresis/Udieresis/oslash/sterling/Oslash/florin
/aacute/iacute/oacute/uacute/ntilde/Ntilde/ordfeminine
/ordmasculine/questiondown/exclamdown/guillemotleft
/guillemotright/Aacute/Acircumflex/Agrave/cent/yen
/atilde/Atilde/currency/Ecircumflex/Edieresis/Egrave
/dotlessi/Iacute/Icircumflex/Idieresis/Igrave/Oacute
/germandbls/Ocircumflex/Ograve/otilde/Otilde/Uacute
/Ucircumflex/Ugrave/macron/cedilla/periodcentered
Ich 127 97 getinterval astore pop
/Ienc { /ncs Ich def /nfn ed /bfn ed /bfd bfn findfont def
/nf bfd maxlength dict def bfd{exch dup dup /FID ne exch /Encoding ne and
{exch nf 3 1 roll put}{pop pop} ifelse }forall nf/FontName nfn put
nf/Encoding ncs put nfn nf definefont pop}bdf

/IencO { /ncs Ich def /nfn ed /bfn ed /lnw ed /bfd bfn findfont def
/nf bfd maxlength 4 add dict def bfd{exch dup dup /FID ne exch /Encoding ne and
{exch nf 3 1 roll put}{pop pop} ifelse }forall nf/FontName nfn put nf/Encoding ncs put
nf/PaintType 2 put nf/StrokeWidth lnw put
nfn nf definefont pop}bdf

/IencSO { /nfn ed /bfn ed /lnw ed /bfd bfn findfont def
/nf bfd maxlength 4 add dict def bfd{exch dup /FID ne { exch nf 3 1 roll put}{pop pop} ifelse }forall
nf/FontName nfn put nf/PaintType 2 put
nf/StrokeWidth lnw put nfn nf definefont pop}bdf

/Helvetica-Oblique /Flfon6 Ienc
[115 0 0.00 115 -11 -85]  /Flfon6 cfnt

5791 5187 itr mt
0 43 itr rt
(Clear Datagram) 
show


5791 4963 itr mt
0 43 itr rt
(Encapsulated Datagram) 
show

sv np [] 0 sd 
5628 4717 itr mt
currentpoint translate
np 1.000 1.000 scale
0 0 62 0.000 360.000 arc sem
gs 0.850 sg
ef gr
st rs

sv np 
5628 4489 itr mt
currentpoint translate
np 1.000 1.000 scale
0 0 62 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs


5791 4710 itr mt
0 43 itr rt
(Encapsulator/Decapsulator) 
show


5791 4497 itr mt
0 43 itr rt
(User Space Host) 
show

[153 0 0.00 153 -15 -113]  /Flfon6 cfnt

1837 4488 itr mt
-480 0 itr rt
0 57 itr rt
(User Space A) 
show


3256 1309 itr mt
-488 0 itr rt
0 57 itr rt
(Encapsulation) 
show


3252 1133 itr mt
-297 0 itr rt
0 57 itr rt
(Space B) 
show


4667 4681 itr mt
-488 0 itr rt
0 57 itr rt
(Encapsulation) 
show


4666 4505 itr mt
-301 0 itr rt
0 57 itr rt
(Space C) 
show


6210 1277 itr mt
-484 0 itr rt
0 57 itr rt
(User Space D) 
show

rs end

%%Trailer
%%DocumentFonts: Helvetica-Oblique

%%EndDocument
end IT

4061 9681 P (Fig.) S 60 J ( 1.) S 60 J ( ) S 60 J ( Encapsulation) S 60 J ( Architectural) S 60 J ( Model) S 
1440 10161 P (Up) S 83 J ( until) S 84 J ( now,) S 83 J ( there) S 84 J ( has) S 83 J ( been) S 84 J ( no) S 83 J ( standard) S 84 J ( for) S 84 J ( an) S 84 J ( encapsulation) S 84 J ( protocol.) S 84 J ( ) S 84 J ( This) S 84 J ( RFC) S 84 J ( provides) S 84 J ( a) S 
1440 10401 P (means) S 60 J ( of) S 60 J ( performing) S 60 J ( encapsulation) S 60 J ( in) S 60 J ( the) S 60 J ( Internet) S 60 J ( environment.) S 
1440 11121 P 0 12 F 24 12 F B (4.) S 60 J ( Architecture) S 60 J ( and) S 60 J ( Approach) S E 
1440 11601 P 0 12 F 24 12 F (The) S 165 J ( architecture) S 166 J ( for) S 165 J ( encapsulation) S 166 J ( is) S 165 J ( based) S 166 J ( on) S 165 J ( two) S 166 J ( entities) S 165 J ( --) S 166 J ( an) S 165 J ( Encapsulator) S 165 J ( and) S 165 J ( a) S 
1440 11841 P (Decapsulator.) S 60 J ( ) S 60 J ( These) S 60 J ( entities) S 60 J ( and) S 60 J ( the) S 60 J ( associated) S 60 J ( spaces) S 60 J ( are) S 60 J ( shown) S 60 J ( in) S 60 J ( Fig.) S 60 J ( 1.) S 
1440 12321 P (Encapsulators) S 94 J ( and) S 95 J ( Decapsulators) S 94 J ( have) S 95 J ( addresses) S 94 J ( in) S 95 J ( the) S 94 J ( User) S 95 J ( Spaces) S 94 J ( to) S 95 J ( which) S 94 J ( they) S 94 J ( belong,) S 94 J ( as) S 
1440 12561 P (well) S 117 J ( as) S 118 J ( addresses) S 117 J ( in) S 118 J ( the) S 118 J ( Encapsulation) S 118 J ( Spaces) S 118 J ( to) S 118 J ( which) S 118 J ( they) S 118 J ( belong.) S 118 J ( An) S 118 J ( encapsulator) S 118 J ( will) S 
1440 12801 P (receive) S 79 J ( a) S 80 J ( Clear) S 79 J ( Datagram) S 80 J ( from) S 79 J ( its) S 80 J ( User) S 79 J ( Space,) S 80 J ( and) S 79 J ( after) S 80 J ( determining) S 80 J ( that) S 80 J ( encapsulation) S 80 J ( should) S 
1440 13041 P (be) S 82 J ( used,) S 83 J ( perform) S 82 J ( a) S 83 J ( mapping) S 82 J ( function) S 83 J ( which) S 82 J ( translates) S 83 J ( the) S 82 J ( User) S 83 J ( Space) S 83 J ( information) S 83 J ( in) S 83 J ( the) S 83 J ( Clear) S 
1440 13281 P (Header) S 76 J ( to) S 77 J ( an) S 76 J ( Encapsulation) S 77 J ( Header.) S 77 J ( ) S 77 J ( This) S 77 J ( Encapsulation) S 77 J ( Header) S 77 J ( is) S 77 J ( then) S 77 J ( prepended) S 77 J ( to) S 77 J ( the) S 77 J ( Clear) S 
1440 13521 P (Datagram) S 70 J ( to) S 71 J ( form) S 71 J ( the) S 71 J ( Encapsulated) S 71 J ( Datagram,) S 71 J ( as) S 71 J ( in) S 71 J ( Fig) S 71 J ( 2.) S 71 J ( ) S 71 J ( It) S 71 J ( is) S 71 J ( desirable) S 71 J ( that) S 71 J ( the) S 71 J ( encapsulation) S 
1440 13761 P (process) S 101 J ( be) S 102 J ( transparent) S 101 J ( to) S 102 J ( entities) S 101 J ( in) S 102 J ( the) S 101 J ( User) S 101 J ( Space.) S 101 J ( ) S 101 J ( Only) S 101 J ( the) S 101 J ( Encapsulator) S 101 J ( need) S 101 J ( know) S 101 J ( that) S 
1440 14001 P (encapsulation) S 60 J ( is) S 60 J ( occurring.) S 
1440 14640 P (Woodburn) S 60 J ( &) S 60 J ( Mills) S 
10153 14640 P (Page) S 60 J ( ) S (4) S 0 12 F 
PE 
1440 1680 P 24 12 F (RFC) S 60 J ( 1241) S 
5035 1680 P (Internet) S 60 J ( Encapsulation) S 
9860 1680 P (July) S 60 J ( 1991) S 
2088 2040 P 0 12 F 57 12 F (ZDDDDDDDDDDD) S -72 J ( DBDDDDDDDDDDDDDDDD) S -72 J ( DBDDDDDDDDDBDDDDDDDDDDDDDD?) S 
2304 2280 P 0 12 F 24 12 F (Encapsulating) S 877 J ( Encapsulation) S 1034 J ( Clear) S 882 J ( Remainder) S 60 J ( of) S 
1368 2280 P 0 12 F 57 12 F () S 720 J ( 3) S 1656 J ( 3) S 2376 J ( 3) S 1296 J ( 3) S 2016 J ( 3) S 
2304 2520 P 0 12 F 24 12 F () S 276 J ( IP) S 60 J ( Header) S 1010 J ( Proto.) S 60 J ( Header) S 962 J ( Header) S 688 J ( Clear) S 60 J ( Datagram) S 
1368 2520 P 0 12 F 57 12 F () S 720 J ( 3) S 1656 J ( 3) S 2376 J ( 3) S 1296 J ( 3) S 2016 J ( 3) S 
2088 2760 P (@DDDDDDDDDDD) S -72 J ( DADDDDDDDDDDDDDDDD) S -72 J ( DADDDDDDDDDADDDDDDDDDDDDDDY) S 
1368 3120 P () S 720 J ( 3) S 4176 J ( 3) S 3456 J ( 3) S 
2304 3360 P 0 12 F 24 12 F () S 958 J ( Encapsulation) S 60 J ( Header) S 2137 J ( Clear) S 60 J ( Datagram) S 
1368 3360 P 0 12 F 57 12 F () S 720 J ( 3) S 4176 J ( 3) S 3456 J ( 3) S 
1368 3600 P () S 720 J ( 3) S 4176 J ( 3) S 3456 J ( 3) S 
3874 4320 P 0 12 F 24 12 F (Fig.) S 60 J ( 2.) S 60 J ( ) S 60 J ( Example) S 60 J ( of) S 60 J ( an) S 60 J ( Encapsulated) S 60 J ( Datagram) S 
1440 4800 P (The) S 82 J ( Encapsulator) S 83 J ( forwards) S 82 J ( the) S 83 J ( datagram) S 82 J ( to) S 83 J ( a) S 82 J ( Decapsulator) S 82 J ( whose) S 82 J ( identity) S 82 J ( is) S 82 J ( determined) S 82 J ( at) S 82 J ( the) S 
1440 5040 P (time) S 78 J ( of) S 79 J ( encapsulation.) S 78 J ( ) S 79 J ( The) S 78 J ( Decapsulator) S 79 J ( receives) S 78 J ( the) S 79 J ( Encapsulated) S 78 J ( Datagram) S 79 J ( and) S 78 J ( removes) S 78 J ( the) S 
1440 5280 P (Encapsulation) S 130 J ( Header) S 131 J ( and) S 130 J ( treats) S 130 J ( the) S 130 J ( Clear) S 130 J ( Datagram) S 130 J ( as) S 130 J ( if) S 130 J ( it) S 130 J ( were) S 130 J ( received) S 130 J ( locally.) S 130 J ( ) S 130 J ( The) S 
1440 5520 P (requirement) S 84 J ( for) S 85 J ( the) S 84 J ( address) S 85 J ( of) S 84 J ( the) S 85 J ( Decapsulator) S 84 J ( is) S 85 J ( that) S 85 J ( it) S 85 J ( be) S 85 J ( reachable) S 85 J ( from) S 85 J ( the) S 85 J ( Encapsulator's) S 
1440 5760 P (Encapsulation) S 60 J ( Space) S 60 J ( address.) S 
1440 6480 P 0 12 F 24 12 F B (5.) S 60 J ( Generation) S 60 J ( of) S 60 J ( the) S 60 J ( Encapsulation) S 60 J ( Header) S E 
1440 6960 P 0 12 F 24 12 F (The) S 66 J ( contents) S 67 J ( of) S 66 J ( the) S 67 J ( Encapsulation) S 67 J ( Header) S 67 J ( are) S 67 J ( generated) S 67 J ( by) S 67 J ( performing) S 67 J ( a) S 67 J ( mapping) S 67 J ( function) S 67 J ( from) S 
1440 7200 P (the) S 63 J ( Clear) S 64 J ( Header) S 63 J ( to) S 64 J ( the) S 63 J ( contents) S 64 J ( of) S 63 J ( the) S 64 J ( Encapsulation) S 63 J ( Header.) S 64 J ( ) S 64 J ( This) S 64 J ( mapping) S 64 J ( function) S 64 J ( could) S 64 J ( take) S 
1440 7440 P (many) S 99 J ( forms,) S 100 J ( but) S 100 J ( the) S 100 J ( end) S 100 J ( result) S 100 J ( should) S 100 J ( be) S 100 J ( the) S 100 J ( same.) S 100 J ( ) S 100 J ( The) S 100 J ( following) S 100 J ( paragraphs) S 100 J ( describe) S 100 J ( one) S 
1440 7680 P (method) S 60 J ( of) S 60 J ( performing) S 60 J ( the) S 60 J ( mapping.) S 60 J ( ) S 60 J ( The) S 60 J ( process) S 60 J ( is) S 60 J ( illustrated) S 60 J ( in) S 60 J ( Fig.) S 60 J ( 3.) S 
1440 8160 P (In) S 83 J ( the) S 84 J ( first) S 83 J ( part) S 84 J ( of) S 83 J ( the) S 83 J ( mapping) S 83 J ( function,) S 83 J ( the) S 83 J ( Clear) S 83 J ( Header) S 83 J ( is) S 83 J ( matched) S 83 J ( with) S 83 J ( stored) S 83 J ( headers) S 83 J ( and) S 
1440 8400 P (masks) S 69 J ( to) S 70 J ( determine) S 69 J ( a) S 70 J ( Flow) S 69 J ( ID.) S 70 J ( ) S 69 J ( This) S 70 J ( is) S 69 J ( essentially) S 70 J ( a) S 70 J ( "mask-and-match") S 70 J ( table) S 70 J ( look) S 70 J ( up,) S 70 J ( where) S 70 J ( the) S 
1440 8640 P (lookup) S 79 J ( table) S 80 J ( holds) S 79 J ( three) S 80 J ( entries,) S 79 J ( a) S 80 J ( Clear) S 79 J ( Header,) S 80 J ( a) S 79 J ( header) S 80 J ( mask,) S 79 J ( and) S 80 J ( a) S 79 J ( corresponding) S 80 J ( Flow) S 79 J ( ID.) S 
1440 8880 P (The) S 63 J ( mask) S 64 J ( can) S 63 J ( be) S 64 J ( used) S 63 J ( for) S 64 J ( allowing) S 63 J ( a) S 64 J ( range) S 63 J ( of) S 63 J ( source) S 63 J ( and) S 63 J ( destination) S 63 J ( addresses) S 63 J ( to) S 63 J ( map) S 63 J ( to) S 63 J ( a) S 63 J ( given) S 
1440 9120 P (flow.) S 66 J ( ) S 67 J ( Other) S 66 J ( fields,) S 67 J ( such) S 66 J ( as) S 67 J ( the) S 66 J ( IP) S 67 J ( TOS) S 66 J ( bits) S 67 J ( or) S 66 J ( even) S 67 J ( the) S 66 J ( TCP) S 67 J ( source) S 66 J ( or) S 66 J ( destination) S 66 J ( port) S 66 J ( addresses) S 
1440 9360 P (could) S 70 J ( also) S 71 J ( be) S 70 J ( used) S 71 J ( to) S 70 J ( discriminate) S 71 J ( between) S 70 J ( Flows.) S 71 J ( ) S 70 J ( This) S 70 J ( flexibility) S 70 J ( allows) S 70 J ( many) S 70 J ( possibilities) S 70 J ( for) S 
1440 9600 P (using) S 70 J ( the) S 71 J ( mapping) S 70 J ( function.) S 71 J ( ) S 70 J ( Not) S 71 J ( only) S 70 J ( can) S 71 J ( a) S 70 J ( given) S 70 J ( network) S 70 J ( be) S 70 J ( associated) S 70 J ( with) S 70 J ( a) S 70 J ( particular) S 70 J ( flow,) S 
1440 9840 P (but) S 60 J ( even) S 60 J ( a) S 60 J ( particular) S 60 J ( TCP) S 60 J ( protocol) S 60 J ( or) S 60 J ( connection) S 60 J ( could) S 60 J ( be) S 60 J ( distinguished) S 60 J ( from) S 60 J ( another.) S 
1440 10320 P (How) S 70 J ( the) S 71 J ( lookup) S 70 J ( table) S 71 J ( is) S 70 J ( built) S 71 J ( and) S 70 J ( maintained) S 71 J ( is) S 70 J ( not) S 71 J ( part) S 70 J ( of) S 71 J ( this) S 70 J ( protocol.) S 71 J ( ) S 70 J ( It) S 71 J ( is) S 70 J ( assumed) S 71 J ( that) S 70 J ( it) S 71 J ( is) S 
1440 10560 P (managed) S 80 J ( by) S 81 J ( some) S 80 J ( higher) S 81 J ( layer) S 80 J ( entity.) S 81 J ( ) S 80 J ( It) S 81 J ( would) S 80 J ( be) S 81 J ( sufficient) S 80 J ( to) S 81 J ( configure) S 80 J ( the) S 81 J ( tables) S 81 J ( from) S 81 J ( ascii) S 
1440 10800 P (text) S 60 J ( files) S 60 J ( if) S 60 J ( necessary.) S 
1440 14640 P (Woodburn) S 60 J ( &) S 60 J ( Mills) S 
10153 14640 P (Page) S 60 J ( ) S (5) S 0 12 F 
PE 
1440 1680 P 24 12 F (RFC) S 60 J ( 1241) S 
5035 1680 P (Internet) S 60 J ( Encapsulation) S 
9860 1680 P (July) S 60 J ( 1991) S 
1080 1920 P II1
1080 6329 IX 10080 13580 4409 5940 IS 0 15840 IX
II2
%%BeginDocument: RFC-FIG3.EPS
%!PS-Adobe-2.0 EPSF-1.2
%%Title: RFC-FIG3.EPS
%%Creator: Freelance Plus 3.01
%%CreationDate: 1/16/1991
%%Pages: 1
%%DocumentFonts: (atend)
%%BoundingBox: 0 0 679 297
%%EndComments

%%BeginProcSet: Freelance Plus
/Freelance_Plus dup 100 dict def load begin
[ ] {bind} stopped { (patching the bind operator...) = flush
/*bind /bind load def /bind { dup xcheck { *bind } if } *bind def } if pop
/bdf {bind def} bind def /ldf {load def} bdf
/mt /moveto ldf /rt /rmoveto ldf /l2 /lineto ldf /c2 /curveto ldf
/sg /setgray ldf /gs /gsave ldf /ef /eofill ldf /rl2 /rlineto ldf
/st /stroke ldf /gr /grestore ldf /np /newpath ldf
/sv /save ldf /su /statusdict ldf /rs /restore ldf
/sw /setlinewidth ldf /sd /setdash ldf /cp /closepath ldf /ed {exch def } bdf
/cfnt {findfont exch makefont setfont} bdf
/itr {transform round exch round exch itransform} bdf
/fres 72 0 matrix currentmatrix dtransform
exch dup mul exch dup mul add sqrt def
/res fres def /mcm matrix currentmatrix bdf
%%EndProcSet
end
%%EndProlog

%%BeginSetup
Freelance_Plus begin
save newpath
.1 .1 scale
/ecm matrix currentmatrix bdf
/sem {ecm setmatrix} bdf
-91 -91 translate
2 setlinecap
0 setlinejoin
1.42 setmiterlimit%%EndSetup

0.000 sg
6 sw
sv np [] 0 sd 
1826 932 itr mt
2725 932 itr l2
2725 1607 itr l2
1826 1607 itr l2
1826 932 itr l2
cp
st rs

sv np 
3187 1157 itr mt
3636 1157 itr l2
3636 1382 itr l2
3187 1382 itr l2
3187 1157 itr l2
cp
st rs

sv np 
4086 1591 itr mt
4772 1591 itr l2
4772 2747 itr l2
4086 2747 itr l2
4086 1591 itr l2
cp
st rs

sv np 
5222 467 itr mt
6358 467 itr l2
6358 1157 itr l2
5222 1157 itr l2
5222 467 itr l2
cp
st rs

sv np 
1139 1271 itr mt
1655 1271 itr l2
st rs

sv np 
1826 1271 itr mt
1655 1313 itr l2
1655 1228 itr l2
1826 1271 itr l2
gs 0.100 sg
ef gr
cp
st rs

sv np 
1364 1271 itr mt
1364 709 itr l2
5052 709 itr l2
st rs

sv np 
5222 709 itr mt
5052 751 itr l2
5052 666 itr l2
5222 709 itr l2
gs 0.100 sg
ef gr
cp
st rs

sv np 
2725 1271 itr mt
3017 1271 itr l2
st rs

sv np 
3187 1271 itr mt
3017 1313 itr l2
3017 1228 itr l2
3187 1271 itr l2
gs 0.100 sg
ef gr
cp
st rs

sv np 
3636 1271 itr mt
3861 1271 itr l2
3861 2282 itr l2
3915 2282 itr l2
st rs

sv np 
4085 2282 itr mt
3915 2324 itr l2
3915 2239 itr l2
4085 2282 itr l2
gs 0.100 sg
ef gr
cp
st rs

sv np 
4772 2282 itr mt
4997 2282 itr l2
4997 933 itr l2
5052 933 itr l2
st rs

sv np 
5222 933 itr mt
5052 976 itr l2
5052 891 itr l2
5222 933 itr l2
gs 0.100 sg
ef gr
cp
st rs

/Ich 256 array def StandardEncoding Ich copy pop /bullet/paragraph/section/dieresis/tilde/ring
/circumflex/grave/acute/quotedblleft/quotesingle
/ellipsis/endash/emdash/guilsinglleft/guilsinglright
/quotedblbase/quotesinglbase/quotedblright/OE/oe
/Ydieresis/fi/fl/dagger/daggerdbl/Ccedilla/udieresis
/eacute/acircumflex/adieresis/agrave/aring/ccedilla
/ecircumflex/edieresis/egrave/idieresis/icircumflex
/igrave/Adieresis/Aring/Eacute/ae/AE/ocircumflex
/odieresis/ograve/ucircumflex/ugrave/ydieresis
/Odieresis/Udieresis/oslash/sterling/Oslash/florin
/aacute/iacute/oacute/uacute/ntilde/Ntilde/ordfeminine
/ordmasculine/questiondown/exclamdown/guillemotleft
/guillemotright/Aacute/Acircumflex/Agrave/cent/yen
/atilde/Atilde/currency/Ecircumflex/Edieresis/Egrave
/dotlessi/Iacute/Icircumflex/Idieresis/Igrave/Oacute
/germandbls/Ocircumflex/Ograve/otilde/Otilde/Uacute
/Ucircumflex/Ugrave/macron/cedilla/periodcentered
Ich 127 97 getinterval astore pop
/Ienc { /ncs Ich def /nfn ed /bfn ed /bfd bfn findfont def
/nf bfd maxlength dict def bfd{exch dup dup /FID ne exch /Encoding ne and
{exch nf 3 1 roll put}{pop pop} ifelse }forall nf/FontName nfn put
nf/Encoding ncs put nfn nf definefont pop}bdf

/IencO { /ncs Ich def /nfn ed /bfn ed /lnw ed /bfd bfn findfont def
/nf bfd maxlength 4 add dict def bfd{exch dup dup /FID ne exch /Encoding ne and
{exch nf 3 1 roll put}{pop pop} ifelse }forall nf/FontName nfn put nf/Encoding ncs put
nf/PaintType 2 put nf/StrokeWidth lnw put
nfn nf definefont pop}bdf

/IencSO { /nfn ed /bfn ed /lnw ed /bfd bfn findfont def
/nf bfd maxlength 4 add dict def bfd{exch dup /FID ne { exch nf 3 1 roll put}{pop pop} ifelse }forall
nf/FontName nfn put nf/PaintType 2 put
nf/StrokeWidth lnw put nfn nf definefont pop}bdf

/Helvetica-Oblique /Flfon6 Ienc
[153 0 0.00 153 -15 -113]  /Flfon6 cfnt

812 1357 itr mt
-190 0 itr rt
0 57 itr rt
(Clear) 
show


807 1181 itr mt
-258 0 itr rt
0 57 itr rt
(Header) 
show


2285 1439 itr mt
-190 0 itr rt
0 57 itr rt
(Mask) 
show


2280 1262 itr mt
-58 0 itr rt
0 57 itr rt
(&) 
show


2284 1085 itr mt
-216 0 itr rt
0 57 itr rt
(Match) 
show

[115 0 0.00 115 -11 -85]  /Flfon6 cfnt

3424 1264 itr mt
-200 0 itr rt
0 43 itr rt
(Flow ID) 
show

[153 0 0.00 153 -15 -113]  /Flfon6 cfnt

4427 2290 itr mt
-246 0 itr rt
0 57 itr rt
(Encap.) 
show


4428 2113 itr mt
-157 0 itr rt
0 57 itr rt
(Info.) 
show


4425 1936 itr mt
-198 0 itr rt
0 57 itr rt
(Table) 
show


5795 909 itr mt
-488 0 itr rt
0 57 itr rt
(Encapsulation) 
show


5801 732 itr mt
-258 0 itr rt
0 57 itr rt
(Header) 
show


3238 572 itr mt
-411 0 itr rt
0 57 itr rt
(Some Clear) 
show


3232 395 itr mt
-429 0 itr rt
0 57 itr rt
(Header Info.) 
show

rs end

%%Trailer
%%DocumentFonts: Helvetica-Oblique

%%EndDocument
end IT

3821 6809 P (Fig.) S 60 J ( 3.) S 60 J ( ) S 60 J ( Generation) S 60 J ( of) S 60 J ( the) S 60 J ( Encapsulation) S 60 J ( Header) S 
1440 7289 P (The) S 95 J ( Flow) S 96 J ( IDs) S 95 J ( are) S 96 J ( managed) S 95 J ( at) S 96 J ( a) S 95 J ( higher) S 96 J ( layer) S 95 J ( as) S 96 J ( well.) S 95 J ( ) S 96 J ( An) S 95 J ( example) S 96 J ( of) S 95 J ( how) S 96 J ( Flow) S 95 J ( IDs) S 96 J ( can) S 95 J ( be) S 
1440 7529 P (managed) S 81 J ( is) S 82 J ( found) S 81 J ( in) S 82 J ( the) S 81 J ( Setup) S 82 J ( protocol) S 81 J ( of) S 82 J ( the) S 81 J ( Inter-Domain) S 82 J ( Policy) S 81 J ( Sensitive) S 81 J ( Routing) S 81 J ( Protocol) S 
1440 7769 P (\(IDPR\).) S 101 J ( [4]) S 102 J ( ) S 101 J ( The) S 102 J ( upper) S 101 J ( layer) S 102 J ( protocol) S 101 J ( would) S 102 J ( be) S 101 J ( responsible) S 102 J ( for) S 101 J ( maintaining) S 102 J ( information) S 101 J ( not) S 
1440 8009 P (carried) S 96 J ( in) S 97 J ( the) S 96 J ( encapsulation) S 97 J ( protocol) S 96 J ( related) S 97 J ( to) S 96 J ( the) S 97 J ( flow.) S 97 J ( ) S 97 J ( This) S 97 J ( could) S 97 J ( include) S 97 J ( the) S 97 J ( information) S 
1440 8249 P (necessary) S 79 J ( to) S 80 J ( construct) S 79 J ( the) S 80 J ( Encapsulation) S 79 J ( Header) S 80 J ( \(described) S 79 J ( below\)) S 79 J ( as) S 79 J ( well) S 79 J ( as) S 79 J ( information) S 79 J ( such) S 
1440 8489 P (as) S 147 J ( the) S 148 J ( type) S 147 J ( of) S 148 J ( data) S 147 J ( being) S 148 J ( encapsulated) S 147 J ( \(currently) S 148 J ( only) S 147 J ( IP) S 148 J ( is) S 147 J ( defined\),) S 148 J ( and) S 147 J ( the) S 147 J ( type) S 147 J ( of) S 
1440 8729 P (authentication) S 71 J ( used) S 72 J ( if) S 71 J ( any.) S 72 J ( ) S 71 J ( Note) S 71 J ( that) S 71 J ( IDPR) S 71 J ( Setup) S 71 J ( requires) S 71 J ( the) S 71 J ( use) S 71 J ( of) S 71 J ( a) S 71 J ( longer) S 71 J ( Flow) S 71 J ( ID) S 71 J ( which) S 71 J ( is) S 
1440 8969 P (unique) S 60 J ( for) S 60 J ( the) S 60 J ( entire) S 60 J ( universe) S 60 J ( of) S 60 J ( Encapsulators) S 60 J ( and) S 60 J ( is) S 60 J ( the) S 60 J ( same) S 60 J ( at) S 60 J ( every) S 60 J ( Encapsulator.) S 
1440 9449 P (The) S 74 J ( Flow) S 75 J ( ID) S 74 J ( that) S 75 J ( results) S 74 J ( from) S 75 J ( the) S 74 J ( mapping) S 75 J ( of) S 74 J ( a) S 75 J ( Clear) S 74 J ( Header) S 74 J ( is) S 74 J ( a) S 74 J ( 32) S 74 J ( bit) S 74 J ( quantity) S 74 J ( and) S 74 J ( identifies) S 
1440 9689 P (the) S 104 J ( Flow) S 105 J ( as) S 105 J ( it) S 105 J ( is) S 105 J ( seen) S 105 J ( by) S 105 J ( the) S 105 J ( Encapsulator.) S 105 J ( ) S 105 J ( If) S 105 J ( a) S 105 J ( Clear) S 105 J ( Datagram) S 105 J ( must) S 105 J ( be) S 105 J ( encapsulated) S 105 J ( and) S 
1440 9929 P (decapsulated) S 77 J ( several) S 78 J ( times) S 77 J ( in) S 78 J ( order) S 78 J ( reach) S 78 J ( the) S 78 J ( destination,) S 78 J ( the) S 78 J ( Flow) S 78 J ( ID) S 78 J ( may) S 78 J ( be) S 78 J ( different) S 78 J ( at) S 78 J ( each) S 
1440 10169 P (Encapsulator,) S 101 J ( but) S 102 J ( need) S 101 J ( not) S 102 J ( be.) S 101 J ( ) S 102 J ( The) S 101 J ( Flow) S 102 J ( ID) S 101 J ( acts) S 102 J ( as) S 101 J ( an) S 102 J ( index) S 101 J ( into) S 102 J ( a) S 101 J ( table) S 101 J ( of) S 101 J ( Encapsulation) S 
1440 10409 P (Header) S 91 J ( information) S 92 J ( that) S 91 J ( is) S 92 J ( used) S 91 J ( to) S 92 J ( build) S 91 J ( the) S 92 J ( Encapsulation) S 91 J ( Header.) S 91 J ( ) S 91 J ( Note) S 91 J ( that) S 91 J ( the) S 91 J ( decision) S 91 J ( to) S 
1440 10649 P (make) S 72 J ( the) S 73 J ( Flow) S 72 J ( ID) S 73 J ( local) S 72 J ( to) S 73 J ( the) S 72 J ( Encapsulator) S 73 J ( is) S 72 J ( due) S 73 J ( to) S 72 J ( the) S 73 J ( difficulty) S 73 J ( in) S 73 J ( choosing) S 73 J ( and) S 73 J ( maintaining) S 
1440 10889 P (globally) S 60 J ( unique) S 60 J ( identifiers.) S 
1440 11369 P (The) S 62 J ( intermediate) S 63 J ( step) S 63 J ( of) S 63 J ( using) S 63 J ( a) S 63 J ( Flow) S 63 J ( ID) S 63 J ( entirely) S 63 J ( optional.) S 63 J ( ) S 63 J ( The) S 63 J ( important) S 63 J ( requirement) S 63 J ( is) S 63 J ( that) S 63 J ( all) S 
1440 11609 P (Encapsulators) S 104 J ( along) S 105 J ( a) S 104 J ( Flow) S 105 J ( map) S 104 J ( the) S 105 J ( same) S 104 J ( Clear) S 105 J ( Header) S 104 J ( to) S 105 J ( the) S 104 J ( same) S 104 J ( Flow) S 104 J ( \(which) S 104 J ( could) S 104 J ( be) S 
1440 11849 P (identified) S 87 J ( by) S 87 J ( different) S 87 J ( identifiers) S 87 J ( along) S 87 J ( the) S 87 J ( way\).) S 87 J ( ) S 87 J ( However,) S 87 J ( by) S 87 J ( allowing) S 87 J ( for) S 87 J ( a) S 87 J ( Flow) S 87 J ( ID) S 87 J ( in) S 87 J ( the) S 
1440 12089 P (protocol,) S 90 J ( a) S 91 J ( more) S 90 J ( efficient) S 91 J ( implementation) S 90 J ( of) S 91 J ( the) S 90 J ( mapping) S 91 J ( function) S 90 J ( becomes) S 91 J ( possible.) S 90 J ( ) S 90 J ( This) S 90 J ( is) S 
1440 12329 P (discussed) S 60 J ( in) S 60 J ( more) S 60 J ( detail) S 60 J ( when) S 60 J ( we) S 60 J ( consider) S 60 J ( the) S 60 J ( Decapsulator.) S 
1440 12809 P (The) S 60 J ( following) S 60 J ( information) S 60 J ( is) S 60 J ( required) S 60 J ( to) S 60 J ( construct) S 60 J ( the) S 60 J ( Encapsulation) S 60 J ( Header:) S 
2160 13289 P 0 12 F 24 12 F B (Flow) S 60 J ( ID) S E 
2520 13529 P 0 12 F 24 12 F (This) S 60 J ( is) S 60 J ( the) S 60 J ( key) S 60 J ( for) S 60 J ( this) S 60 J ( table) S 60 J ( of) S 60 J ( information) S 60 J ( and) S 60 J ( represents) S 60 J ( the) S 60 J ( Flow) S 60 J ( ID) S 60 J ( relative) S 60 J ( to) S 60 J ( the) S 
2520 13769 P (current) S 60 J ( Encapsulator.) S 
1440 14640 P (Woodburn) S 60 J ( &) S 60 J ( Mills) S 
10153 14640 P (Page) S 60 J ( ) S (6) S 0 12 F 
PE 
1440 1680 P 24 12 F (RFC) S 60 J ( 1241) S 
5035 1680 P (Internet) S 60 J ( Encapsulation) S 
9860 1680 P (July) S 60 J ( 1991) S 
2160 2160 P 0 12 F 24 12 F B (Decapsulator) S 60 J ( Address) S E 
2520 2400 P 0 12 F 24 12 F (The) S 60 J ( IP) S 60 J ( address) S 60 J ( of) S 60 J ( the) S 60 J ( Decapsulator) S 60 J ( in) S 60 J ( the) S 60 J ( Encapsulation) S 60 J ( Space) S 60 J ( must) S 60 J ( be) S 60 J ( known) S 60 J ( to) S 
2520 2640 P (build) S 60 J ( the) S 60 J ( IP) S 60 J ( portion) S 60 J ( of) S 60 J ( the) S 60 J ( Encapsulation) S 60 J ( Header.) S 
2160 3120 P 0 12 F 24 12 F B (Decapsulator's) S 60 J ( Flow) S 60 J ( ID) S E 
2520 3360 P 0 12 F 24 12 F (The) S 60 J ( Flow) S 60 J ( ID,) S 60 J ( if) S 60 J ( any,) S 60 J ( for) S 60 J ( the) S 60 J ( Flow) S 60 J ( as) S 60 J ( seen) S 60 J ( by) S 60 J ( the) S 60 J ( Decapsulator) S 60 J ( must) S 60 J ( be) S 60 J ( known.) S 
2160 3840 P 0 12 F 24 12 F B (Previous) S 60 J ( Encapsulator's) S 60 J ( Address) S E 
2520 4080 P 0 12 F 24 12 F (If) S 60 J ( this) S 60 J ( is) S 60 J ( not) S 60 J ( the) S 60 J ( first) S 60 J ( Encapsulator) S 60 J ( along) S 60 J ( the) S 60 J ( Flow,) S 60 J ( the) S 60 J ( previous) S 60 J ( Encapsulator's) S 
2520 4320 P (address) S 60 J ( must) S 60 J ( be) S 60 J ( known) S 60 J ( for) S 60 J ( error) S 60 J ( reporting.) S 
2160 4800 P 0 12 F 24 12 F B (Previous) S 60 J ( Encapsulator's) S 60 J ( Flow) S 60 J ( ID) S E 
2520 5040 P 0 12 F 24 12 F (In) S 60 J ( addition) S 60 J ( to) S 60 J ( the) S 60 J ( previous) S 60 J ( Encapsulator's) S 60 J ( address,) S 60 J ( the) S 60 J ( Flow) S 60 J ( ID) S 60 J ( of) S 60 J ( the) S 60 J ( Flow) S 60 J ( relative) S 60 J ( to) S 
2520 5280 P (the) S 60 J ( previous) S 60 J ( Encapsulator) S 60 J ( must) S 60 J ( be) S 60 J ( known.) S 
1440 5760 P (The) S 61 J ( Encapsulation) S 62 J ( Header) S 61 J ( consists) S 62 J ( of) S 61 J ( an) S 62 J ( IP) S 62 J ( Header) S 62 J ( as) S 62 J ( well) S 62 J ( as) S 62 J ( an) S 62 J ( Encapsulation) S 62 J ( Protocol) S 62 J ( Header.) S 
1440 6000 P (The) S 89 J ( two) S 90 J ( pieces) S 89 J ( of) S 90 J ( information) S 89 J ( required) S 90 J ( for) S 89 J ( the) S 90 J ( Encapsulation) S 89 J ( Protocol) S 90 J ( Header) S 89 J ( which) S 90 J ( must) S 90 J ( be) S 
1440 6240 P (determined) S 93 J ( at) S 94 J ( the) S 93 J ( time) S 94 J ( of) S 93 J ( encapsulation) S 94 J ( are) S 93 J ( the) S 94 J ( protocol) S 93 J ( which) S 94 J ( is) S 93 J ( being) S 93 J ( encapsulated) S 93 J ( and) S 93 J ( the) S 
1440 6480 P (Flow) S 60 J ( ID) S 60 J ( to) S 60 J ( send) S 60 J ( to) S 60 J ( the) S 60 J ( Decapsulator.) S 60 J ( ) S 60 J ( The) S 60 J ( generation) S 60 J ( of) S 60 J ( the) S 60 J ( IP) S 60 J ( header) S 60 J ( is) S 60 J ( more) S 60 J ( complicated.) S 
1440 6960 P (There) S 60 J ( are) S 60 J ( two) S 60 J ( possible) S 60 J ( ways) S 60 J ( each) S 60 J ( field) S 60 J ( in) S 60 J ( the) S 60 J ( Clear) S 60 J ( Header) S 60 J ( could) S 60 J ( related) S 60 J ( to) S 60 J ( the) S 60 J ( new) S 60 J ( IP) S 60 J ( header.) S 
2160 7440 P 0 12 F 24 12 F B (Copy) S E 
2520 7680 P 0 12 F 24 12 F (Copy) S 60 J ( the) S 60 J ( existing) S 60 J ( field) S 60 J ( from) S 60 J ( the) S 60 J ( Clear) S 60 J ( Header) S 60 J ( to) S 60 J ( the) S 60 J ( IP) S 60 J ( header) S 60 J ( in) S 60 J ( the) S 60 J ( Encapsulation) S 
2520 7920 P (Header.) S 
2160 8400 P 0 12 F 24 12 F B (Ignore) S E 
2520 8640 P 0 12 F 24 12 F (The) S 60 J ( field) S 60 J ( may) S 60 J ( or) S 60 J ( may) S 60 J ( not) S 60 J ( have) S 60 J ( existed) S 60 J ( in) S 60 J ( the) S 60 J ( Clear) S 60 J ( Header,) S 60 J ( but) S 60 J ( does) S 60 J ( not) S 60 J ( apply) S 60 J ( to) S 60 J ( the) S 
2520 8880 P (new) S 60 J ( IP) S 60 J ( header.) S 
1440 9360 P (The) S 92 J ( IP) S 93 J ( header) S 92 J ( has) S 93 J ( a) S 92 J ( fixed) S 93 J ( portion) S 93 J ( and) S 93 J ( a) S 93 J ( variable) S 93 J ( portion,) S 93 J ( the) S 93 J ( options) S 93 J ( list.) S 93 J ( ) S 93 J ( A) S 93 J ( summary) S 93 J ( of) S 93 J ( all) S 
1440 9600 P (possible) S 60 J ( IP) S 60 J ( fields) S 60 J ( and) S 60 J ( the) S 60 J ( relation) S 60 J ( to) S 60 J ( the) S 60 J ( Clear) S 60 J ( Header) S 60 J ( follows) S 60 J ( in) S 60 J ( Table) S 60 J ( 1.) S 60 J ( [2]) S 
1440 10080 P (Note) S 76 J ( that) S 77 J ( most) S 76 J ( of) S 77 J ( the) S 77 J ( fields) S 77 J ( in) S 77 J ( the) S 77 J ( Clear) S 77 J ( Header) S 77 J ( are) S 77 J ( simply) S 77 J ( ignored.) S 77 J ( ) S 77 J ( Fields) S 77 J ( such) S 77 J ( as) S 77 J ( the) S 77 J ( Header) S 
1440 10320 P (Length) S 91 J ( in) S 92 J ( the) S 91 J ( Clear) S 92 J ( Header) S 91 J ( have) S 92 J ( no) S 91 J ( effect) S 92 J ( on) S 91 J ( the) S 92 J ( Header) S 91 J ( Length) S 92 J ( of) S 92 J ( the) S 92 J ( new) S 92 J ( IP) S 92 J ( header.) S 92 J ( ) S 92 J ( The) S 
1440 10560 P (fields) S 60 J ( which) S 60 J ( are) S 60 J ( more) S 60 J ( interesting) S 60 J ( and) S 60 J ( require) S 60 J ( some) S 60 J ( thought) S 60 J ( are) S 60 J ( now) S 60 J ( discussed.) S 
1440 11040 P (The) S 71 J ( Quality) S 72 J ( of) S 71 J ( Service) S 72 J ( bits) S 71 J ( should) S 72 J ( be) S 71 J ( copied) S 72 J ( from) S 71 J ( the) S 72 J ( Clear) S 72 J ( Header) S 72 J ( to) S 72 J ( the) S 72 J ( new) S 72 J ( IP) S 72 J ( header.) S 72 J ( ) S 72 J ( This) S 
1440 11280 P (is) S 111 J ( in) S 112 J ( keeping) S 111 J ( with) S 112 J ( the) S 111 J ( transparency) S 112 J ( principle) S 111 J ( that) S 112 J ( if) S 111 J ( the) S 112 J ( User) S 111 J ( Space) S 112 J ( was) S 111 J ( providing) S 111 J ( a) S 111 J ( given) S 
1440 11520 P (service,) S 60 J ( then) S 60 J ( the) S 60 J ( Encapsulation) S 60 J ( Space) S 60 J ( must) S 60 J ( provide) S 60 J ( the) S 60 J ( same) S 60 J ( service..) S 
1440 12000 P (The) S 88 J ( More) S 89 J ( Fragments) S 88 J ( bit) S 89 J ( and) S 88 J ( Fragment) S 89 J ( Offset) S 88 J ( should) S 89 J ( not) S 88 J ( be) S 89 J ( copied,) S 88 J ( since) S 89 J ( the) S 88 J ( datagram) S 88 J ( being) S 
1440 12240 P (built) S 110 J ( is) S 111 J ( a) S 110 J ( complete) S 111 J ( datagram,) S 110 J ( regardless) S 111 J ( of) S 110 J ( the) S 111 J ( status) S 110 J ( of) S 111 J ( the) S 110 J ( encapsulated) S 110 J ( datagram.) S 110 J ( ) S 110 J ( If) S 110 J ( the) S 
1440 12480 P (completed) S 82 J ( datagram) S 83 J ( is) S 82 J ( too) S 83 J ( large) S 82 J ( for) S 83 J ( the) S 82 J ( interface,) S 83 J ( it) S 82 J ( will) S 82 J ( be) S 82 J ( fragmented) S 82 J ( for) S 82 J ( transmission) S 82 J ( to) S 82 J ( the) S 
1440 12720 P (decapsulator) S 60 J ( by) S 60 J ( the) S 60 J ( normal) S 60 J ( IP) S 60 J ( fragmentation) S 60 J ( mechanism.) S 
1440 13200 P (The) S 77 J ( Don't) S 78 J ( Fragment) S 77 J ( bit) S 78 J ( should) S 77 J ( not) S 78 J ( be) S 77 J ( copied) S 78 J ( into) S 77 J ( the) S 78 J ( Encapsulation) S 78 J ( Header.) S 78 J ( ) S 78 J ( The) S 78 J ( transparency) S 
1440 13440 P (principle) S 116 J ( would) S 117 J ( again) S 116 J ( be) S 117 J ( violated.) S 116 J ( ) S 117 J ( It) S 116 J ( should) S 116 J ( be) S 116 J ( up) S 116 J ( to) S 116 J ( the) S 116 J ( Encapsulator) S 116 J ( to) S 116 J ( decide) S 116 J ( whether) S 
1440 13680 P (fragmentation) S 67 J ( should) S 68 J ( be) S 67 J ( allowed) S 68 J ( across) S 67 J ( the) S 68 J ( Encapsulation) S 67 J ( Space.) S 68 J ( ) S 67 J ( If) S 67 J ( it) S 67 J ( is) S 67 J ( decided) S 67 J ( that) S 67 J ( the) S 67 J ( DF) S 67 J ( bit) S 
1440 13920 P (should) S 83 J ( be) S 83 J ( used,) S 83 J ( then) S 83 J ( ICMP) S 83 J ( message) S 83 J ( would) S 83 J ( be) S 83 J ( returned) S 83 J ( if) S 83 J ( the) S 83 J ( Encapsulated) S 83 J ( Datagram) S 83 J ( required) S 
1440 14640 P (Woodburn) S 60 J ( &) S 60 J ( Mills) S 
10153 14640 P (Page) S 60 J ( ) S (7) S 0 12 F 
PE 
1440 1680 P 24 12 F (RFC) S 60 J ( 1241) S 
5035 1680 P (Internet) S 60 J ( Encapsulation) S 
9860 1680 P (July) S 60 J ( 1991) S 
1440 2160 P (fragmentation) S 77 J ( across) S 77 J ( the) S 77 J ( Encapsulation) S 77 J ( Space) S 77 J ( ) S 77 J ( The) S 77 J ( mechanism) S 77 J ( for) S 77 J ( returning) S 77 J ( an) S 77 J ( ICMP) S 77 J ( message) S 
1440 2400 P (to) S 81 J ( the) S 82 J ( source) S 81 J ( in) S 82 J ( the) S 81 J ( User) S 82 J ( space) S 81 J ( will) S 82 J ( have) S 82 J ( to) S 82 J ( be) S 82 J ( modified,) S 82 J ( however,) S 82 J ( and) S 82 J ( this) S 82 J ( is) S 82 J ( discussed) S 82 J ( in) S 82 J ( the) S 
1440 2640 P (Appendix) S 60 J ( B.) S 
1440 3120 P (Regarding) S 79 J ( the) S 80 J ( Time) S 79 J ( To) S 80 J ( Live) S 79 J ( \(TTL\)) S 80 J ( field,) S 79 J ( the) S 80 J ( easiest) S 79 J ( thing) S 80 J ( to) S 79 J ( do) S 80 J ( is) S 80 J ( to) S 80 J ( ignore) S 80 J ( the) S 80 J ( TTL) S 80 J ( from) S 80 J ( the) S 
1440 3360 P (Clear) S 74 J ( Header.) S 75 J ( ) S 74 J ( If) S 75 J ( this) S 74 J ( field) S 75 J ( were) S 74 J ( copied) S 75 J ( from) S 74 J ( the) S 74 J ( Clear) S 74 J ( Header) S 74 J ( to) S 74 J ( the) S 74 J ( new) S 74 J ( IP) S 74 J ( header,) S 74 J ( the) S 74 J ( packet) S 
1440 3600 P (life) S 81 J ( might) S 82 J ( be) S 81 J ( prematurely) S 82 J ( exceeded) S 81 J ( during) S 82 J ( transit) S 81 J ( in) S 82 J ( the) S 81 J ( Encapsulation) S 82 J ( Space.) S 81 J ( ) S 82 J ( This) S 81 J ( breaks) S 82 J ( the) S 
1440 3840 P (transparency) S 63 J ( rule) S 64 J ( of) S 63 J ( encapsulation) S 64 J ( as) S 63 J ( seen) S 64 J ( from) S 63 J ( the) S 64 J ( User) S 63 J ( Space.) S 64 J ( ) S 63 J ( The) S 64 J ( TTL) S 63 J ( of) S 63 J ( the) S 63 J ( Clear) S 63 J ( Header) S 63 J ( is) S 
1440 4080 P (decremented) S 103 J ( before) S 104 J ( encapsulation) S 103 J ( by) S 104 J ( the) S 103 J ( IP) S 104 J ( forwarding) S 103 J ( function,) S 104 J ( so) S 103 J ( there) S 104 J ( is) S 104 J ( no) S 104 J ( chance) S 104 J ( of) S 104 J ( a) S 
1440 4320 P (packet) S 60 J ( looping) S 60 J ( forever) S 60 J ( if) S 60 J ( the) S 60 J ( links) S 60 J ( of) S 60 J ( a) S 60 J ( Flow) S 60 J ( form) S 60 J ( a) S 60 J ( loop.) S 
3888 4680 P 0 12 F 57 12 F (ZDDDDDDDDDDDDDDDDDDDBDDDDDDDDD?) S 
4104 4920 P 0 12 F 24 12 F () S 1049 J ( Field) S 1479 J ( Mapping) S 
1368 4920 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
3888 5160 P (CDDDDDDDDDDDDDDDDDDDEDDDDDDDDD4) S 
4104 5400 P 0 12 F 24 12 F () S 216 J ( Version) S 2120 J ( Ignore) S 
1368 5400 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
4104 5640 P 0 12 F 24 12 F () S 216 J ( Header) S 60 J ( Length) S 1445 J ( Ignore) S 
1368 5640 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
4104 5880 P 0 12 F 24 12 F () S 216 J ( Precedence) S 1785 J ( Copy) S 
1368 5880 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
4104 6120 P 0 12 F 24 12 F () S 216 J ( QoS) S 60 J ( bits) S 2047 J ( Copy) S 
1368 6120 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
4104 6360 P 0 12 F 24 12 F () S 216 J ( Total) S 60 J ( Length) S 1631 J ( Ignore) S 
1368 6360 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
4104 6600 P 0 12 F 24 12 F () S 216 J ( Identification) S 1584 J ( Ignore) S 
1368 6600 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
4104 6840 P 0 12 F 24 12 F () S 216 J ( Don't) S 60 J ( Fragment) S 60 J ( Bit) S 1022 J ( Ignore) S 
1368 6840 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
4104 7080 P 0 12 F 24 12 F () S 216 J ( More) S 60 J ( Fragments) S 60 J ( Bit) S 932 J ( Ignore) S 
1368 7080 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
4104 7320 P 0 12 F 24 12 F () S 216 J ( Fragment) S 60 J ( Offset) S 1299 J ( Ignore) S 
1368 7320 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
4104 7560 P 0 12 F 24 12 F () S 216 J ( Time) S 60 J ( to) S 60 J ( Live) S 1624 J ( Ignore) S 
1368 7560 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
4104 7800 P 0 12 F 24 12 F () S 216 J ( Protocol) S 2066 J ( Ignore) S 
1368 7800 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
4104 8040 P 0 12 F 24 12 F () S 216 J ( Header) S 60 J ( Checksum) S 1112 J ( Ignore) S 
1368 8040 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
4104 8280 P 0 12 F 24 12 F () S 216 J ( Source) S 60 J ( Address) S 1367 J ( Ignore) S 
1368 8280 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
4104 8520 P 0 12 F 24 12 F () S 216 J ( Destination) S 60 J ( Address) S 926 J ( Ignore) S 
1368 8520 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
4104 8760 P 0 12 F 24 12 F () S 216 J ( End) S 60 J ( of) S 60 J ( Option) S 60 J ( List) S 1072 J ( Ignore) S 
1368 8760 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
4104 9000 P 0 12 F 24 12 F () S 216 J ( NOP) S 60 J ( Option) S 1674 J ( Ignore) S 
1368 9000 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
4104 9240 P 0 12 F 24 12 F () S 216 J ( Security) S 60 J ( Option) S 1352 J ( Copy) S 
1368 9240 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
4104 9480 P 0 12 F 24 12 F () S 216 J ( LSR) S 60 J ( Option) S 1713 J ( Ignore) S 
1368 9480 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
4104 9720 P 0 12 F 24 12 F () S 216 J ( SSR) S 60 J ( Option) S 1727 J ( Ignore) S 
1368 9720 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
4104 9960 P 0 12 F 24 12 F () S 216 J ( RR) S 60 J ( Option) S 1833 J ( Ignore) S 
1368 9960 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
4104 10200 P 0 12 F 24 12 F () S 216 J ( Stream) S 60 J ( ID) S 60 J ( Option) S 1159 J ( Ignore) S 
1368 10200 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
4104 10440 P 0 12 F 24 12 F () S 216 J ( Timestamp) S 60 J ( Option) S 1071 J ( Ignore) S 
1368 10440 P 0 12 F 57 12 F () S 2520 J ( 3) S 2736 J ( 3) S 1296 J ( 3) S 
3888 10680 P (@DDDDDDDDDDDDDDDDDDDADDDDDDDDDY) S 
4045 11040 P 0 12 F 24 12 F (Table) S 60 J ( 1.) S 60 J ( ) S 60 J ( Summary) S 60 J ( of) S 60 J ( IP) S 60 J ( Header) S 60 J ( Mappings) S 
1440 11520 P (The) S 111 J ( protocol) S 112 J ( field) S 112 J ( for) S 112 J ( the) S 112 J ( new) S 112 J ( IP) S 112 J ( header) S 112 J ( should) S 112 J ( be) S 112 J ( filled) S 112 J ( with) S 112 J ( the) S 112 J ( protocol) S 112 J ( number) S 112 J ( of) S 112 J ( the) S 
1440 11760 P (encapsulation) S 60 J ( protocol.) S 
1440 12240 P (The) S 100 J ( source) S 101 J ( address) S 100 J ( in) S 101 J ( the) S 100 J ( new) S 101 J ( IP) S 100 J ( header) S 101 J ( becomes) S 100 J ( the) S 101 J ( IP) S 100 J ( address) S 101 J ( of) S 100 J ( the) S 100 J ( Encapsulator) S 100 J ( in) S 100 J ( the) S 
1440 12480 P (Encapsulation) S 75 J ( Domain.) S 76 J ( ) S 75 J ( The) S 76 J ( destination) S 75 J ( address) S 76 J ( becomes) S 76 J ( the) S 76 J ( IP) S 76 J ( address) S 76 J ( of) S 76 J ( the) S 76 J ( Decapsulator) S 76 J ( as) S 
1440 12720 P (found) S 60 J ( in) S 60 J ( the) S 60 J ( encapsulation) S 60 J ( table.) S 
1440 13200 P (IP) S 121 J ( Options) S 122 J ( are) S 121 J ( generally) S 122 J ( not) S 122 J ( copied) S 122 J ( because) S 122 J ( most) S 122 J ( don't) S 122 J ( make) S 122 J ( sense) S 122 J ( in) S 122 J ( the) S 122 J ( context) S 122 J ( of) S 122 J ( the) S 
1440 13440 P (Encapsulation) S 121 J ( Space,) S 122 J ( as) S 121 J ( the) S 122 J ( transparency) S 121 J ( principle) S 122 J ( would) S 121 J ( indicate.) S 122 J ( ) S 121 J ( The) S 121 J ( security) S 121 J ( option) S 121 J ( is) S 
1440 13680 P (probably) S 78 J ( the) S 79 J ( one) S 78 J ( option) S 79 J ( that) S 78 J ( should) S 79 J ( get) S 78 J ( copied) S 79 J ( for) S 78 J ( the) S 79 J ( same) S 78 J ( reason) S 79 J ( QOS) S 78 J ( and) S 79 J ( precedence) S 79 J ( fields) S 
1440 14640 P (Woodburn) S 60 J ( &) S 60 J ( Mills) S 
10153 14640 P (Page) S 60 J ( ) S (8) S 0 12 F 
PE 
1440 1680 P 24 12 F (RFC) S 60 J ( 1241) S 
5035 1680 P (Internet) S 60 J ( Encapsulation) S 
9860 1680 P (July) S 60 J ( 1991) S 
1440 2160 P (are) S 109 J ( copied,) S 110 J ( the) S 109 J ( Encapsulation) S 110 J ( Space) S 109 J ( must) S 110 J ( provide) S 109 J ( the) S 110 J ( expected) S 109 J ( service.) S 110 J ( ) S 110 J ( Timestamp,) S 110 J ( Loose) S 
1440 2400 P (Source) S 60 J ( Route,) S 60 J ( Strict) S 60 J ( Source) S 60 J ( Route,) S 60 J ( and) S 60 J ( Record) S 60 J ( Route) S 60 J ( are) S 60 J ( not) S 60 J ( copied) S 60 J ( during) S 60 J ( encapsulation.) S 
1440 3120 P 0 12 F 24 12 F B (6.) S 60 J ( Decapsulation) S E 
1440 3600 P 0 12 F 24 12 F (In) S 144 J ( the) S 145 J ( ideal) S 144 J ( situation,) S 145 J ( a) S 144 J ( Decapsulator) S 145 J ( receives) S 144 J ( an) S 145 J ( Encapsulated) S 145 J ( Datagram,) S 145 J ( strips) S 145 J ( off) S 145 J ( the) S 
1440 3840 P (Encapsulation) S 86 J ( Header) S 87 J ( and) S 86 J ( sends) S 87 J ( the) S 86 J ( Clear) S 87 J ( Datagram) S 86 J ( back) S 87 J ( into) S 86 J ( IP) S 87 J ( so) S 86 J ( that) S 87 J ( it) S 86 J ( is) S 87 J ( forwarded) S 87 J ( from) S 
1440 4080 P (that) S 73 J ( point.) S 74 J ( ) S 74 J ( However,) S 74 J ( if) S 74 J ( the) S 74 J ( Clear) S 74 J ( Datagram) S 74 J ( has) S 74 J ( not) S 74 J ( reached) S 74 J ( the) S 74 J ( destination) S 74 J ( User) S 74 J ( Space,) S 74 J ( it) S 74 J ( must) S 
1440 4320 P (again) S 96 J ( be) S 97 J ( encapsulated) S 97 J ( to) S 97 J ( move) S 97 J ( it) S 97 J ( close) S 97 J ( to) S 97 J ( the) S 97 J ( destination) S 97 J ( User) S 97 J ( Space.) S 97 J ( ) S 97 J ( In) S 97 J ( this) S 97 J ( latter) S 97 J ( case) S 97 J ( the) S 
1440 4560 P (Decapsulator) S 137 J ( would) S 138 J ( become) S 137 J ( an) S 138 J ( Encapsulator) S 137 J ( and) S 138 J ( would) S 137 J ( perform) S 137 J ( the) S 137 J ( same) S 137 J ( calculation) S 137 J ( to) S 
1440 4800 P (generate) S 106 J ( the) S 107 J ( Encapsulation) S 106 J ( Header) S 107 J ( as) S 106 J ( did) S 107 J ( the) S 106 J ( previous) S 107 J ( Encapsulator.) S 106 J ( ) S 107 J ( In) S 106 J ( order) S 107 J ( to) S 106 J ( make) S 106 J ( this) S 
1440 5040 P (process) S 60 J ( more) S 60 J ( efficient,) S 60 J ( the) S 60 J ( use) S 60 J ( of) S 60 J ( Flow) S 60 J ( IDs) S 60 J ( have) S 60 J ( been) S 60 J ( incorporated) S 60 J ( into) S 60 J ( the) S 60 J ( protocol.) S 
1440 5520 P (When) S 87 J ( Flow) S 88 J ( IDs) S 87 J ( are) S 88 J ( used,) S 87 J ( the) S 87 J ( Flow) S 87 J ( ID) S 87 J ( received) S 87 J ( in) S 87 J ( the) S 87 J ( Encapsulation) S 87 J ( Header) S 87 J ( corresponds) S 87 J ( to) S 87 J ( a) S 
1440 5760 P (stored) S 74 J ( Flow) S 75 J ( ID) S 74 J ( in) S 75 J ( the) S 74 J ( Decapsulator.) S 75 J ( ) S 74 J ( At) S 74 J ( this) S 74 J ( point) S 74 J ( the) S 74 J ( Decapsulator) S 74 J ( has) S 74 J ( the) S 74 J ( option) S 74 J ( of) S 74 J ( bypassing) S 
1440 6000 P (the) S 71 J ( mask) S 72 J ( and) S 71 J ( match) S 72 J ( operation) S 71 J ( on) S 72 J ( the) S 71 J ( Clear) S 72 J ( Header.) S 71 J ( ) S 72 J ( The) S 71 J ( received) S 72 J ( Flow) S 72 J ( ID) S 72 J ( can) S 72 J ( be) S 72 J ( used) S 72 J ( to) S 72 J ( point) S 
1440 6240 P (directly) S 68 J ( into) S 69 J ( the) S 68 J ( local) S 69 J ( Encapsulator) S 68 J ( tables) S 69 J ( for) S 68 J ( the) S 68 J ( construction) S 68 J ( of) S 68 J ( the) S 68 J ( next) S 68 J ( Encapsulation) S 68 J ( Header.) S 
1440 6480 P (If) S 83 J ( the) S 84 J ( Flow) S 84 J ( ID) S 84 J ( is) S 84 J ( unknown,) S 84 J ( an) S 84 J ( error) S 84 J ( message) S 84 J ( is) S 84 J ( sent) S 84 J ( back) S 84 J ( to) S 84 J ( the) S 84 J ( previous) S 84 J ( Encapsulator) S 84 J ( to) S 84 J ( that) S 
1440 6720 P (effect) S 60 J ( and) S 60 J ( a) S 60 J ( signal) S 60 J ( is) S 60 J ( sent) S 60 J ( to) S 60 J ( upper) S 60 J ( layer) S 60 J ( entity) S 60 J ( managing) S 60 J ( the) S 60 J ( encapsulation) S 60 J ( tables.) S 
1440 7200 P (Because) S 114 J ( the) S 114 J ( normal) S 114 J ( IP) S 114 J ( forwarding) S 114 J ( mechanism) S 114 J ( is) S 114 J ( being) S 114 J ( bypassed) S 114 J ( when) S 114 J ( Flow) S 114 J ( IDs) S 114 J ( are) S 114 J ( used,) S 
1440 7440 P (certain) S 85 J ( mechanisms) S 86 J ( normally) S 86 J ( handled) S 86 J ( by) S 86 J ( IP) S 86 J ( must) S 86 J ( be) S 86 J ( taken) S 86 J ( care) S 86 J ( of) S 86 J ( by) S 86 J ( the) S 86 J ( Decapsulator) S 86 J ( before) S 
1440 7680 P (encapsulation.) S 66 J ( ) S 67 J ( The) S 66 J ( Decapsulator) S 67 J ( must) S 66 J ( decrement) S 67 J ( the) S 67 J ( TTL) S 67 J ( before) S 67 J ( the) S 67 J ( next) S 67 J ( encapsulation) S 67 J ( occurs.) S 
1440 7920 P (If) S 84 J ( a) S 85 J ( Time) S 84 J ( Exceeded) S 85 J ( error) S 84 J ( occurs,) S 85 J ( then) S 84 J ( an) S 85 J ( ICMP) S 84 J ( message) S 85 J ( is) S 84 J ( sent) S 85 J ( to) S 84 J ( the) S 85 J ( source) S 84 J ( indicated) S 85 J ( in) S 85 J ( the) S 
1440 8160 P (Clear) S 60 J ( Header.) S 
1440 8880 P 0 12 F 24 12 F B (7.) S 60 J ( Error) S 60 J ( Messages) S E 
1440 9360 P 0 12 F 24 12 F (There) S 76 J ( are) S 77 J ( two) S 76 J ( kinds) S 77 J ( of) S 76 J ( error) S 77 J ( message) S 76 J ( built) S 77 J ( into) S 76 J ( the) S 77 J ( encapsulation) S 77 J ( protocol.) S 77 J ( ) S 77 J ( The) S 77 J ( first) S 77 J ( is) S 77 J ( used) S 77 J ( to) S 
1440 9600 P (report) S 75 J ( unknown) S 76 J ( flow) S 75 J ( identifiers) S 76 J ( seen) S 75 J ( by) S 75 J ( a) S 75 J ( Decapsulator) S 75 J ( and) S 75 J ( the) S 75 J ( second) S 75 J ( is) S 75 J ( for) S 75 J ( the) S 75 J ( forwarding) S 75 J ( of) S 
1440 9840 P (ICMP) S 60 J ( messages.) S 
1440 10320 P (When) S 90 J ( a) S 91 J ( Decapsulator) S 90 J ( is) S 91 J ( using) S 90 J ( the) S 90 J ( received) S 90 J ( Flow) S 90 J ( ID) S 90 J ( in) S 90 J ( an) S 90 J ( Encapsulation) S 90 J ( Header) S 90 J ( to) S 90 J ( forward) S 90 J ( a) S 
1440 10560 P (datagram) S 72 J ( to) S 73 J ( the) S 72 J ( next) S 73 J ( Decapsulator) S 73 J ( in) S 73 J ( a) S 73 J ( Flow,) S 73 J ( it) S 73 J ( is) S 73 J ( possible) S 73 J ( that) S 73 J ( the) S 73 J ( Flow) S 73 J ( ID) S 73 J ( may) S 73 J ( not) S 73 J ( be) S 73 J ( known.) S 
1440 10800 P (For) S 110 J ( this) S 111 J ( case) S 110 J ( the) S 111 J ( Decapsulator) S 111 J ( will) S 111 J ( notify) S 111 J ( the) S 111 J ( previous) S 111 J ( Encapsulator) S 111 J ( that) S 111 J ( the) S 111 J ( Flow) S 111 J ( was) S 111 J ( not) S 
1440 11040 P (known) S 72 J ( so) S 73 J ( that) S 72 J ( the) S 73 J ( problem) S 72 J ( may) S 73 J ( be) S 72 J ( reported) S 73 J ( to) S 73 J ( the) S 73 J ( layer) S 73 J ( responsible) S 73 J ( for) S 73 J ( the) S 73 J ( programming) S 73 J ( of) S 73 J ( the) S 
1440 11280 P (Flow) S 60 J ( tables.) S 60 J ( ) S 60 J ( This) S 60 J ( is) S 60 J ( accomplished) S 60 J ( through) S 60 J ( an) S 60 J ( encapsulation) S 60 J ( error) S 60 J ( message.) S 
1440 11760 P (If) S 80 J ( an) S 80 J ( Encapsulator) S 80 J ( receives) S 80 J ( an) S 80 J ( ICMP) S 80 J ( messages) S 80 J ( regarding) S 80 J ( a) S 80 J ( given) S 80 J ( flow,) S 80 J ( this) S 80 J ( message) S 80 J ( should) S 80 J ( be) S 
1440 12000 P (forwarded) S 86 J ( backwards) S 87 J ( along) S 86 J ( the) S 87 J ( flow) S 86 J ( to) S 87 J ( the) S 86 J ( source) S 87 J ( Encapsulator.) S 86 J ( ) S 87 J ( This) S 86 J ( is) S 87 J ( accomplished) S 87 J ( by) S 87 J ( the) S 
1440 12240 P (second) S 95 J ( kind) S 96 J ( of) S 95 J ( error) S 95 J ( message.) S 95 J ( ) S 95 J ( The) S 95 J ( ICMP) S 95 J ( message) S 95 J ( will) S 95 J ( contain) S 95 J ( the) S 95 J ( Flow) S 95 J ( ID) S 95 J ( of) S 95 J ( the) S 95 J ( message) S 
1440 12480 P (which) S 121 J ( caused) S 122 J ( the) S 121 J ( error.) S 122 J ( ) S 121 J ( This) S 122 J ( Flow) S 121 J ( ID) S 122 J ( must) S 121 J ( be) S 122 J ( translated) S 121 J ( to) S 122 J ( the) S 121 J ( Flow) S 122 J ( ID) S 121 J ( relative) S 122 J ( to) S 122 J ( the) S 
1440 12720 P (Encapsulator) S 60 J ( to) S 60 J ( which) S 60 J ( the) S 60 J ( error) S 60 J ( message) S 60 J ( is) S 60 J ( sent.) S 
1440 13200 P (If) S 60 J ( an) S 60 J ( error) S 60 J ( occurs) S 60 J ( while) S 60 J ( sending) S 60 J ( any) S 60 J ( error) S 60 J ( message,) S 60 J ( no) S 60 J ( further) S 60 J ( error) S 60 J ( message) S 60 J ( are) S 60 J ( generated.) S 
1440 14640 P (Woodburn) S 60 J ( &) S 60 J ( Mills) S 
10153 14640 P (Page) S 60 J ( ) S (9) S 0 12 F 
PE 
1440 1680 P 24 12 F (RFC) S 60 J ( 1241) S 
5035 1680 P (Internet) S 60 J ( Encapsulation) S 
9860 1680 P (July) S 60 J ( 1991) S 
1440 2160 P 0 12 F 24 12 F B (8.) S 60 J ( References) S E 
1440 2640 P 0 12 F 24 12 F ([1]) S 440 J ( J.) S 60 J ( Postel,) S 60 J ( ) S 0 12 F 24 12 F I (Internet) S 60 J ( Control) S 60 J ( Message) S 60 J ( Protocol) S E 0 12 F 24 12 F (,) S 60 J ( RFC) S 60 J ( 792,) S 60 J ( September) S 60 J ( 1981.) S 
1440 3120 P ([2]) S 440 J ( J.) S 60 J ( Postel,) S 60 J ( ) S 0 12 F 24 12 F I (Internet) S 60 J ( Protocol) S E 0 12 F 24 12 F (,) S 60 J ( RFC) S 60 J ( 791,) S 60 J ( September) S 60 J ( 1981.) S 
1440 3600 P ([3]) S 440 J ( J.) S 60 J ( Postel,) S 60 J ( ) S 0 12 F 24 12 F I (Transmission) S 60 J ( Control) S 60 J ( Protocol) S E 0 12 F 24 12 F (,) S 60 J ( RFC) S 60 J ( 793,) S 60 J ( September) S 60 J ( 1981.) S 
1440 4080 P ([4]) S 440 J ( ORWG,) S 84 J ( ) S 0 12 F 24 12 F I (Inter-Domain) S 85 J ( Policy) S 84 J ( Routing) S 85 J ( Protocol) S 84 J ( Specification) S 85 J ( and) S 84 J ( Usage) S E 0 12 F 24 12 F (,) S 85 J ( Draft,) S 85 J ( August) S 
2160 4320 P (1990) S 
1440 5040 P 0 12 F 24 12 F B (A.) S 60 J ( Packet) S 60 J ( Formats) S E 
1440 5520 P 0 12 F 24 12 F (This) S 60 J ( section) S 60 J ( describes) S 60 J ( the) S 60 J ( packet) S 60 J ( formats) S 60 J ( for) S 60 J ( the) S 60 J ( encapsulation) S 60 J ( protocol.) S 
3600 6000 P (0) S 540 J ( 4) S 600 J ( 8) S 540 J ( 12) S 480 J ( 16) S 1200 J ( 24) S 1200 J ( 31) S 
3528 6120 P 0 12 F 57 12 F (ZDDDDBDDDDBDDDDBDDDDBDDDDDDDDDDDDDDDDDDD?) S 
3744 6360 P 0 12 F 24 12 F (Vers) S 323 J ( HL) S 380 J ( MT) S 380 J ( RC) S 1133 J ( Checksum) S 
1368 6360 P 0 12 F 57 12 F () S 2160 J ( 3) S 576 J ( 3) S 576 J ( 3) S 576 J ( 3) S 576 J ( 3) S 2736 J ( 3) S 
3528 6600 P (CDDDDADDDDADDDDADDDDADDDDDDDDDDDDDDDDDDD4) S 
3744 6840 P 0 12 F 24 12 F () S 2333 J ( Flow) S 60 J ( ID) S 
1368 6840 P 0 12 F 57 12 F () S 2160 J ( 3) S 5616 J ( 3) S 
3528 7080 P (@DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDY) S 
3681 7680 P 0 12 F 24 12 F (Fig.) S 60 J ( A.1.) S 60 J ( ) S 60 J ( Encapsulation) S 60 J ( Protocol) S 60 J ( Header) S 60 J ( Example) S 
1440 8160 P (Vers) S 987 J ( 4) S 60 J ( bits) S 913 J ( The) S 70 J ( version) S 71 J ( number) S 70 J ( of) S 71 J ( the) S 70 J ( encapsulation) S 71 J ( protocol.) S 71 J ( ) S 71 J ( The) S 71 J ( version) S 71 J ( of) S 
4320 8400 P (the) S 60 J ( protocol) S 60 J ( described) S 60 J ( by) S 60 J ( this) S 60 J ( document) S 60 J ( is) S 60 J ( 1.) S 
1440 8880 P (HL) S 1120 J ( 4) S 60 J ( bits) S 913 J ( The) S 60 J ( header) S 60 J ( length) S 60 J ( of) S 60 J ( the) S 60 J ( Encapsulation) S 60 J ( Protocol) S 60 J ( Header) S 60 J ( in) S 60 J ( octets.) S 
1440 9360 P (MT) S 1080 J ( 4) S 60 J ( bits) S 913 J ( The) S 76 J ( message) S 76 J ( type) S 76 J ( of) S 76 J ( the) S 76 J ( Encapsulation) S 76 J ( Protocol) S 76 J ( message.) S 76 J ( ) S 76 J ( A) S 76 J ( data) S 
4320 9600 P (message) S 62 J ( has) S 63 J ( a) S 62 J ( message) S 63 J ( type) S 62 J ( of) S 63 J ( 1.) S 63 J ( ) S 63 J ( An) S 63 J ( error) S 63 J ( message) S 63 J ( has) S 63 J ( a) S 63 J ( message) S 
4320 9840 P (type) S 60 J ( of) S 60 J ( 2.) S 
1440 10320 P (RC) S 1120 J ( 4) S 60 J ( bits) S 913 J ( The) S 94 J ( reason) S 95 J ( code.) S 94 J ( ) S 95 J ( This) S 94 J ( field) S 95 J ( is) S 94 J ( unused) S 95 J ( in) S 94 J ( the) S 95 J ( Data) S 95 J ( Message) S 95 J ( and) S 
4320 10560 P (must) S 61 J ( have) S 61 J ( a) S 61 J ( value) S 61 J ( of) S 61 J ( 0.) S 61 J ( ) S 61 J ( In) S 61 J ( the) S 61 J ( Error) S 61 J ( Message) S 61 J ( it) S 61 J ( contains) S 61 J ( the) S 61 J ( reason) S 
4320 10800 P (code) S 60 J ( for) S 60 J ( the) S 60 J ( Error) S 60 J ( Message.) S 60 J ( ) S 60 J ( Defined) S 60 J ( reason) S 60 J ( code) S 60 J ( values) S 60 J ( are:) S 
5040 11040 P (1) S 240 J ( Unknown) S 60 J ( Flow) S 60 J ( ID) S 
5040 11280 P (2) S 240 J ( ICMP) S 60 J ( returned) S 
1440 11760 P (Checksum) S 426 J ( 16) S 60 J ( bits) S 793 J ( A) S 132 J ( one's) S 132 J ( complement) S 132 J ( checksum) S 132 J ( for) S 132 J ( the) S 132 J ( Encapsulation) S 132 J ( Protocol) S 
4320 12000 P (Header.) S 60 J ( ) S 61 J ( This) S 60 J ( field) S 61 J ( is) S 60 J ( set) S 61 J ( to) S 60 J ( 0) S 61 J ( upon) S 60 J ( calculation) S 61 J ( of) S 60 J ( the) S 61 J ( checksum) S 60 J ( and) S 
4320 12240 P (is) S 136 J ( filled) S 137 J ( with) S 136 J ( the) S 137 J ( checksum) S 137 J ( calculation) S 137 J ( result) S 137 J ( before) S 137 J ( the) S 137 J ( data) S 
4320 12480 P (message) S 60 J ( is) S 60 J ( sent.) S 
1440 12960 P (Flow) S 60 J ( ID) S 634 J ( 32) S 60 J ( bits) S 793 J ( The) S 63 J ( Flow) S 64 J ( ID) S 63 J ( as) S 64 J ( seen) S 64 J ( by) S 64 J ( the) S 64 J ( Decapsulator) S 64 J ( or) S 64 J ( Encapsulator) S 64 J ( to) S 64 J ( which) S 
4320 13200 P (this) S 88 J ( message) S 89 J ( is) S 88 J ( being) S 89 J ( sent.) S 88 J ( ) S 89 J ( In) S 88 J ( the) S 89 J ( case) S 88 J ( of) S 89 J ( an) S 88 J ( Unknown) S 89 J ( Flow) S 89 J ( ID) S 
4320 13440 P (error,) S 60 J ( the) S 60 J ( Flow) S 60 J ( ID) S 60 J ( causing) S 60 J ( the) S 60 J ( error) S 60 J ( is) S 60 J ( used.) S 
1440 14640 P (Woodburn) S 60 J ( &) S 60 J ( Mills) S 
10033 14640 P (Page) S 60 J ( ) S (10) S 0 12 F 
PE 
1440 1680 P 24 12 F (RFC) S 60 J ( 1241) S 
5035 1680 P (Internet) S 60 J ( Encapsulation) S 
9860 1680 P (July) S 60 J ( 1991) S 
1440 2160 P (For) S 71 J ( Data) S 72 J ( Messages,) S 71 J ( the) S 72 J ( Encapsulation) S 72 J ( Protocol) S 72 J ( Header) S 72 J ( is) S 72 J ( followed) S 72 J ( by) S 72 J ( the) S 72 J ( Clear) S 72 J ( Datagram.) S 72 J ( ) S 72 J ( For) S 
1440 2400 P (Error) S 60 J ( Messages,) S 60 J ( the) S 60 J ( header) S 60 J ( is) S 60 J ( followed) S 60 J ( by) S 60 J ( the) S 60 J ( ICMP) S 60 J ( message) S 60 J ( being) S 60 J ( forwarded) S 60 J ( along) S 60 J ( a) S 60 J ( flow.) S 
1440 3120 P 0 12 F 24 12 F B (B.) S 60 J ( Encapsulation) S 60 J ( and) S 60 J ( Existing) S 60 J ( IP) S 60 J ( Mechanisms) S E 
1440 3600 P 0 12 F 24 12 F (This) S 122 J ( section) S 123 J ( discusses) S 122 J ( in) S 123 J ( detail) S 122 J ( the) S 123 J ( effect) S 122 J ( of) S 123 J ( this) S 122 J ( encapsulation) S 122 J ( protocol) S 122 J ( upon) S 122 J ( the) S 122 J ( existing) S 
1440 3840 P (mechanisms) S 127 J ( available) S 128 J ( with) S 127 J ( IP) S 128 J ( and) S 127 J ( some) S 128 J ( the) S 127 J ( possible) S 128 J ( effects) S 127 J ( of) S 128 J ( IP) S 128 J ( mechanisms) S 128 J ( upon) S 128 J ( this) S 
1440 4080 P (protocol.) S 60 J ( ) S 60 J ( Specifically) S 60 J ( these) S 60 J ( are) S 60 J ( Fragmentation) S 60 J ( and) S 60 J ( ICMP) S 60 J ( messages.) S 
1440 4560 P 0 12 F 24 12 F B (B.1) S 60 J ( Fragmentation) S 60 J ( and) S 60 J ( Maximum) S 60 J ( Transmission) S 60 J ( Unit) S E 
1440 5040 P 0 12 F 24 12 F (An) S 85 J ( immediate) S 86 J ( concern) S 85 J ( of) S 86 J ( using) S 85 J ( an) S 86 J ( encapsulation) S 85 J ( mechanism) S 86 J ( is) S 85 J ( that) S 86 J ( of) S 85 J ( restrictions) S 85 J ( based) S 85 J ( upon) S 
1440 5280 P (MTU) S 62 J ( size.) S 63 J ( ) S 62 J ( The) S 63 J ( source) S 62 J ( of) S 63 J ( a) S 62 J ( Clear) S 63 J ( Datagram) S 62 J ( is) S 63 J ( going) S 62 J ( to) S 63 J ( generate) S 63 J ( packets) S 63 J ( consistent) S 63 J ( with) S 63 J ( MTU) S 63 J ( of) S 
1440 5520 P (the) S 66 J ( interface) S 67 J ( over) S 66 J ( which) S 67 J ( datagram) S 66 J ( is) S 67 J ( transmitted.) S 66 J ( ) S 67 J ( If) S 66 J ( these) S 66 J ( packets) S 66 J ( reach) S 66 J ( an) S 66 J ( Encapsulator) S 66 J ( and) S 66 J ( are) S 
1440 5760 P (encapsulated,) S 65 J ( they) S 66 J ( may) S 65 J ( be) S 66 J ( fragmented) S 66 J ( if) S 66 J ( they) S 66 J ( are) S 66 J ( larger) S 66 J ( than) S 66 J ( the) S 66 J ( MTU) S 66 J ( of) S 66 J ( the) S 66 J ( Encapsulator,) S 66 J ( even) S 
1440 6000 P (though) S 130 J ( the) S 131 J ( physical) S 130 J ( interfaces) S 130 J ( of) S 130 J ( the) S 130 J ( source) S 130 J ( and) S 130 J ( Encapsulator) S 130 J ( may) S 130 J ( have) S 130 J ( the) S 130 J ( same) S 130 J ( MTU.) S 
1440 6240 P (Because) S 71 J ( the) S 72 J ( Encapsulated) S 71 J ( Datagram) S 72 J ( is) S 71 J ( sent) S 72 J ( to) S 72 J ( the) S 72 J ( Decapsulator) S 72 J ( using) S 72 J ( IP,) S 72 J ( there) S 72 J ( is) S 72 J ( no) S 72 J ( problem) S 72 J ( in) S 
1440 6480 P (allowing) S 76 J ( IP) S 77 J ( to) S 76 J ( perform) S 77 J ( fragmentation) S 76 J ( and) S 77 J ( reassembly.) S 76 J ( ) S 77 J ( However,) S 76 J ( fragmentation) S 76 J ( is) S 76 J ( known) S 76 J ( to) S 76 J ( be) S 
1440 6720 P (inefficient) S 100 J ( and) S 101 J ( is) S 100 J ( generally) S 101 J ( avoided.) S 100 J ( ) S 100 J ( Because) S 100 J ( a) S 100 J ( new) S 100 J ( header) S 100 J ( is) S 100 J ( being) S 100 J ( prepended) S 100 J ( to) S 100 J ( the) S 100 J ( Clear) S 
1440 6960 P (Datagram) S 82 J ( by) S 83 J ( the) S 82 J ( encapsulation) S 83 J ( process,) S 82 J ( the) S 83 J ( likelihood) S 82 J ( of) S 83 J ( fragmentation) S 83 J ( occurring) S 83 J ( is) S 83 J ( increased.) S 
1440 7200 P (If) S 78 J ( the) S 79 J ( Encapsulator) S 78 J ( decides) S 79 J ( to) S 78 J ( disallow) S 79 J ( fragmentation) S 78 J ( through) S 79 J ( the) S 78 J ( Encapsulation) S 79 J ( Space,) S 78 J ( it) S 79 J ( must) S 
1440 7440 P (send) S 90 J ( an) S 91 J ( ICMP) S 90 J ( message) S 91 J ( back) S 90 J ( to) S 91 J ( the) S 90 J ( source.) S 91 J ( ) S 90 J ( This) S 91 J ( means) S 90 J ( that) S 90 J ( the) S 90 J ( MTU) S 90 J ( of) S 90 J ( the) S 90 J ( interface) S 90 J ( in) S 90 J ( the) S 
1440 7680 P (encapsulation) S 60 J ( space) S 60 J ( is) S 60 J ( effectively) S 60 J ( smaller) S 60 J ( than) S 60 J ( that) S 60 J ( of) S 60 J ( the) S 60 J ( physical) S 60 J ( MTU) S 60 J ( of) S 60 J ( the) S 60 J ( interface.) S 
1440 8160 P (Fragmentation) S 244 J ( by) S 245 J ( intermediate) S 244 J ( User) S 245 J ( Space) S 245 J ( Gateways) S 245 J ( introduces) S 245 J ( another) S 245 J ( problem.) S 
1440 8400 P (Fragmentation) S 74 J ( occurs) S 75 J ( at) S 74 J ( the) S 75 J ( IP) S 74 J ( level.) S 75 J ( ) S 74 J ( If) S 75 J ( a) S 74 J ( TCP) S 75 J ( protocol) S 75 J ( is) S 75 J ( in) S 75 J ( use) S 75 J ( and) S 75 J ( fragmentation) S 75 J ( occurs,) S 75 J ( the) S 
1440 8640 P (TCP) S 99 J ( header) S 100 J ( is) S 99 J ( contained) S 100 J ( in) S 99 J ( the) S 100 J ( first) S 99 J ( fragment,) S 100 J ( but) S 99 J ( not) S 100 J ( the) S 99 J ( following) S 100 J ( fragments.) S 99 J ( [3]) S 100 J ( ) S 99 J ( If) S 99 J ( these) S 
1440 8880 P (fragments) S 62 J ( are) S 63 J ( forwarded) S 62 J ( by) S 63 J ( an) S 62 J ( Encapsulator,) S 63 J ( discrimination) S 62 J ( of) S 63 J ( the) S 62 J ( Clear) S 63 J ( Header) S 63 J ( for) S 63 J ( a) S 63 J ( given) S 63 J ( flow) S 
1440 9120 P (will) S 91 J ( only) S 92 J ( be) S 91 J ( able) S 92 J ( to) S 91 J ( occur) S 92 J ( on) S 91 J ( the) S 92 J ( IP) S 91 J ( header) S 92 J ( portion) S 91 J ( of) S 92 J ( the) S 92 J ( Clear) S 92 J ( Header.) S 92 J ( ) S 92 J ( If) S 92 J ( discrimination) S 92 J ( is) S 
1440 9360 P (attempted) S 71 J ( on) S 72 J ( the) S 71 J ( TCP) S 72 J ( portion) S 71 J ( of) S 72 J ( the) S 71 J ( header,) S 72 J ( then) S 72 J ( only) S 72 J ( the) S 72 J ( first) S 72 J ( fragment) S 72 J ( will) S 72 J ( be) S 72 J ( matched,) S 72 J ( while) S 
1440 9600 P (remaining) S 60 J ( fragments) S 60 J ( will) S 60 J ( not.) S 
1440 10080 P 0 12 F 24 12 F B (B.2) S 60 J ( ICMP) S 60 J ( Messages) S E 
1440 10560 P 0 12 F 24 12 F (The) S 72 J ( most) S 73 J ( controversial) S 72 J ( aspect) S 73 J ( of) S 72 J ( encapsulation) S 73 J ( is) S 72 J ( the) S 73 J ( handling) S 72 J ( of) S 72 J ( ICMP) S 72 J ( messages.) S 72 J ( [1]) S 72 J ( ) S 72 J ( Because) S 
1440 10800 P (the) S 81 J ( Encapsulation) S 82 J ( Header) S 81 J ( contains) S 82 J ( the) S 81 J ( source) S 82 J ( address) S 81 J ( of) S 82 J ( the) S 81 J ( Encapsulator) S 81 J ( in) S 81 J ( the) S 81 J ( Encapsulation) S 
1440 11040 P (Space,) S 96 J ( ICMP) S 97 J ( messages) S 96 J ( which) S 96 J ( occur) S 96 J ( within) S 96 J ( the) S 96 J ( Encapsulation) S 96 J ( Space) S 96 J ( will) S 96 J ( be) S 96 J ( sent) S 96 J ( back) S 96 J ( to) S 96 J ( the) S 
1440 11280 P (Encapsulator.) S 82 J ( ) S 83 J ( Once) S 82 J ( the) S 83 J ( Encapsulator) S 82 J ( receives) S 83 J ( the) S 82 J ( ICMP) S 83 J ( message,) S 82 J ( the) S 83 J ( question) S 82 J ( is) S 83 J ( what) S 82 J ( should) S 
1440 11520 P (the) S 88 J ( next) S 89 J ( action) S 89 J ( be.) S 89 J ( ) S 89 J ( Since) S 89 J ( the) S 89 J ( original) S 89 J ( source) S 89 J ( of) S 89 J ( the) S 89 J ( Clear) S 89 J ( Datagram) S 89 J ( knows) S 89 J ( nothing) S 89 J ( about) S 89 J ( the) S 
1440 11760 P (Encapsulation) S 85 J ( Space,) S 86 J ( it) S 85 J ( does) S 86 J ( not) S 86 J ( make) S 86 J ( sense) S 86 J ( to) S 86 J ( forward) S 86 J ( an) S 86 J ( ICMP) S 86 J ( message) S 86 J ( on) S 86 J ( to) S 86 J ( it) S 86 J ( and) S 86 J ( ICMP) S 
1440 12000 P (message) S 122 J ( are) S 123 J ( not) S 123 J ( supposed) S 123 J ( to) S 123 J ( beget) S 123 J ( ICMP) S 123 J ( messages.) S 123 J ( ) S 123 J ( Yet) S 123 J ( not) S 123 J ( sending) S 123 J ( the) S 123 J ( original) S 123 J ( source) S 
1440 12240 P (something) S 60 J ( may) S 60 J ( break) S 60 J ( some) S 60 J ( important) S 60 J ( mechanisms.) S 
1440 12720 P (In) S 63 J ( addition) S 64 J ( to) S 63 J ( deciding) S 64 J ( what) S 63 J ( to) S 64 J ( forward) S 63 J ( to) S 64 J ( the) S 63 J ( source) S 64 J ( of) S 63 J ( the) S 63 J ( Clear) S 63 J ( Datagram,) S 63 J ( there) S 63 J ( is) S 63 J ( the) S 63 J ( problem) S 
1440 12960 P (of) S 69 J ( possibly) S 69 J ( not) S 69 J ( having) S 69 J ( enough) S 69 J ( information) S 69 J ( to) S 69 J ( send) S 69 J ( anything) S 69 J ( at) S 69 J ( all) S 69 J ( back) S 69 J ( to) S 69 J ( the) S 69 J ( source.) S 69 J ( ) S 69 J ( An) S 69 J ( ICMP) S 
1440 13200 P (message) S 81 J ( returns) S 81 J ( the) S 81 J ( header) S 81 J ( of) S 81 J ( the) S 81 J ( offending) S 81 J ( message) S 81 J ( and) S 81 J ( the) S 81 J ( first) S 81 J ( eight) S 81 J ( octets) S 81 J ( of) S 81 J ( the) S 81 J ( data) S 81 J ( after) S 
1440 13440 P (the) S 88 J ( header.) S 89 J ( ) S 88 J ( For) S 89 J ( the) S 88 J ( case) S 89 J ( of) S 89 J ( the) S 89 J ( encapsulation) S 89 J ( protocol,) S 89 J ( this) S 89 J ( translates) S 89 J ( to) S 89 J ( the) S 89 J ( IP) S 89 J ( portion) S 89 J ( of) S 89 J ( the) S 
1440 13680 P (Encapsulation) S 84 J ( Header,) S 85 J ( the) S 84 J ( first) S 85 J ( eight) S 84 J ( octets) S 85 J ( of) S 84 J ( the) S 85 J ( Encapsulation) S 85 J ( Protocol) S 85 J ( Header,) S 85 J ( and) S 85 J ( nothing) S 
1440 13920 P (else.) S 62 J ( ) S 63 J ( The) S 62 J ( contents) S 63 J ( of) S 62 J ( the) S 62 J ( Clear) S 62 J ( Datagram) S 62 J ( are) S 62 J ( completely) S 62 J ( lost.) S 62 J ( ) S 62 J ( Therefore,) S 62 J ( for) S 62 J ( the) S 62 J ( Encapsulator) S 62 J ( to) S 
1440 14640 P (Woodburn) S 60 J ( &) S 60 J ( Mills) S 
10033 14640 P (Page) S 60 J ( ) S (11) S 0 12 F 
PE 
1440 1680 P 24 12 F (RFC) S 60 J ( 1241) S 
5035 1680 P (Internet) S 60 J ( Encapsulation) S 
9860 1680 P (July) S 60 J ( 1991) S 
1440 2160 P (send) S 67 J ( an) S 68 J ( ICMP) S 67 J ( message) S 68 J ( back) S 67 J ( to) S 68 J ( the) S 67 J ( source) S 68 J ( it) S 67 J ( has) S 68 J ( to) S 68 J ( reconstruct) S 68 J ( the) S 68 J ( Clear) S 68 J ( Header.) S 68 J ( ) S 68 J ( However,) S 68 J ( it) S 68 J ( is) S 
1440 2400 P (essentially) S 60 J ( impossible) S 60 J ( to) S 60 J ( reproduce) S 60 J ( the) S 60 J ( exact) S 60 J ( header.) S 
1440 2880 P (For) S 92 J ( the) S 93 J ( purpose) S 92 J ( of) S 93 J ( this) S 92 J ( specification,) S 93 J ( the) S 92 J ( Flow) S 93 J ( ID) S 92 J ( has) S 93 J ( been) S 92 J ( assumed) S 93 J ( to) S 92 J ( be) S 93 J ( a) S 93 J ( unique) S 93 J ( one) S 93 J ( way) S 
1440 3120 P (mapping) S 87 J ( from) S 88 J ( a) S 87 J ( Clear) S 88 J ( Header.) S 87 J ( ) S 88 J ( There) S 87 J ( is) S 88 J ( no) S 87 J ( guarantee) S 88 J ( that) S 87 J ( the) S 87 J ( Flow) S 87 J ( ID) S 87 J ( could) S 87 J ( be) S 87 J ( used) S 87 J ( to) S 87 J ( map) S 
1440 3360 P (back) S 80 J ( to) S 81 J ( the) S 80 J ( Clear) S 80 J ( Header,) S 80 J ( ) S 80 J ( since) S 80 J ( several) S 80 J ( headers) S 80 J ( potentially) S 80 J ( map) S 80 J ( to) S 80 J ( the) S 80 J ( same) S 80 J ( flow.) S 80 J ( ) S 80 J ( With) S 80 J ( there) S 
1440 3600 P (being) S 139 J ( no) S 140 J ( effective) S 139 J ( way) S 140 J ( to) S 139 J ( regenerate) S 140 J ( the) S 139 J ( original) S 140 J ( datagram,) S 140 J ( some) S 140 J ( compromises) S 140 J ( must) S 140 J ( be) S 
1440 3840 P (examined.) S 
1440 4320 P (For) S 63 J ( each) S 64 J ( of) S 63 J ( the) S 64 J ( possible) S 63 J ( ICMP) S 64 J ( messages,) S 63 J ( the) S 64 J ( alternatives) S 63 J ( and) S 64 J ( impact) S 63 J ( will) S 64 J ( be) S 64 J ( assessed.) S 64 J ( ) S 64 J ( There) S 64 J ( are) S 
1440 4560 P (three) S 86 J ( categories) S 87 J ( of) S 86 J ( ICMP) S 87 J ( message) S 86 J ( involved.) S 87 J ( ) S 86 J ( The) S 87 J ( first) S 86 J ( is) S 86 J ( those) S 86 J ( ICMP) S 86 J ( messages) S 86 J ( which) S 86 J ( are) S 86 J ( not) S 
1440 4800 P (applicable) S 220 J ( in) S 221 J ( the) S 220 J ( context) S 221 J ( of) S 220 J ( Encapsulation.) S 221 J ( ) S 221 J ( These) S 221 J ( are:) S 221 J ( ) S 221 J ( Echo/Echo) S 221 J ( Reply) S 221 J ( and) S 
1440 5040 P (Timestamp/Timestamp) S 60 J ( Reply.) S 
1440 5520 P (The) S 142 J ( second) S 143 J ( category) S 142 J ( are) S 143 J ( those) S 142 J ( ICMP) S 143 J ( messages) S 142 J ( which) S 143 J ( concern) S 143 J ( mechanisms) S 143 J ( local) S 143 J ( to) S 143 J ( the) S 
1440 5760 P (encapsulation) S 62 J ( domain.) S 63 J ( ) S 63 J ( These) S 63 J ( are) S 63 J ( messages) S 63 J ( which) S 63 J ( would) S 63 J ( not) S 63 J ( make) S 63 J ( sense) S 63 J ( to) S 63 J ( the) S 63 J ( original) S 63 J ( source) S 63 J ( if) S 
1440 6000 P (it) S 65 J ( did) S 66 J ( receive) S 65 J ( them.) S 66 J ( ) S 65 J ( In) S 66 J ( these) S 65 J ( cases) S 66 J ( the) S 65 J ( encapsulator) S 66 J ( will) S 65 J ( have) S 66 J ( to) S 65 J ( decide) S 66 J ( what) S 65 J ( to) S 66 J ( do,) S 65 J ( but) S 65 J ( no) S 65 J ( ICMP) S 
1440 6240 P (message) S 83 J ( need) S 84 J ( be) S 83 J ( sent) S 84 J ( back) S 83 J ( to) S 84 J ( the) S 83 J ( original) S 83 J ( source.) S 83 J ( ) S 83 J ( The) S 83 J ( datagram) S 83 J ( will) S 83 J ( simply) S 83 J ( be) S 83 J ( lost,) S 83 J ( IP) S 83 J ( is) S 83 J ( not) S 
1440 6480 P (meant) S 71 J ( to) S 72 J ( be) S 71 J ( a) S 71 J ( reliable) S 71 J ( protocol.) S 71 J ( ) S 71 J ( Subsequent) S 71 J ( messages) S 71 J ( received) S 71 J ( for) S 71 J ( encapsulation) S 71 J ( may) S 71 J ( cause) S 71 J ( the) S 
1440 6720 P (encapsulator) S 72 J ( to) S 73 J ( generate) S 72 J ( ICMP) S 73 J ( Destination) S 72 J ( Unreachable) S 73 J ( messages) S 72 J ( back) S 73 J ( to) S 72 J ( the) S 73 J ( original) S 72 J ( source) S 73 J ( if) S 
1440 6960 P (the) S 67 J ( encapsulator) S 68 J ( can) S 67 J ( no) S 68 J ( longer) S 67 J ( send) S 68 J ( messages) S 67 J ( to) S 68 J ( the) S 67 J ( destination) S 68 J ( decapsulator.) S 67 J ( ) S 67 J ( This) S 67 J ( requires) S 67 J ( that) S 
1440 7200 P (ICMP) S 80 J ( messages) S 80 J ( inside) S 80 J ( the) S 80 J ( encapsulation) S 80 J ( domain) S 80 J ( affect) S 80 J ( the) S 80 J ( mapping) S 80 J ( from) S 80 J ( the) S 80 J ( Flow) S 80 J ( ID.) S 80 J ( ) S 80 J ( ICMP) S 
1440 7440 P (messages) S 91 J ( in) S 92 J ( the) S 91 J ( second) S 92 J ( category) S 91 J ( are:) S 92 J ( ) S 92 J ( Parameter) S 92 J ( Problem,) S 92 J ( Redirect,) S 92 J ( Destination) S 92 J ( Unreachable,) S 
1440 7680 P (Time) S 60 J ( Exceeded.) S 
1440 8160 P (Finally) S 95 J ( there) S 96 J ( is) S 95 J ( one) S 96 J ( ICMP) S 95 J ( message) S 96 J ( which) S 95 J ( has) S 96 J ( direct) S 95 J ( bearing) S 96 J ( on) S 95 J ( the) S 96 J ( operation) S 95 J ( of) S 95 J ( the) S 95 J ( original) S 
1440 8400 P (source) S 85 J ( of) S 86 J ( datagrams) S 85 J ( destined) S 86 J ( for) S 85 J ( encapsulation,) S 86 J ( the) S 85 J ( ICMP) S 86 J ( Source) S 85 J ( Quench) S 86 J ( message.) S 86 J ( ) S 86 J ( The) S 86 J ( only) S 
1440 8640 P (possible) S 117 J ( mechanism) S 118 J ( available) S 117 J ( to) S 118 J ( the) S 117 J ( Encapsulator) S 117 J ( to) S 117 J ( handle) S 117 J ( this) S 117 J ( message) S 117 J ( is) S 117 J ( for) S 117 J ( the) S 117 J ( source) S 
1440 8880 P (quench) S 62 J ( message) S 63 J ( set) S 62 J ( a) S 63 J ( flag) S 63 J ( for) S 63 J ( the) S 63 J ( offending) S 63 J ( Flow) S 63 J ( ID) S 63 J ( such) S 63 J ( that) S 63 J ( subsequent) S 63 J ( messages) S 63 J ( that) S 63 J ( map) S 63 J ( the) S 
1440 9120 P (Flow) S 70 J ( cause) S 71 J ( the) S 70 J ( generation) S 71 J ( of) S 70 J ( a) S 71 J ( source) S 70 J ( quench) S 70 J ( back) S 70 J ( to) S 70 J ( the) S 70 J ( original) S 70 J ( source) S 70 J ( before) S 70 J ( the) S 70 J ( datagram) S 70 J ( is) S 
1440 9360 P (encapsulated.) S 
1440 9840 P (This) S 73 J ( last) S 74 J ( mechanism) S 73 J ( may) S 74 J ( be) S 73 J ( a) S 74 J ( solution) S 73 J ( for) S 74 J ( the) S 73 J ( more) S 74 J ( general) S 73 J ( problem.) S 74 J ( ) S 73 J ( The) S 74 J ( rule) S 73 J ( of) S 74 J ( thumb) S 73 J ( could) S 
1440 10080 P (be) S 65 J ( that) S 66 J ( when) S 65 J ( an) S 66 J ( ICMP) S 66 J ( message) S 66 J ( is) S 66 J ( received) S 66 J ( for) S 66 J ( a) S 66 J ( given) S 66 J ( flow,) S 66 J ( then) S 66 J ( flag) S 66 J ( the) S 66 J ( Flow) S 66 J ( so) S 66 J ( that) S 66 J ( then) S 66 J ( next) S 
1440 10320 P (message) S 78 J ( encapsulated) S 79 J ( will) S 78 J ( cause) S 79 J ( the) S 78 J ( next) S 79 J ( message) S 78 J ( encapsulated) S 79 J ( on) S 78 J ( that) S 79 J ( flow) S 78 J ( to) S 78 J ( force) S 78 J ( an) S 78 J ( ICMP) S 
1440 10560 P (message) S 77 J ( to) S 78 J ( the) S 77 J ( source.) S 78 J ( ) S 77 J ( After) S 78 J ( the) S 77 J ( ICMP) S 77 J ( message) S 77 J ( is) S 77 J ( sent) S 77 J ( to) S 77 J ( the) S 77 J ( source,) S 77 J ( the) S 77 J ( mechanism) S 77 J ( could) S 77 J ( be) S 
1440 10800 P (reset.) S 62 J ( ) S 63 J ( This) S 62 J ( would) S 63 J ( effectively) S 62 J ( cause) S 63 J ( every) S 62 J ( other) S 63 J ( packet) S 62 J ( to) S 62 J ( receive) S 62 J ( an) S 62 J ( ICMP) S 62 J ( message) S 62 J ( if) S 62 J ( there) S 62 J ( were) S 
1440 11040 P (a) S 105 J ( persistent) S 106 J ( problem.) S 105 J ( ) S 106 J ( This) S 105 J ( mechanism) S 106 J ( is) S 105 J ( probably) S 106 J ( only) S 105 J ( safe) S 106 J ( for) S 105 J ( Unreachable) S 106 J ( messages) S 106 J ( and) S 
1440 11280 P (Source) S 60 J ( Quench.) S 
1440 12000 P 0 12 F 24 12 F B (C.) S 60 J ( Reception) S 60 J ( of) S 60 J ( Clear) S 60 J ( Datagrams) S E 
1440 12480 P 0 12 F 24 12 F (In) S 89 J ( order) S 90 J ( to) S 89 J ( use) S 90 J ( the) S 89 J ( encapsulation) S 90 J ( protocol) S 89 J ( a) S 90 J ( modification) S 89 J ( is) S 90 J ( required) S 89 J ( to) S 90 J ( IP) S 90 J ( forwarding.) S 90 J ( ) S 90 J ( There) S 
1440 12720 P (must) S 77 J ( be) S 78 J ( some) S 78 J ( way) S 78 J ( for) S 78 J ( the) S 78 J ( IP) S 78 J ( module) S 78 J ( in) S 78 J ( a) S 78 J ( system) S 78 J ( to) S 78 J ( pass) S 78 J ( Clear) S 78 J ( Datagrams) S 78 J ( to) S 78 J ( the) S 78 J ( encapsulation) S 
1440 12960 P (protocol.) S 89 J ( ) S 90 J ( A) S 90 J ( suggested) S 90 J ( means) S 90 J ( of) S 90 J ( doing) S 90 J ( this) S 90 J ( is) S 90 J ( to) S 90 J ( make) S 90 J ( an) S 90 J ( addition) S 90 J ( to) S 90 J ( a) S 90 J ( system's) S 90 J ( routing) S 90 J ( table) S 
1440 13200 P (structures.) S 141 J ( ) S 142 J ( A) S 141 J ( flag) S 142 J ( could) S 141 J ( be) S 142 J ( added) S 141 J ( to) S 142 J ( a) S 141 J ( route) S 142 J ( that) S 141 J ( tells) S 142 J ( the) S 141 J ( forwarding) S 142 J ( function) S 142 J ( to) S 142 J ( use) S 
1440 13440 P (encapsulation.) S 60 J ( ) S 60 J ( Note) S 60 J ( that) S 60 J ( the) S 60 J ( default) S 60 J ( route) S 60 J ( could) S 60 J ( also) S 60 J ( be) S 60 J ( set) S 60 J ( to) S 60 J ( use) S 60 J ( encapsulation.) S 
1440 14640 P (Woodburn) S 60 J ( &) S 60 J ( Mills) S 
10033 14640 P (Page) S 60 J ( ) S (12) S 0 12 F 
PE 
1440 1680 P 24 12 F (RFC) S 60 J ( 1241) S 
5035 1680 P (Internet) S 60 J ( Encapsulation) S 
9860 1680 P (July) S 60 J ( 1991) S 
1440 2160 P (With) S 81 J ( this) S 82 J ( mechanism) S 81 J ( in) S 82 J ( place,) S 81 J ( a) S 82 J ( system's) S 81 J ( IP) S 82 J ( forwarding) S 81 J ( mechanism) S 82 J ( would) S 82 J ( examine) S 82 J ( its) S 82 J ( routing) S 
1440 2400 P (tables) S 76 J ( to) S 77 J ( try) S 76 J ( and) S 77 J ( match) S 76 J ( the) S 77 J ( IP) S 77 J ( destination) S 77 J ( to) S 77 J ( a) S 77 J ( specific) S 77 J ( route.) S 77 J ( ) S 77 J ( If) S 77 J ( a) S 77 J ( route) S 77 J ( was) S 77 J ( found,) S 77 J ( it) S 77 J ( would) S 77 J ( be) S 
1440 2640 P (then) S 115 J ( checked) S 116 J ( to) S 115 J ( see) S 116 J ( if) S 115 J ( encapsulation) S 116 J ( should) S 115 J ( be) S 116 J ( used.) S 115 J ( ) S 116 J ( If) S 116 J ( not) S 116 J ( the) S 116 J ( packet) S 116 J ( would) S 116 J ( be) S 116 J ( handled) S 
1440 2880 P (normally.) S 99 J ( ) S 100 J ( If) S 99 J ( encapsulation) S 100 J ( was) S 99 J ( turned) S 100 J ( on) S 99 J ( for) S 100 J ( the) S 99 J ( route,) S 100 J ( then) S 99 J ( the) S 100 J ( datagram) S 99 J ( would) S 100 J ( be) S 99 J ( sent) S 99 J ( to) S 
1440 3120 P (encapsulation) S 60 J ( for) S 60 J ( forwarding.) S 
1440 3600 P (In) S 111 J ( addition) S 112 J ( to) S 111 J ( snagging) S 112 J ( packets) S 112 J ( as) S 112 J ( they) S 112 J ( are) S 112 J ( forwarded,) S 112 J ( something) S 112 J ( must) S 112 J ( be) S 112 J ( done) S 112 J ( at) S 112 J ( the) S 112 J ( last) S 
1440 3840 P (Decapsulator) S 68 J ( on) S 69 J ( a) S 68 J ( given) S 69 J ( flow) S 68 J ( so) S 69 J ( that) S 68 J ( packets) S 69 J ( that) S 68 J ( are) S 69 J ( decapsulated) S 68 J ( are) S 69 J ( properly) S 69 J ( dumped) S 69 J ( into) S 69 J ( the) S 
1440 4080 P (IP) S 77 J ( module) S 78 J ( for) S 77 J ( delivery.) S 78 J ( ) S 77 J ( Because) S 78 J ( the) S 77 J ( packets) S 78 J ( are) S 77 J ( encapsulated) S 78 J ( just) S 77 J ( before) S 78 J ( forwarding,) S 77 J ( it) S 77 J ( should) S 
1440 4320 P (be) S 109 J ( a) S 109 J ( simple) S 109 J ( matter) S 109 J ( for) S 109 J ( decapsulated) S 109 J ( datagrams) S 109 J ( to) S 109 J ( be) S 109 J ( injected) S 109 J ( into) S 109 J ( the) S 109 J ( output) S 109 J ( portion) S 109 J ( of) S 109 J ( IP.) S 
1440 4560 P (However,) S 65 J ( the) S 66 J ( source) S 65 J ( address) S 66 J ( in) S 65 J ( the) S 66 J ( Clear) S 65 J ( Header) S 66 J ( must) S 65 J ( not) S 66 J ( change.) S 65 J ( ) S 65 J ( The) S 65 J ( address) S 65 J ( must) S 65 J ( remain) S 65 J ( the) S 
1440 4800 P (address) S 132 J ( of) S 133 J ( the) S 132 J ( source) S 132 J ( in) S 132 J ( the) S 132 J ( source) S 132 J ( User) S 132 J ( Space) S 132 J ( and) S 132 J ( not) S 132 J ( be) S 132 J ( overwritten) S 132 J ( with) S 132 J ( that) S 132 J ( of) S 132 J ( the) S 
1440 5040 P (Decapsulator.) S 
1440 5760 P 0 12 F 24 12 F B (D.) S 60 J ( Construction) S 60 J ( of) S 60 J ( Virtual) S 60 J ( Networks) S 60 J ( with) S 60 J ( Encapsulation) S E 
1440 6240 P 0 12 F 24 12 F (Because) S 74 J ( of) S 75 J ( the) S 74 J ( modification) S 75 J ( to) S 74 J ( the) S 75 J ( routing) S 75 J ( table) S 75 J ( to) S 75 J ( permit) S 75 J ( encapsulation,) S 75 J ( it) S 75 J ( becomes) S 75 J ( possible) S 75 J ( to) S 
1440 6480 P (specify) S 69 J ( a) S 70 J ( virtual) S 69 J ( interface) S 70 J ( whose) S 70 J ( sole) S 70 J ( purpose) S 70 J ( is) S 70 J ( encapsulation.) S 70 J ( ) S 70 J ( Using) S 70 J ( this) S 70 J ( mechanism,) S 70 J ( it) S 70 J ( would) S 
1440 6720 P (become) S 133 J ( possible) S 134 J ( to) S 133 J ( link) S 134 J ( topologically) S 133 J ( distant) S 133 J ( entities) S 133 J ( with) S 133 J ( Flows.) S 133 J ( ) S 133 J ( This) S 133 J ( would) S 133 J ( allow) S 133 J ( the) S 
1440 6960 P (construction) S 60 J ( of) S 61 J ( a) S 60 J ( Virtual) S 61 J ( Network) S 60 J ( which) S 61 J ( would) S 61 J ( overlay) S 61 J ( the) S 61 J ( actual) S 61 J ( routing) S 61 J ( topology.) S 61 J ( ) S 61 J ( An) S 61 J ( example) S 
1440 7200 P (of) S 60 J ( such) S 60 J ( a) S 60 J ( virtual) S 60 J ( network) S 60 J ( is) S 60 J ( shown) S 60 J ( in) S 60 J ( Fig.) S 60 J ( 4.) S 
1440 14640 P (Woodburn) S 60 J ( &) S 60 J ( Mills) S 
10033 14640 P (Page) S 60 J ( ) S (13) S 0 12 F 
PE 
1440 1680 P 24 12 F (RFC) S 60 J ( 1241) S 
5035 1680 P (Internet) S 60 J ( Encapsulation) S 
9860 1680 P (July) S 60 J ( 1991) S 
1080 1920 P II1
1080 9201 IX 10080 12960 7281 9360 IS 0 15840 IX
II2
%%BeginDocument: RFC-FIG4.EPS
%!PS-Adobe-2.0 EPSF-1.2
%%Title: RFC-FIG4.EPS
%%Creator: Freelance Plus 3.01
%%CreationDate: 1/16/1991
%%Pages: 1
%%DocumentFonts: (atend)
%%BoundingBox: 0 0 648 468
%%EndComments

%%BeginProcSet: Freelance Plus
/Freelance_Plus dup 100 dict def load begin
[ ] {bind} stopped { (patching the bind operator...) = flush
/*bind /bind load def /bind { dup xcheck { *bind } if } *bind def } if pop
/bdf {bind def} bind def /ldf {load def} bdf
/mt /moveto ldf /rt /rmoveto ldf /l2 /lineto ldf /c2 /curveto ldf
/sg /setgray ldf /gs /gsave ldf /ef /eofill ldf /rl2 /rlineto ldf
/st /stroke ldf /gr /grestore ldf /np /newpath ldf
/sv /save ldf /su /statusdict ldf /rs /restore ldf
/sw /setlinewidth ldf /sd /setdash ldf /cp /closepath ldf /ed {exch def } bdf
/cfnt {findfont exch makefont setfont} bdf
/itr {transform round exch round exch itransform} bdf
/fres 72 0 matrix currentmatrix dtransform
exch dup mul exch dup mul add sqrt def
/res fres def /mcm matrix currentmatrix bdf
%%EndProcSet
end
%%EndProlog

%%BeginSetup
Freelance_Plus begin
save newpath
.1 .1 scale
/ecm matrix currentmatrix bdf
/sem {ecm setmatrix} bdf
-720 -720 translate
2 setlinecap
0 setlinejoin
1.42 setmiterlimit%%EndSetup

0.000 sg
6 sw
sv np [] 0 sd 
1821 3765 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 922 0.000 360.000 arc sem
st rs

sv np 
2310 1993 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 922 0.000 360.000 arc sem
st rs

sv np 
3573 3319 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 922 0.000 360.000 arc sem
st rs

sv np 
4375 1675 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 922 0.000 360.000 arc sem
st rs

sv np 
5276 3931 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 922 0.000 360.000 arc sem
st rs

sv np 
6098 2287 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 922 0.000 360.000 arc sem
st rs

sv np 
2083 2903 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
1614 3540 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
2279 3528 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
1946 4152 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
1154 4140 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
1712 2253 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
2524 2253 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
2201 1705 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
2857 1692 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
2093 1233 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
2690 3502 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
2925 2674 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
3972 2508 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
4423 3604 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
5705 3120 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
5254 1960 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
3493 3872 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
3493 3311 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
3493 2776 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
3698 1526 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
4383 1195 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
4383 1845 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
4873 1386 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
4853 2215 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
4853 4458 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
4853 3897 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
5695 3897 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
5695 4395 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
5049 3375 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
5695 2559 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
5714 1781 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
6018 2266 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
6754 2683 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

sv np 
6716 1788 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

12 sw
sv np 
1145 4148 itr mt
1616 3535 itr l2
st rs

sv np 
1616 3535 itr mt
1947 4148 itr l2
st rs

sv np 
2075 2922 itr mt
1616 3535 itr l2
st rs

sv np 
1947 4148 itr mt
2290 3518 itr l2
st rs

sv np 
2290 3518 itr mt
2087 2905 itr l2
st rs

sv np 
1718 2242 itr mt
2099 2922 itr l2
st rs

sv np 
2099 2922 itr mt
2519 2259 itr l2
st rs

sv np 
2532 2259 itr mt
2215 1729 itr l2
st rs

sv np 
2201 1695 itr mt
2099 1215 itr l2
st rs

sv np 
2189 1712 itr mt
2863 1695 itr l2
st rs

sv np 
2519 2259 itr mt
2865 1687 itr l2
st rs

sv np 
2927 2690 itr mt
2856 1687 itr l2
st rs

sv np 
2927 2681 itr mt
1716 2248 itr l2
st rs

sv np 
2694 3499 itr mt
2281 3534 itr l2
st rs

sv np 
2703 3499 itr mt
3502 3874 itr l2
st rs

sv np 
3502 3874 itr mt
3502 3312 itr l2
st rs

sv np 
2694 3511 itr mt
3502 3312 itr l2
st rs

sv np 
3502 3312 itr mt
2927 2681 itr l2
st rs

sv np 
3502 2775 itr mt
3502 3324 itr l2
st rs

sv np [40] 20 sd 
3502 3312 itr mt
3977 2506 itr l2
st rs

sv np [40] 20 sd 
3493 3312 itr mt
4426 3616 itr l2
st rs

sv np [40] 20 sd 
3493 2763 itr mt
3977 2494 itr l2
st rs

sv np [40] 20 sd 
3977 2517 itr mt
3699 1512 itr l2
st rs

sv np [40] 20 sd 
3699 1524 itr mt
4381 1851 itr l2
st rs

sv np [40] 20 sd 
3969 2494 itr mt
4866 2213 itr l2
st rs

sv np [40] 20 sd 
4390 1209 itr mt
4390 1838 itr l2
st rs

sv np [40] 20 sd 
4390 1209 itr mt
4848 2213 itr l2
st rs

sv np [40] 20 sd 
4856 2213 itr mt
4883 1372 itr l2
st rs

sv np [40] 20 sd 
4874 1372 itr mt
5251 1968 itr l2
st rs

sv np [40] 20 sd 
4848 4457 itr mt
4426 3604 itr l2
st rs

sv np [40] 20 sd 
4436 3628 itr mt
4848 3896 itr l2
st rs

sv np [40] 20 sd 
4848 3896 itr mt
4848 4470 itr l2
st rs

sv np [40] 20 sd 
4436 3616 itr mt
5063 3382 itr l2
st rs

sv np [40] 20 sd 
5687 4411 itr mt
5695 3896 itr l2
st rs

sv np [40] 20 sd 
5058 3371 itr mt
5687 3874 itr l2
st rs

sv np [40] 20 sd 
5695 3896 itr mt
5704 3125 itr l2
st rs

sv np [40] 20 sd 
5058 3382 itr mt
5714 3102 itr l2
st rs

sv np [40] 20 sd 
5678 2553 itr mt
5704 3102 itr l2
st rs

sv np [40] 20 sd 
5256 1968 itr mt
5695 2575 itr l2
st rs

sv np [40] 20 sd 
5695 2575 itr mt
5714 1781 itr l2
st rs

sv np [40] 20 sd 
5714 1792 itr mt
6009 2260 itr l2
st rs

sv np [40] 20 sd 
6019 2260 itr mt
6755 2693 itr l2
st rs

sv np [40] 20 sd 
6763 2693 itr mt
6719 1792 itr l2
st rs

sv np [40] 20 sd 
6719 1792 itr mt
5731 1781 itr l2
st rs

6 sw
sv np [] 0 sd 
2845 5326 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 38 0.000 360.000 arc sem
gs 0.100 sg
ef gr
st rs

12 sw
sv np 
2669 5149 itr mt
3021 5149 itr l2
st rs

sv np [40] 20 sd 
2669 4958 itr mt
3021 4958 itr l2
st rs

/Ich 256 array def StandardEncoding Ich copy pop /bullet/paragraph/section/dieresis/tilde/ring
/circumflex/grave/acute/quotedblleft/quotesingle
/ellipsis/endash/emdash/guilsinglleft/guilsinglright
/quotedblbase/quotesinglbase/quotedblright/OE/oe
/Ydieresis/fi/fl/dagger/daggerdbl/Ccedilla/udieresis
/eacute/acircumflex/adieresis/agrave/aring/ccedilla
/ecircumflex/edieresis/egrave/idieresis/icircumflex
/igrave/Adieresis/Aring/Eacute/ae/AE/ocircumflex
/odieresis/ograve/ucircumflex/ugrave/ydieresis
/Odieresis/Udieresis/oslash/sterling/Oslash/florin
/aacute/iacute/oacute/uacute/ntilde/Ntilde/ordfeminine
/ordmasculine/questiondown/exclamdown/guillemotleft
/guillemotright/Aacute/Acircumflex/Agrave/cent/yen
/atilde/Atilde/currency/Ecircumflex/Edieresis/Egrave
/dotlessi/Iacute/Icircumflex/Idieresis/Igrave/Oacute
/germandbls/Ocircumflex/Ograve/otilde/Otilde/Uacute
/Ucircumflex/Ugrave/macron/cedilla/periodcentered
Ich 127 97 getinterval astore pop
/Ienc { /ncs Ich def /nfn ed /bfn ed /bfd bfn findfont def
/nf bfd maxlength dict def bfd{exch dup dup /FID ne exch /Encoding ne and
{exch nf 3 1 roll put}{pop pop} ifelse }forall nf/FontName nfn put
nf/Encoding ncs put nfn nf definefont pop}bdf

/IencO { /ncs Ich def /nfn ed /bfn ed /lnw ed /bfd bfn findfont def
/nf bfd maxlength 4 add dict def bfd{exch dup dup /FID ne exch /Encoding ne and
{exch nf 3 1 roll put}{pop pop} ifelse }forall nf/FontName nfn put nf/Encoding ncs put
nf/PaintType 2 put nf/StrokeWidth lnw put
nfn nf definefont pop}bdf

/IencSO { /nfn ed /bfn ed /lnw ed /bfd bfn findfont def
/nf bfd maxlength 4 add dict def bfd{exch dup /FID ne { exch nf 3 1 roll put}{pop pop} ifelse }forall
nf/FontName nfn put nf/PaintType 2 put
nf/StrokeWidth lnw put nfn nf definefont pop}bdf

/Helvetica-Oblique /Flfon6 Ienc
[121 0 0.00 121 -12 -89]  /Flfon6 cfnt

3147 5321 itr mt
0 45 itr rt
(Encapsulator/Decapsulator) 
show


3147 5155 itr mt
0 45 itr rt
(Virtual Network A) 
show


3147 4964 itr mt
0 45 itr rt
(Virtual Network B) 
show

6 sw
sv np [] 0 sd 
2748 4348 itr mt
currentpoint translate
np 0.987 1.000 scale
0 0 475 55.018 124.982 arc sem
st rs


3147 4791 itr mt
0 45 itr rt
(Common Routing Space) 
show

rs end

%%Trailer
%%DocumentFonts: Helvetica-Oblique

%%EndDocument
end IT

4455 9681 P (Fig.) S 60 J ( 4.) S 60 J ( ) S 60 J ( Virtual) S 60 J ( Networks) S 60 J ( Example) S 
1440 10641 P (Each) S 100 J ( Encapsulator) S 101 J ( shown) S 100 J ( has) S 101 J ( an) S 100 J ( virtual) S 101 J ( interface) S 100 J ( on) S 101 J ( one) S 100 J ( of) S 100 J ( the) S 100 J ( virtual) S 100 J ( networks.) S 100 J ( ) S 100 J ( The) S 100 J ( lines) S 
1440 10881 P (represent) S 83 J ( individual) S 84 J ( links) S 83 J ( in) S 84 J ( the) S 83 J ( flows) S 84 J ( that) S 83 J ( connect) S 84 J ( each) S 83 J ( member) S 83 J ( of) S 83 J ( the) S 83 J ( virtual) S 83 J ( network.) S 83 J ( ) S 83 J ( Note) S 
1440 11121 P (that) S 73 J ( new) S 74 J ( links) S 73 J ( could) S 74 J ( be) S 73 J ( added) S 74 J ( between) S 73 J ( any) S 74 J ( points) S 73 J ( as) S 74 J ( long) S 73 J ( as) S 74 J ( the) S 73 J ( two) S 74 J ( entities) S 73 J ( are) S 74 J ( visible) S 73 J ( to) S 74 J ( each) S 
1440 11361 P (other) S 108 J ( in) S 109 J ( a) S 108 J ( common) S 109 J ( Encapsulation) S 108 J ( Space.) S 109 J ( ) S 108 J ( The) S 109 J ( routing) S 108 J ( within) S 109 J ( the) S 108 J ( virtual) S 108 J ( network) S 108 J ( would) S 108 J ( be) S 
1440 11601 P (handled) S 92 J ( by) S 93 J ( the) S 92 J ( encapsulation) S 92 J ( mechanism.) S 92 J ( ) S 92 J ( The) S 92 J ( programming) S 92 J ( of) S 92 J ( the) S 92 J ( routing) S 92 J ( tables) S 92 J ( could) S 92 J ( be) S 92 J ( a) S 
1440 11841 P (variant) S 60 J ( of) S 60 J ( any) S 60 J ( of) S 60 J ( the) S 60 J ( currently) S 60 J ( existing) S 60 J ( routing) S 60 J ( protocols,) S 60 J ( an) S 60 J ( encapsulated) S 60 J ( OSPF) S 60 J ( for) S 60 J ( example.) S 
1440 12321 P (With) S 104 J ( this) S 105 J ( in) S 104 J ( mind,) S 105 J ( it) S 104 J ( would) S 105 J ( be) S 104 J ( possible) S 105 J ( to) S 104 J ( have) S 105 J ( special) S 104 J ( encapsulation) S 105 J ( gateways) S 104 J ( with) S 105 J ( virtual) S 
1440 12561 P (interfaces) S 100 J ( on) S 101 J ( two) S 101 J ( virtual) S 101 J ( networks) S 101 J ( to) S 101 J ( form) S 101 J ( an) S 101 J ( entire) S 101 J ( virtual) S 101 J ( internet.) S 101 J ( ) S 101 J ( This) S 101 J ( is) S 101 J ( the) S 101 J ( role) S 101 J ( of) S 101 J ( the) S 
1440 12801 P (Encapsulators) S 60 J ( joining) S 60 J ( Virtual) S 60 J ( Network) S 60 J ( A) S 60 J ( and) S 60 J ( Virtual) S 60 J ( Network) S 60 J ( B.) S 
1440 14640 P (Woodburn) S 60 J ( &) S 60 J ( Mills) S 
10033 14640 P (Page) S 60 J ( ) S (14) S 0 12 F 
PE 
1440 1680 P 24 12 F (RFC) S 60 J ( 1241) S 
5035 1680 P (Internet) S 60 J ( Encapsulation) S 
9860 1680 P (July) S 60 J ( 1991) S 
1440 2160 P 0 12 F 24 12 F B (E.) S 60 J ( Encapsulation) S 60 J ( and) S 60 J ( OSI) S E 
1440 2640 P 0 12 F 24 12 F (It) S 90 J ( is) S 91 J ( intended) S 90 J ( that) S 91 J ( the) S 90 J ( encapsulation) S 91 J ( mechanism) S 90 J ( described) S 91 J ( in) S 90 J ( the) S 91 J ( memo) S 90 J ( be) S 91 J ( extensible) S 90 J ( to) S 91 J ( other) S 
1440 2880 P (environments) S 121 J ( outside) S 122 J ( of) S 121 J ( the) S 122 J ( Internet.) S 122 J ( ) S 122 J ( It) S 122 J ( should) S 122 J ( be) S 122 J ( possible) S 122 J ( to) S 122 J ( encapsulate) S 122 J ( many) S 122 J ( different) S 
1440 3120 P (protocols) S 60 J ( within) S 60 J ( IP) S 60 J ( and) S 60 J ( IP) S 60 J ( within) S 60 J ( many) S 60 J ( other) S 60 J ( protocols.) S 
1440 3600 P (The) S 104 J ( key) S 105 J ( concepts) S 104 J ( defined) S 105 J ( in) S 104 J ( this) S 105 J ( memo) S 104 J ( are) S 105 J ( the) S 104 J ( mapping) S 105 J ( of) S 104 J ( a) S 105 J ( header) S 105 J ( to) S 105 J ( a) S 105 J ( Flow) S 105 J ( ID) S 105 J ( and) S 105 J ( the) S 
1440 3840 P (mapping) S 69 J ( of) S 70 J ( fields) S 69 J ( in) S 70 J ( the) S 69 J ( original) S 69 J ( header) S 69 J ( to) S 69 J ( the) S 69 J ( encapsulating) S 69 J ( header.) S 69 J ( ) S 69 J ( Special) S 69 J ( mappings) S 69 J ( between) S 
1440 4080 P (protocols) S 117 J ( would) S 118 J ( have) S 118 J ( to) S 118 J ( be) S 118 J ( defined,) S 118 J ( i.e.) S 118 J ( for) S 118 J ( the) S 118 J ( QoS) S 118 J ( bits,) S 118 J ( and) S 118 J ( some) S 118 J ( sort) S 118 J ( of) S 118 J ( translation) S 118 J ( of) S 
1440 4320 P (meanings) S 60 J ( carefully) S 60 J ( crafted,) S 60 J ( but) S 60 J ( it) S 60 J ( would) S 60 J ( be) S 60 J ( possible,) S 60 J ( none) S 60 J ( the) S 60 J ( less.) S 
1440 5040 P 0 12 F 8 12 F B (F.) S 67 J ( Security) S 67 J ( Considerations) S E 
1440 5520 P 0 12 F 24 12 F (No) S 85 J ( means) S 86 J ( of) S 85 J ( authentication) S 86 J ( or) S 85 J ( integrity) S 86 J ( checking) S 85 J ( is) S 85 J ( specifically) S 85 J ( defined) S 85 J ( for) S 85 J ( this) S 85 J ( protocol) S 85 J ( apart) S 
1440 5760 P (from) S 63 J ( the) S 64 J ( checksum) S 63 J ( for) S 64 J ( the) S 63 J ( header) S 64 J ( information.) S 63 J ( ) S 63 J ( However) S 63 J ( for) S 63 J ( authentication) S 63 J ( or) S 63 J ( integrity) S 63 J ( checking) S 
1440 6000 P (to) S 76 J ( be) S 77 J ( used) S 76 J ( with) S 77 J ( this) S 76 J ( protocol,) S 76 J ( it) S 76 J ( is) S 76 J ( suggested) S 76 J ( that) S 76 J ( the) S 76 J ( authentication) S 76 J ( information) S 76 J ( be) S 76 J ( appended) S 76 J ( to) S 
1440 6240 P (the) S 71 J ( Encapsulated) S 72 J ( Datagram.) S 71 J ( ) S 72 J ( Information) S 71 J ( regarding) S 72 J ( the) S 71 J ( type) S 72 J ( of) S 72 J ( authentication) S 72 J ( or) S 72 J ( integrity) S 72 J ( check) S 
1440 6480 P (in) S 60 J ( use) S 61 J ( would) S 60 J ( have) S 61 J ( to) S 60 J ( be) S 61 J ( included) S 60 J ( in) S 61 J ( the) S 60 J ( flow) S 61 J ( management) S 60 J ( protocol) S 61 J ( which) S 60 J ( is) S 61 J ( used) S 61 J ( to) S 61 J ( distribute) S 61 J ( the) S 
1440 6720 P (flow) S 60 J ( information.) S 
1440 7440 P 0 12 F 24 12 F B (G.) S 60 J ( Authors') S 60 J ( Addresses) S E 
2160 7920 P 0 12 F 24 12 F (Robert) S 60 J ( A.) S 60 J ( Woodburn) S 
2160 8160 P (SAIC) S 
2160 8400 P (8619) S 60 J ( Westwood) S 60 J ( Center) S 60 J ( Drive) S 
2160 8640 P (Vienna,) S 60 J ( VA) S 60 J ( ) S 60 J ( 22182) S 
2160 9120 P (Phone:) S 60 J ( ) S 60 J ( \(703\)) S 60 J ( 734-9000) S 60 J ( or) S 60 J ( \(703\)) S 60 J ( 448-0210) S 
2160 9360 P (EMail:) S 60 J ( ) S 60 J ( woody@cseic.saic.com) S 
2160 9840 P (David) S 60 J ( L.) S 60 J ( Mills) S 
2160 10080 P (Electrical) S 60 J ( Engineering) S 60 J ( Department) S 
2160 10320 P (University) S 60 J ( of) S 60 J ( Delaware) S 
2160 10560 P (Newark,) S 60 J ( DE) S 60 J ( ) S 60 J ( 19716) S 
2160 11040 P (Phone:) S 60 J ( ) S 60 J ( \(302\)) S 60 J ( 451-8247) S 
2160 11280 P (EMail:) S 60 J ( ) S 60 J ( mills@udel.edu) S 
1440 14640 P (Woodburn) S 60 J ( &) S 60 J ( Mills) S 
10033 14640 P (Page) S 60 J ( ) S (15) S 0 12 F 
PE PSe

