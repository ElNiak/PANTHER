
# ev_parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMA GT LBR LCB LPAREN LT RBR RCB RPAREN SEMI SYMBOLevents : events : events eventevent : optdir SYMBOL optargs optsubsoptdir : optdir : GToptdir : LToptsubs : optsubs : SEMIoptsubs : LCB events RCBvalue : SYMBOLvalue : SYMBOL LPAREN list RPARENlist : valuelist : list COMMA valuevalue : LBR RBRvalue : LBR list RBRdict : SYMBOL COLON valuedict : dict COMMA SYMBOL COLON valuevalue : LCB RCBvalue : LCB dict RCBoptargs : optargs : LPAREN list RPAREN'
    
_lr_action_items = {'GT':([0,1,2,6,7,9,10,11,17,18,26,],[-1,4,-2,-20,-7,-3,-8,-1,4,-21,-9,]),'LT':([0,1,2,6,7,9,10,11,17,18,26,],[-1,5,-2,-20,-7,-3,-8,-1,5,-21,-9,]),'$end':([0,1,2,6,7,9,10,18,26,],[-1,0,-2,-20,-7,-3,-8,-21,-9,]),'SYMBOL':([0,1,2,3,4,5,6,7,8,9,10,11,15,16,17,18,19,20,26,31,32,36,],[-1,-4,-2,6,-5,-6,-20,-7,14,-3,-8,-1,14,25,-4,-21,14,14,-9,34,14,14,]),'RCB':([2,6,7,9,10,11,14,16,17,18,21,23,24,26,29,30,33,35,37,],[-2,-20,-7,-3,-8,-1,-10,23,26,-21,-14,-18,30,-9,-15,-19,-11,-16,-17,]),'SEMI':([6,7,18,],[-20,10,-21,]),'LCB':([6,7,8,15,18,19,20,32,36,],[-20,11,16,16,-21,16,16,16,16,]),'LPAREN':([6,14,],[8,20,]),'LBR':([8,15,19,20,32,36,],[15,15,15,15,15,15,]),'RPAREN':([12,13,14,21,23,27,28,29,30,33,],[18,-12,-10,-14,-18,-13,33,-15,-19,-11,]),'COMMA':([12,13,14,21,22,23,24,27,28,29,30,33,35,37,],[19,-12,-10,-14,19,-18,31,-13,19,-15,-19,-11,-16,-17,]),'RBR':([13,14,15,21,22,23,27,29,30,33,],[-12,-10,21,-14,29,-18,-13,-15,-19,-11,]),'COLON':([25,34,],[32,36,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'events':([0,11,],[1,17,]),'event':([1,17,],[2,2,]),'optdir':([1,17,],[3,3,]),'optargs':([6,],[7,]),'optsubs':([7,],[9,]),'list':([8,15,20,],[12,22,28,]),'value':([8,15,19,20,32,36,],[13,13,27,13,35,37,]),'dict':([16,],[24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> events","S'",1,None,None,None),
  ('events -> <empty>','events',0,'p_events','ivy_ev_parser.py',291),
  ('events -> events event','events',2,'p_events_events_event','ivy_ev_parser.py',295),
  ('event -> optdir SYMBOL optargs optsubs','event',4,'p_event_optdir_name_optargs_optsubs','ivy_ev_parser.py',300),
  ('optdir -> <empty>','optdir',0,'p_optdir','ivy_ev_parser.py',304),
  ('optdir -> GT','optdir',1,'p_optdir_gt','ivy_ev_parser.py',308),
  ('optdir -> LT','optdir',1,'p_optdir_lt','ivy_ev_parser.py',312),
  ('optsubs -> <empty>','optsubs',0,'p_optsubs','ivy_ev_parser.py',316),
  ('optsubs -> SEMI','optsubs',1,'p_optsubs_semi','ivy_ev_parser.py',320),
  ('optsubs -> LCB events RCB','optsubs',3,'p_optsubs_lcb_events_rcb','ivy_ev_parser.py',324),
  ('value -> SYMBOL','value',1,'p_value_symbol','ivy_ev_parser.py',328),
  ('value -> SYMBOL LPAREN list RPAREN','value',4,'p_value_symbol_lparen_list_rparen','ivy_ev_parser.py',332),
  ('list -> value','list',1,'p_list_value','ivy_ev_parser.py',336),
  ('list -> list COMMA value','list',3,'p_list_list_comma_value','ivy_ev_parser.py',340),
  ('value -> LBR RBR','value',2,'p_value_lbr_rbr','ivy_ev_parser.py',345),
  ('value -> LBR list RBR','value',3,'p_value_lbr_list_rbr','ivy_ev_parser.py',349),
  ('dict -> SYMBOL COLON value','dict',3,'p_dict_symbol_colon_value','ivy_ev_parser.py',353),
  ('dict -> dict COMMA SYMBOL COLON value','dict',5,'p_dict_dict_comma_key_colon_value','ivy_ev_parser.py',357),
  ('value -> LCB RCB','value',2,'p_value_lcb_rcb','ivy_ev_parser.py',362),
  ('value -> LCB dict RCB','value',3,'p_value_lcb_dict_rcb','ivy_ev_parser.py',366),
  ('optargs -> <empty>','optargs',0,'p_optargs','ivy_ev_parser.py',370),
  ('optargs -> LPAREN list RPAREN','optargs',3,'p_optargs_lp_args_rp','ivy_ev_parser.py',374),
]
