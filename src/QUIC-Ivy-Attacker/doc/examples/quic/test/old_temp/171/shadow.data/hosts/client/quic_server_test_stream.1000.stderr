
ARG__ 
0xb
770

ARG__ 
0xd
772

ARG__ 
1
1

ARG__ 
1
1
"http_request_file.txt"
PROOTPATH 5b /tmp/QUIC-FormalVerification
"/tmp/QUIC-FormalVerification/QUIC-Ivy-Attacker/doc/examples/quic/quic_utils/http_request_file.txt"
3
COUCOU
[71]
[71,69]
[71,69,84]
[71,69,84,32]
[71,69,84,32,47]
[71,69,84,32,47,105]
[71,69,84,32,47,105,110]
[71,69,84,32,47,105,110,100]
[71,69,84,32,47,105,110,100,101]
[71,69,84,32,47,105,110,100,101,120]
[71,69,84,32,47,105,110,100,101,120,46]
[71,69,84,32,47,105,110,100,101,120,46,104]
[71,69,84,32,47,105,110,100,101,120,46,104,116]
[71,69,84,32,47,105,110,100,101,120,46,104,116,109]
[71,69,84,32,47,105,110,100,101,120,46,104,116,109,108]
[71,69,84,32,47,105,110,100,101,120,46,104,116,109,108,10]
[71,69,84,32,47,105,110,100,101,120,46,104,116,109,108,10,10]
[71,69,84,32,47,105,110,100,101,120,46,104,116,109,108,10,10]
chrono time = start
C time = start
SOCKET 4
source port number 0
binding client id: client addr: 184549377 port: 4987
source port number 4987
SOCKET 5
source port number 0
binding client id: client_alt addr: 184549377 port: 4988
source port number 4988
between random: 101007718
between random: 101007713
between random: 101007718
between random: 22909
between random: 22909
create cid = 0
is_server  = 0
PROUT 3 
PROUT 4 
TEST_ALPN hq-29
INITIAL_VERSION 29
INITIAL_VERSION 29
tls_tags_map[quic_transport_parameters] 65445
etype =
ser-open_tag: bytes : 2
ser-open_tag: tag : 65445
ser-open_tag: tag != -1: 
TEST_TYPE server
ser-open_field: name 1: "quic_transport_parameters"
ser-open_field: flb : 2
ser-open_field: field_start.push_back(res.size()) : 4
ser-open_field: ffield_length_bytes.push_back(flb) : 2
ser-open_field: name_field_bytes 2: 0
ser-open_field: field_bytes: 0
ser-open_field: res.size() : 4
ser-open_field: name 1: "transport_parameters"
ser-open_field: field_start.push_back(res.size()) : 4
ser-open_field: ffield_length_bytes.push_back(flb) : 0
ser-open_field: name_field_bytes 2: 0
ser-open_field: field_bytes: 0
ser-open_field: res.size() : 4
ser-open_tag: bytes : 1
ser-open_tag: tag : 5
ser-open_tag: tag != -1: 
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_local"
ser-open_field: flb : 1
ser-open_field: field_start.push_back(res.size()) : 6
ser-open_field: ffield_length_bytes.push_back(flb) : 1
ser-open_field: name_field_bytes 2: 0
ser-open_field: field_bytes: 0
ser-open_field: res.size() : 6
ser-open_field: name 1: "stream_pos_32"
ser-open_field: field_start.push_back(res.size()) : 6
ser-open_field: ffield_length_bytes.push_back(flb) : 0
ser-open_field: name_field_bytes 1: -1
ser-open_field: field_bytes: -1
ser-open_field: res.size() : 6
ser-close_field: start : 6
ser-close_field: end : 8
ser-close_field: len : 2
ser-close_field: flb : 0
-------------------
ser-close_field: start : 6
ser-close_field: end : 8
ser-close_field: len : 2
ser-close_field: flb : 1
-------------------
ser-open_tag: bytes : 1
ser-open_tag: tag : 4
ser-open_tag: tag != -1: 
TEST_TYPE server
ser-open_field: name 1: "initial_max_data"
ser-open_field: flb : 1
ser-open_field: field_start.push_back(res.size()) : 10
ser-open_field: ffield_length_bytes.push_back(flb) : 1
ser-open_field: name_field_bytes 2: -1
ser-open_field: field_bytes: -1
ser-open_field: res.size() : 10
ser-open_field: name 1: "stream_pos_32"
ser-open_field: field_start.push_back(res.size()) : 10
ser-open_field: ffield_length_bytes.push_back(flb) : 0
ser-open_field: name_field_bytes 1: -1
ser-open_field: field_bytes: -1
ser-open_field: res.size() : 10
ser-close_field: start : 10
ser-close_field: end : 14
ser-close_field: len : 4
ser-close_field: flb : 0
-------------------
ser-close_field: start : 10
ser-close_field: end : 14
ser-close_field: len : 4
ser-close_field: flb : 1
-------------------
ser-open_tag: bytes : 1
ser-open_tag: tag : 1
ser-open_tag: tag != -1: 
TEST_TYPE server
ser-open_field: name 1: "max_idle_timeout"
ser-open_field: flb : 1
ser-open_field: field_start.push_back(res.size()) : 16
ser-open_field: ffield_length_bytes.push_back(flb) : 1
ser-open_field: name_field_bytes 2: -1
ser-open_field: field_bytes: -1
ser-open_field: res.size() : 16
ser-open_field: name 1: "seconds_16"
ser-open_field: field_start.push_back(res.size()) : 16
ser-open_field: ffield_length_bytes.push_back(flb) : 0
ser-open_field: name_field_bytes 1: -1
ser-open_field: field_bytes: -1
ser-open_field: res.size() : 16
ser-close_field: start : 16
ser-close_field: end : 20
ser-close_field: len : 4
ser-close_field: flb : 0
-------------------
ser-close_field: start : 16
ser-close_field: end : 20
ser-close_field: len : 4
ser-close_field: flb : 1
-------------------
ser-open_tag: bytes : 1
ser-open_tag: tag : 6
ser-open_tag: tag != -1: 
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_bidi_remote"
ser-open_field: flb : 1
ser-open_field: field_start.push_back(res.size()) : 22
ser-open_field: ffield_length_bytes.push_back(flb) : 1
ser-open_field: name_field_bytes 2: -1
ser-open_field: field_bytes: -1
ser-open_field: res.size() : 22
ser-open_field: name 1: "stream_pos_32"
ser-open_field: field_start.push_back(res.size()) : 22
ser-open_field: ffield_length_bytes.push_back(flb) : 0
ser-open_field: name_field_bytes 1: -1
ser-open_field: field_bytes: -1
ser-open_field: res.size() : 22
ser-close_field: start : 22
ser-close_field: end : 24
ser-close_field: len : 2
ser-close_field: flb : 0
-------------------
ser-close_field: start : 22
ser-close_field: end : 24
ser-close_field: len : 2
ser-close_field: flb : 1
-------------------
ser-open_tag: bytes : 1
ser-open_tag: tag : 7
ser-open_tag: tag != -1: 
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_data_uni"
ser-open_field: flb : 1
ser-open_field: field_start.push_back(res.size()) : 26
ser-open_field: ffield_length_bytes.push_back(flb) : 1
ser-open_field: name_field_bytes 2: -1
ser-open_field: field_bytes: -1
ser-open_field: res.size() : 26
ser-open_field: name 1: "stream_pos_32"
ser-open_field: field_start.push_back(res.size()) : 26
ser-open_field: ffield_length_bytes.push_back(flb) : 0
ser-open_field: name_field_bytes 1: -1
ser-open_field: field_bytes: -1
ser-open_field: res.size() : 26
ser-close_field: start : 26
ser-close_field: end : 30
ser-close_field: len : 4
ser-close_field: flb : 0
-------------------
ser-close_field: start : 26
ser-close_field: end : 30
ser-close_field: len : 4
ser-close_field: flb : 1
-------------------
ser-open_tag: bytes : 1
ser-open_tag: tag : 15
ser-open_tag: tag != -1: 
TEST_TYPE server
ser-open_field: name 1: "initial_source_connection_id"
ser-open_field: flb : 1
ser-open_field: field_start.push_back(res.size()) : 32
ser-open_field: ffield_length_bytes.push_back(flb) : 1
ser-open_field: name_field_bytes 2: -1
ser-open_field: field_bytes: -1
ser-open_field: res.size() : 32
ser-open_field: name 1: "scid"
ser-open_field: field_start.push_back(res.size()) : 32
ser-open_field: ffield_length_bytes.push_back(flb) : 0
ser-open_field: name_field_bytes 1: 8
ser-open_field: field_bytes: 8
ser-open_field: res.size() : 32
ser-close_field: start : 32
ser-close_field: end : 40
ser-close_field: len : 8
ser-close_field: flb : 0
-------------------
ser-close_field: start : 32
ser-close_field: end : 40
ser-close_field: len : 8
ser-close_field: flb : 1
-------------------
ser-open_tag: bytes : 1
ser-open_tag: tag : 12
ser-open_tag: tag != -1: 
TEST_TYPE server
ser-open_field: name 1: "disable_active_migration"
ser-open_field: flb : 1
ser-open_field: field_start.push_back(res.size()) : 42
ser-open_field: ffield_length_bytes.push_back(flb) : 1
ser-open_field: name_field_bytes 2: 8
ser-open_field: field_bytes: 8
ser-open_field: res.size() : 42
ser-close_field: start : 42
ser-close_field: end : 42
ser-close_field: len : 0
ser-close_field: flb : 1
-------------------
ser-open_tag: bytes : 1
ser-open_tag: tag : 8
ser-open_tag: tag != -1: 
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_bidi"
ser-open_field: flb : 1
ser-open_field: field_start.push_back(res.size()) : 44
ser-open_field: ffield_length_bytes.push_back(flb) : 1
ser-open_field: name_field_bytes 2: 8
ser-open_field: field_bytes: 8
ser-open_field: res.size() : 44
ser-open_field: name 1: "stream_id_16"
ser-open_field: field_start.push_back(res.size()) : 44
ser-open_field: ffield_length_bytes.push_back(flb) : 0
ser-open_field: name_field_bytes 1: -1
ser-open_field: field_bytes: -1
ser-open_field: res.size() : 44
ser-close_field: start : 44
ser-close_field: end : 48
ser-close_field: len : 4
ser-close_field: flb : 0
-------------------
ser-close_field: start : 44
ser-close_field: end : 48
ser-close_field: len : 4
ser-close_field: flb : 1
-------------------
ser-open_tag: bytes : 1
ser-open_tag: tag : 9
ser-open_tag: tag != -1: 
TEST_TYPE server
ser-open_field: name 1: "initial_max_stream_id_uni"
ser-open_field: flb : 1
ser-open_field: field_start.push_back(res.size()) : 50
ser-open_field: ffield_length_bytes.push_back(flb) : 1
ser-open_field: name_field_bytes 2: -1
ser-open_field: field_bytes: -1
ser-open_field: res.size() : 50
ser-open_field: name 1: "stream_id_16"
ser-open_field: field_start.push_back(res.size()) : 50
ser-open_field: ffield_length_bytes.push_back(flb) : 0
ser-open_field: name_field_bytes 1: -1
ser-open_field: field_bytes: -1
ser-open_field: res.size() : 50
ser-close_field: start : 50
ser-close_field: end : 54
ser-close_field: len : 4
ser-close_field: flb : 0
-------------------
ser-close_field: start : 50
ser-close_field: end : 54
ser-close_field: len : 4
ser-close_field: flb : 1
-------------------
ser-close_field: start : 4
ser-close_field: end : 54
ser-close_field: len : 50
ser-close_field: flb : 0
-------------------
ser-close_field: start : 4
ser-close_field: end : 54
ser-close_field: len : 50
ser-close_field: flb : 2
-------------------
etype =65445
len =50
ptls_exts[i].type = 65445
ptls_exts[i].len = 50
ptls_set_negotiated_protocol
ptls_is_psk_handshake= 0
picotls_do_handshake ptls_handle_message end 
PICOTLS RETURNED PTLS_ERROR_IN_PROGRESS 514
[1,0,0,211,3,3,238,59,180,67,196,232,121,6,254,224,11,77,75,129,6,143,82,140,251,183,230,82,190,91,78,109,199,201,21,174,40,245,0,0,6,19,1,19,2,19,3,1,0,0,164,0,51,0,38,0,36,0,29,0,32,213,90,208,238,68,214,112,104,51,73,186,52,34,249,7,146,80,138,192,251,175,67,100,57,197,17,123,10,185,49,11,122,0,0,0,15,0,13,0,0,10,115,101,114,118,101,114,110,97,109,101,0,16,0,8,0,6,5,104,113,45,50,57,0,43,0,9,8,3,4,127,28,127,27,127,26,0,13,0,10,0,8,8,4,4,3,4,1,2,1,0,10,0,6,0,4,0,29,0,23,255,165,0,50,5,2,96,0,4,4,134,5,65,102,1,4,134,5,65,97,6,2,96,0,7,4,134,5,65,102,15,8,0,0,0,0,0,0,0,1,12,0,8,4,128,0,89,125,9,4,128,0,89,125]
0

tag v1: 1
Tag size: 1
tags[0]: "tls.client_hello"
value_size: 0
deser-open_field: name : "tls.client_hello"
deser-open_field: length_field_bytes : 3
deser-open_field: flength : 211
deser-open_field: name : "client_version"
4) pkt-pos =  215
deser-open_field: field_bytes : 2
deser-open_field: name : "rand_info"
4) pkt-pos =  215
deser-open_field: name : "gmt_unix_time"
4) pkt-pos =  215
deser-open_field: field_bytes : 4
deser-open_field: name : "random_bytes"
deser-open_field: name : "session_id"
deser-open_field: length_field_bytes : 1
deser-open_field: flength : 0
deser-open_field: tls_field_bytes_map["session_id"] : 0
deser-open_field: field_bytes : 1
deser-open_field: name : "cipher_suites"
deser-open_field: length_field_bytes : 2
deser-open_field: flength : 6
deser-open_field: tls_field_bytes_map["cipher_suites"] : 6
deser-open_field: field_bytes : 2
deser-open_field: name : "compression_methods"
deser-open_field: length_field_bytes : 1
deser-open_field: flength : 1
deser-open_field: tls_field_bytes_map["compression_methods"] : 1
deser-open_field: field_bytes : 1
deser-open_field: name : "extensions"
deser-open_field: length_field_bytes : 2
deser-open_field: flength : 164
tag v1: 51
Tag size: 1
tags[0]: "tls.unknown_extension"
value_size: 0
deser-open_field: name : "tls.unknown_extension"
4) pkt-pos =  215
deser-open_field: name : "etype"
4) pkt-pos =  215
deser-open_field: field_bytes : 2
deser-open_field: name : "content"
deser-open_field: length_field_bytes : 2
deser-open_field: flength : 38
deser-open_field: tls_field_bytes_map["content"] : 38
deser-open_field: field_bytes : 1
tag v1: 0
Tag size: 1
tags[0]: "tls.unknown_extension"
value_size: 0
deser-open_field: name : "tls.end_of_early_data"
4) pkt-pos =  215
tag v1: 15
Tag size: 1
tags[0]: "tls.unknown_extension"
value_size: 0
deser-open_field: name : "tls.unknown_extension"
4) pkt-pos =  215
deser-open_field: name : "etype"
4) pkt-pos =  215
deser-open_field: field_bytes : 2
deser-open_field: name : "content"
deser-open_field: length_field_bytes : 2
deser-open_field: flength : 13
deser-open_field: tls_field_bytes_map["content"] : 13
deser-open_field: field_bytes : 1
tag v1: 16
Tag size: 1
tags[0]: "tls.unknown_extension"
value_size: 0
deser-open_field: name : "tls.unknown_extension"
4) pkt-pos =  215
deser-open_field: name : "etype"
4) pkt-pos =  215
deser-open_field: field_bytes : 2
deser-open_field: name : "content"
deser-open_field: length_field_bytes : 2
deser-open_field: flength : 8
deser-open_field: tls_field_bytes_map["content"] : 8
deser-open_field: field_bytes : 1
tag v1: 43
Tag size: 1
tags[0]: "tls.unknown_extension"
value_size: 0
deser-open_field: name : "tls.unknown_extension"
4) pkt-pos =  215
deser-open_field: name : "etype"
4) pkt-pos =  215
deser-open_field: field_bytes : 2
deser-open_field: name : "content"
deser-open_field: length_field_bytes : 2
deser-open_field: flength : 9
deser-open_field: tls_field_bytes_map["content"] : 9
deser-open_field: field_bytes : 1
tag v1: 13
Tag size: 1
tags[0]: "tls.unknown_extension"
value_size: 0
deser-open_field: name : "tls.unknown_extension"
4) pkt-pos =  215
deser-open_field: name : "etype"
4) pkt-pos =  215
deser-open_field: field_bytes : 2
deser-open_field: name : "content"
deser-open_field: length_field_bytes : 2
deser-open_field: flength : 10
deser-open_field: tls_field_bytes_map["content"] : 10
deser-open_field: field_bytes : 1
tag v1: 10
Tag size: 1
tags[0]: "tls.unknown_extension"
value_size: 0
deser-open_field: name : "tls.unknown_extension"
4) pkt-pos =  215
deser-open_field: name : "etype"
4) pkt-pos =  215
deser-open_field: field_bytes : 2
deser-open_field: name : "content"
deser-open_field: length_field_bytes : 2
deser-open_field: flength : 6
deser-open_field: tls_field_bytes_map["content"] : 6
deser-open_field: field_bytes : 1
tag v1: 65445
Tag size: 4
tags[0]: "tls.unknown_extension"
value_size: 0
deser-open_field: name : "quic_transport_parameters"
deser-open_field: length_field_bytes : 2
deser-open_field: flength : 50
deser-open_field: name : "transport_parameters"
4) pkt-pos =  215
tag v1: 5
Tag size: 1
tags[0]: "original_destination_connection_id"
value_size: 0
deser-open_field: name : "initial_max_stream_data_bidi_local"
deser-open_field: length_field_bytes : 1
deser-open_field: flength : 2
deser-open_field: name : "stream_pos_32"
4) pkt-pos =  169
deser-open_field: field_bytes : -1
tag v1: 4
Tag size: 1
tags[0]: "original_destination_connection_id"
value_size: 0
deser-open_field: name : "initial_max_data"
deser-open_field: length_field_bytes : 1
deser-open_field: flength : 4
deser-open_field: name : "stream_pos_32"
4) pkt-pos =  175
deser-open_field: field_bytes : -1
tag v1: 1
Tag size: 1
tags[0]: "original_destination_connection_id"
value_size: 0
deser-open_field: name : "max_idle_timeout"
deser-open_field: length_field_bytes : 1
deser-open_field: flength : 4
deser-open_field: name : "seconds_16"
4) pkt-pos =  181
deser-open_field: field_bytes : -1
tag v1: 6
Tag size: 1
tags[0]: "original_destination_connection_id"
value_size: 0
deser-open_field: name : "initial_max_stream_data_bidi_remote"
deser-open_field: length_field_bytes : 1
deser-open_field: flength : 2
deser-open_field: name : "stream_pos_32"
4) pkt-pos =  185
deser-open_field: field_bytes : -1
tag v1: 7
Tag size: 1
tags[0]: "original_destination_connection_id"
value_size: 0
deser-open_field: name : "initial_max_stream_data_uni"
deser-open_field: length_field_bytes : 1
deser-open_field: flength : 4
deser-open_field: name : "stream_pos_32"
4) pkt-pos =  191
deser-open_field: field_bytes : -1
tag v1: 15
Tag size: 1
tags[0]: "original_destination_connection_id"
tag: 15
value_size: 8
value_size: 8
deser-open_field: name : "initial_source_connection_id"
deser-open_field: length_field_bytes : 1
deser-open_field: flength : 8
deser-open_field: name : "scid"
4) pkt-pos =  201
deser-open_field: field_bytes : 8
tag v1: 12
Tag size: 1
tags[0]: "original_destination_connection_id"
value_size: 0
deser-open_field: name : "disable_active_migration"
deser-open_field: length_field_bytes : 1
deser-open_field: flength : 0
tag v1: 8
Tag size: 1
tags[0]: "original_destination_connection_id"
value_size: 0
deser-open_field: name : "initial_max_stream_id_bidi"
deser-open_field: length_field_bytes : 1
deser-open_field: flength : 4
deser-open_field: name : "stream_id_16"
4) pkt-pos =  209
deser-open_field: field_bytes : -1
tag v1: 9
Tag size: 1
tags[0]: "original_destination_connection_id"
value_size: 0
deser-open_field: name : "initial_max_stream_id_uni"
deser-open_field: length_field_bytes : 1
deser-open_field: flength : 4
deser-open_field: name : "stream_id_16"
4) pkt-pos =  215
deser-open_field: field_bytes : -1
PICOTLS handshake handle message finish
C time = now_micros_last_bp
C time = now_micros_last_bp - timer started
C time = now_micros_last_bp - time = 12540
scid_size_pos size: 8
dcid_size_cl size: 8
setup_initial_traffic_keys cid: 0
setup_initial_traffic_keys session: 0
setup_initial_traffic_keys
[175,191,236,40,153,147,210,76,158,151,134,241,156,97,17,224,67,144,168,153][0,0,0,0,0,0,0,1]setup_initial_traffic_keys 2 
setup_initial_traffic_keys 3
setup_initial_traffic_keys 4
setup_initial_traffic_keys 5
quic_set_key_from_secret 1
quic_set_key_from_secret 2v
quic_set_key_from_secret 3v
setup_initial_traffic_keys 6
quic_set_key_from_secret 1
quic_set_key_from_secret 2q
quic_set_key_from_secret 3q
setup_initial_traffic_keys salt: [175,191,236,40,153,147,210,76,158,151,134,241,156,97,17,224,67,144,168,153]
setup_initial_traffic_keys ikm: [0,0,0,0,0,0,0,1]
ser res init 0
ser res dcid 1 1
ser res dcid 2 1
ser res scid_h 1 1
ser res scid_h 1 1
open_list len 0
ser: quic_crypto_offset   = 0
ser: quic_ack_frequency   = quic_ack_frequency
ser: quic_ack_frequency   = quic_ack_frequency_ack_eliciting_threshold
ser: quic_ack_frequency   = quic_ack_frequency_request_max_ack_delay
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
ser: quic_ack_frequency   = quic_ack_frequency_reordering_threshold
iv_size start 
iv_size cid 0
iv_size level 0
iv_size end 16
encrypt_aead start l 0
encrypt_aead start c 0
encrypt_aead aead 0x555559cb13e0
encrypt_aead encrypted  1
encrypt_aead encrypted 1202
encrypt_aead finish 
encrypt_cipher start 
encrypt_cipher c 0
encrypt_cipher iv [81,247,208,179,34,97,215,167,36,90,148,245,49,12,109,174]
encrypt_cipher pn_enc 0x55555995f240
encrypt_cipher end [250,95,47,176,28]
C time = now_micros
C time = now_micros - timer started
C time = now_micros - time = 13025
C time = now_micros
C time = now_micros - timer started
C time = now_micros - time = 13032
C time = now_micros
C time = now_micros - timer started
C time = now_micros - time = 13040
C time = now_micros
C time = now_micros - timer started
C time = now_micros - time = 13051
sending from socket: 4
port number 4987
sending to id: [[201,255,0,0,29,8,0,0,0,0,0,0,0,1,8,0,0,0,0,0,0,0,1,0,68,182,95,47,176,29,81,247,208,179,34,97,215,167,36,90,148,245,49,12,109,174,231,47,197,42,112,130,113,104,243,210,197,142,35,169,21,4,15,135,222,204,95,121,179,81,112,191,238,77,40,137,91,40,36,210,165,26,69,26,51,66,206,149,237,12,231,153,1,197,30,207,122,206,99,143,160,178,169,163,34,89,207,145,252,60,3,152,49,69,219,210,72,123,243,29,41,197,54,220,235,122,134,31,31,23,23,22,150,131,147,228,216,29,70,191,173,228,165,136,196,178,190,233,20,14,88,94,179,215,124,192,251,201,7,150,64,16,37,139,6,212,246,110,255,39,43,200,19,56,110,188,160,64,251,196,171,225,123,174,112,139,255,191,76,25,189,201,142,149,72,8,0,23,162,97,67,56,12,254,126,22,38,98,255,138,209,167,60,138,44,104,169,50,229,31,109,44,6,122,194,224,237,236,174,79,128,115,89,117,132,209,82,68,97,253,246,35,210,4,26,213,206,33,166,80,8,208,182,197,7,41,38,226,90,141,13,184,73,52,203,131,84,3,251,37,132,16,34,190,239,73,114,255,41,118,56,217,83,21,170,31,189,167,217,132,218,66,65,163,9,102,78,60,224,70,89,97,152,102,181,205,170,73,105,103,56,66,44,134,131,184,145,93,15,175,111,97,210,59,193,144,142,124,183,207,187,216,70,182,53,126,164,240,255,135,70,41,96,170,4,118,139,12,217,209,106,18,172,233,88,191,178,48,75,147,56,43,17,36,21,81,207,195,121,3,216,128,0,102,241,47,26,103,153,97,152,88,103,117,161,18,105,196,189,56,204,27,50,98,20,119,178,214,202,212,196,209,88,24,242,115,233,9,24,133,200,134,249,213,186,118,9,112,168,219,168,63,97,213,75,120,184,9,169,164,133,232,229,125,139,22,242,114,140,251,217,152,245,166,51,230,68,92,131,230,62,34,178,64,218,245,76,222,233,84,201,49,55,64,84,79,150,64,243,35,200,171,85,183,16,155,236,77,50,9,252,62,207,192,149,45,54,196,95,58,13,199,253,23,99,126,170,165,211,142,18,203,132,90,85,152,163,10,69,8,24,180,89,46,58,224,102,77,170,32,145,228,254,30,42,90,161,140,197,228,26,89,249,23,106,69,231,180,77,33,145,12,103,23,153,207,152,246,17,63,129,224,96,201,49,6,152,135,228,199,25,123,158,170,125,21,136,253,102,237,115,100,245,11,186,13,210,7,198,122,26,17,69,54,165,39,56,191,76,233,163,92,140,234,73,6,12,92,123,204,39,202,53,70,149,68,19,35,160,245,246,222,82,255,166,27,131,7,191,98,10,215,93,65,217,181,189,4,110,239,162,154,77,114,62,155,31,85,156,110,117,204,21,14,122,68,63,34,101,165,182,74,200,180,105,83,71,150,232,116,80,213,8,120,147,142,182,181,33,160,48,36,249,247,234,169,46,252,150,133,200,69,58,2,55,57,113,169,140,175,60,41,20,133,9,149,222,53,130,91,34,246,140,103,20,232,73,35,209,66,64,30,68,14,77,53,120,159,46,14,139,68,32,18,215,114,74,67,129,242,89,180,233,206,135,1,234,204,99,171,62,145,47,243,45,221,60,201,151,21,37,239,25,116,89,206,214,8,166,169,183,84,138,105,195,85,207,206,8,135,134,155,193,39,8,32,206,142,166,73,204,252,230,188,8,177,83,74,1,238,225,158,5,19,18,222,84,136,172,155,150,95,110,188,206,241,36,112,44,109,241,182,22,16,77,162,235,118,187,30,241,164,54,244,110,198,116,43,60,218,62,97,240,114,23,243,17,175,222,230,225,254,241,107,141,89,35,132,253,216,149,187,157,223,252,83,48,43,187,37,244,241,23,7,202,123,56,57,16,228,95,243,233,191,176,84,254,75,47,126,223,127,186,15,48,196,46,248,10,122,68,96,114,42,76,58,214,206,191,31,153,165,131,64,126,66,43,3,24,64,210,170,235,200,122,54,33,87,222,156,238,81,81,32,90,113,60,35,182,189,24,206,31,133,150,179,102,120,42,225,97,68,65,114,176,223,180,148,161,93,184,25,11,61,255,153,27,60,8,254,171,228,125,178,48,8,107,32,39,147,109,95,17,8,219,127,131,196,82,27,85,143,116,6,239,198,155,115,26,213,254,108,5,65,129,188,159,165,66,89,83,45,235,234,1,15,242,112,124,200,167,65,122,13,198,227,43,169,181,193,58,49,33,169,154,250,140,39,172,111,156,40,154,14,64,252,168,30,29,103,250,124,195,7,31,174,163,182,173,216,88,217,229,240,89,29,160,15,181,94,108,77,58,138,144,18,190,35,218,216,222,41,240,0,80,45,172,170,28,104,244,135,0,51,207,91,135,49,193,234,152,131,211,187,56,185,17,53,57,190,80,125,180,88,102,221,184,152,198,168,87,75,161,0,239,96,166,201,245,105,139,55,213,137,110,249,44,164,202,97,223,12,231,62,156,27,198,141,172,91,155,157,167,102,14,214,166,60,167,29,140,32,154,221,62,247,214,124,188,154,134,157,143,46,123,247,98,107,182,201,99,251,39,177,82,116,223,229,11,56,171,63,110,1,87,179,82,43,74,166,150,79,95,0,124,132,50,104,5,133,124,35,127,99,100,108,18,41,44,247,166,195,180,194,133,51,247,242,169,142,97,234,178,53,18,92,38,9,63,189,64,80]]
sending to id: client addr: 184549378 port: 4443
port number 4987
sending id finish
