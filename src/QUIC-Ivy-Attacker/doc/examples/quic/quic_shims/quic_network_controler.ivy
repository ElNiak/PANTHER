#lang ivy1.7


parameter drop_n : pkt_num = 444444       # mean disabled
parameter drop_every_n : pkt_num = 444444 # mean disabled

parameter temporary_delay : milliseconds = 0
parameter permanent_delay : milliseconds = 0
parameter start_delay : milliseconds = 0
parameter drop_delay : milliseconds = 0

function current_recv_pkt : pkt_num
function current_sent_pkt : pkt_num


after init {
    current_recv_pkt := 0;
    current_sent_pkt := 0;
}

action modulo(n: pkt_num, m:pkt_num) returns (m: pkt_num) = {
    <<<
    m = n % 2;
    >>>
}

action is_lost_recv returns (ok:bool) = {
    ok := false;
    if (drop_n ~= 444444) {
        if (current_recv_pkt = drop_n) {
            ok := true;
        }
    }
    if (drop_every_n ~= 444444) {
        if (modulo(current_recv_pkt, drop_every_n) = 0) {
            ok := true;
        }
    }
    current_recv_pkt := current_recv_pkt + 1;
    if (~ok) {
        # todo get current time to check start delay
        var delay :milliseconds := 0;
        if (permanent_delay ~= 0) {
            delay := permanent_delay;
        } else if(temporary_delay ~= 0) {
            delay := temporary_delay;
        }
    }

}

action is_lost_sent returns (ok:bool) = {
    ok := false;
    if (drop_n ~= 444444) {
        if (current_sent_pkt = drop_n) {
            ok := true;
        }
    }
    if (drop_every_n ~= 444444) {
        if (modulo(current_sent_pkt, drop_every_n) = 0) {
            ok := true;
        }
    }
    current_sent_pkt := current_sent_pkt + 1;
    if (~ok) {
        # todo get current time to check start delay
        var delay :milliseconds := 0;
        if (permanent_delay ~= 0) {
            delay := permanent_delay;
        } else if(temporary_delay ~= 0) {
            delay := temporary_delay;
        }
    }

}


action is_lost_sent_example_ext_ack_freq returns (ok:bool) = {
    ok := false;
    if (current_sent_pkt = 2 | current_sent_pkt = 6 | current_sent_pkt = 7) {
        ok := true;
    }
    current_sent_pkt := current_sent_pkt + 1;
    if (~ok) {
        # todo get current time to check start delay
        var delay :milliseconds := 0;
        if (permanent_delay ~= 0) {
            delay := permanent_delay;
        } else if(temporary_delay ~= 0) {
            delay := temporary_delay;
        }
    }

}

action is_lost_recv_example_ext_ack_freq returns (ok:bool) = {
    ok := false;
    if (current_recv_pkt = 2 | current_recv_pkt = 6 | current_recv_pkt = 7) {
        ok := true;
    }
    current_recv_pkt := current_recv_pkt + 1;
    if (~ok) {
        # todo get current time to check start delay
        var delay :milliseconds := 0;
        if (permanent_delay ~= 0) {
            delay := permanent_delay;
        } else if(temporary_delay ~= 0) {
            delay := temporary_delay;
        }
    }

}