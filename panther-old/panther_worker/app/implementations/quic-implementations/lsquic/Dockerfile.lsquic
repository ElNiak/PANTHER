ARG image

FROM $image:latest

WORKDIR /

RUN apt-get update && \
    apt-get install -y apt-utils build-essential git cmake software-properties-common \
                       zlib1g-dev libevent-dev

RUN add-apt-repository ppa:longsleep/golang-backports && \
    apt-get update && \
    apt-get install -y golang-1.21-go && \
    cp /usr/lib/go-1.21/bin/go* /usr/bin/.

ENV GOROOT /usr/lib/go-1.21

WORKDIR /app/implementations/quic-implementations/

# ADD panther/panther_worker/app/implementations/quic-implementations/boringssl /app/implementations/quic-implementations/boringssl
RUN git clone https://boringssl.googlesource.com/boringssl; cd boringssl; git checkout 9fc1c33e9c21439ce5f87855a6591a9324e569fd; git submodule init; git submodule update

# ADD panther/panther_worker/app/implementations/quic-implementations/lsquic    /app/implementations/quic-implementations/lsquic
RUN git clone https://github.com/litespeedtech/lsquic.git;  cd lsquic;    git checkout v4.0.9; git submodule update --init; 



WORKDIR /app/implementations/quic-implementations/boringssl/
ENV PATH="/go/bin:${PATH}"
RUN cmake . &&  make
ENV BORINGSSL=/app/implementations/quic-implementations/boringssl/


WORKDIR /app/implementations/quic-implementations/lsquic/
# RUN git checkout 0a4f8953dc92dd3085e48ed90f293f052cff8427 # 639c9e685d37e74d357d3dd8599b9dbff90934af
COPY lsquic/rfc9000/lsquic_types.h /app/implementations/quic-implementations/lsquic/include/lsquic_types.h
RUN cmake -DBORINGSSL_DIR=/app/implementations/quic-implementations/boringssl/ .
RUN make
RUN make test || true

WORKDIR /app

